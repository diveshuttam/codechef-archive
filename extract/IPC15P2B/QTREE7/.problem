{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\nOn her B'day, Ira got a <a href = \"https://en.wikipedia.org/wiki/Tree_%28graph_theory%29\">Tree</a> containing <b>N </b>nodes as a gift from her best friend. All the nodes of the tree, number from <b>1</b> to <b>N</b>, contains light bulb, which can glow either <b>white</b> or <b>black</b>. Initially all the bulbs are glowing <b>white</b>.  All the nodes also contain some integer value, say <b>i<sup>th</sup></b> one contains <b>val<sub>i</sub></b>. These initial values will be given in the input. In order to add more joy to the occasion, she started asking her friend some questions. In total she asked him <b>Q</b> questions one by one. </p>\n<p>\nA question can be one of the following three types - </p>\n<ul>\n<li> M <b>u v m f </b>\n<p> This means that you need to do the following with the nodes that come in the path from node <b>u</b> to node <b>v</b>. </p>\n<p>Multiply the value stored in the nodes by <b>m </b>.  If <b>f = 1</b>, then  flip the colour of the bulbs, otherwise do not change the colour of the bulbs.</p>\n</li>\n<li> A <b> u v a d f </b>\n<p> This means that you need to add an Arithmetic progression whose first term is <b>a </b> and common difference is <b> d</b>. <b>a</b> is added in node <b>u</b>. Meaning of <b>f </b> is same as described earlier.</p>\n</li>\n<li>Q <b>u v</b>\n<p> Meaning you need to find out the following things about the path from <b>u</b> to <b>v</b>. Call the sum of all the elements in the path from <b>u</b> to <b>v</b> be <b> sum </b>. Following cases may occur. In each case print the answer as described.</p>\n<ul>\n<p>\n<li> If all the nodes are of same colour from u to v then, what is the colour.  Call it <b>col</b>.\n<ul>\n<li> Print : \u00a0\u00a0 \"<b>sum</b> Uniform <b>col</b>\" \u00a0\u00a0\u00a0 (without quotes) respectively in a line. </li></ul></li></p>\n</ul></li>\n</ul>\n<p>\n<li>If they are not same, then find the first node in the path from u to v where colour change happened. Call this node <b>x</b> and it's colour <b> col</b>.\n<ul>\n<li> Print : \u00a0\u00a0 \"<b>sum</b> Non-uniform <b>x col</b>\" \u00a0\u00a0\u00a0 (without quotes) respectively in a line.</li>\n</ul>\n</li></p>\n\n\n<p>Value of col can either be \"white\" or \"black\". Since the value of <b>sum</b> can be huge or negative, you just need to find it modulo <b>10<sup>9</sup>+7</b>. Modulo for negative integers is also defined. It is defined as - minimum non negative integer that need to be subtracted from it so that it becomes divisible by <b>10<sup>9</sup>+7</b>. Nothing special about the definition, its just for information.\n \n\n</p>\n<h3>Input</h3>\n<ul>\n<li>First line contains two integers <b>N</b> and <b>Q</b> respectively. N-1 lines follows, each containing two integers <b>u</b> and <b>v</b> denoting there is an edge between them.</li>\n<li>The next line contains <b>N</b> space-separated integers.<b> i<sup>th</sup></b> integer denotes the initial value, <b>val<sub>i</sub></b> at  node numbered <b>i</b>. </li>\n<li> In the next <b>Q</b> lines, each contains a query of one of the type as described above.</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>For each query of third type, output a single line containing the answer to that query.</li>\n</ul>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>N, Q </b> \u2264 <b> 100000 </b></li>\n<li><b>1</b> \u2264 <b>u, v, x </b> \u2264 <b> N </b></li>\n<li><b>-10<sup>9</sup></b> \u2264 <b>a, d, m, val<sub>i</sub> </b> \u2264 <b> 10<sup>9</sup></b></li>\n<li><b>0</b> \u2264 <b> f </b> \u2264 <b> 1</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n8 10\n1 2\n1 3\n3 6\n3 5\n3 4\n5 7\n5 8\n1 2 1 3 1 2 1 2\nQ 7 6\nM 7 8 1 1\nQ 5 2\nQ 3 2\nQ 5 8\nA 3 6 6 -2 0\nQ 3 1\nM 3 2 -3 1\nQ 4 2\nQ 7 2\n\n<b>Output:</b>\n5 Uniform white\n5 Non-uniform 3 white\n4 Uniform white\n3 Uniform black\n8 Uniform white\n999999980 Non-uniform 3 black\n999999979 Uniform black\n\n</pre><h3>Explanation</h3>\n<p><b>Example case 1.</b> ...</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "28-01-2016",
    "is_direct_submittable": false,
    "contest_name": "ICPC Preparatory Series by Team Horcruxes",
    "languages_supported": "C, CPP14, JAVA",
    "todo": false,
    "time": {
        "view_start_date": 1454513400,
        "end_date": 1454531400,
        "practice_submission_allowed": true,
        "visible_start_date": 1454531400,
        "submit_start_date": 1454513400,
        "current": 1537435558
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>triveni</span>",
    "problem_name": "Query on a Tree - VII",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/triveni'>triveni</a>",
    "problem_tester_html_handle": "",
    "problem_author": "triveni",
    "contest_code": "IPC15P2B",
    "max_timelimit": "3",
    "problem_code": "QTREE7"
}