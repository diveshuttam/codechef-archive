{
    "problem_code": "BRLADDER",
    "problem_author": "errichto",
    "contest_name": "March Lunchtime 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>errichto</span>",
    "problem_name": "Bear and Ladder",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>kingofnumbers</span>",
    "contest_code": "LTIME46",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cakewalk'>cakewalk</a>, <a class='problem-tag-small ' href='/tags/problems/errichto'>errichto</a>, <a class='problem-tag-small ' href='/tags/problems/ltime46'>ltime46</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME46/mandarin/BRLADDER.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME46/russian/BRLADDER.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME46/vietnamese/BRLADDER.pdf\">Vietnamese</a> as well.</h3>\n\n\n<p>Bearland has infinitely many cities, numbered starting from 1.\nSome pairs of cities are connected with bidirectional roads:</p>\n\n<ul>\n  <li>There are roads 1-2, 3-4, 5-6, 7-8, and so on (there is a road between cities 2*i+1 and 2*i+2 for every non-negative integer i).</li>\n  <li>There are roads 1-3, 3-5, 5-7, 7-9, ... (between every two consecutive odd numbers).</li>\n  <li>There are roads 2-4, 4-6, 6-8, 8-10, ... (between every two consecutive even numbers).</li>\n</ul>\n\n<p>This is how the first few cities and roads between them look like:</p>\n\n<p><img src=\"https://codechef_shared.s3.amazonaws.com/uploads/2017/03/LTIME46/BRLADDER.png\" /></p>\n\n<p>\nYou are given <b>Q</b> queries.\nIn each query, for the given pair of different cities <b>a</b> and <b>b</b>, you should check if there is a road between them.\nFor each query, print \"YES\" or \"NO\" accordingly.\n</p>\n\n\n<h3>Input</h3>\n\n<p>The first line of the input contains an integer <b>Q</b>, denoting the number of queries.</p>\n\n<p>Each of the following <b>Q</b> lines contains two distinct integers <b>a</b> and <b>b</b>, denoting two cities in one query.</p>\n\n<h3>Output</h3>\n\n<p>For each query, output a single line containing the answer \u2014 \"YES\" if there is a road between the given cities <b>a</b> and <b>b</b>, and \"NO\" otherwise (without the quotes).</p>\n\n<h3>Constraints</h3>\n\n<ul>\n<li>1 \u2264\u00a0<b>Q</b> \u2264 1000</li>\n<li>1 \u2264 <b>a</b>, <b>b</b> \u2264 10<sup>9</sup></li>\n<li><b>a</b> \u2260 <b>b</b></li>\n</ul>\n\n\n\n<h3>Example</h3>\n\n<pre><b>Input:</b>\n7\n1 4\n4 3\n5 4\n10 12\n1 3\n999999999 1000000000\n17 2384823\n\n<b>Output:</b>\nNO\nYES\nNO\nYES\nYES\nYES\nNO\n</pre>\n\n<h3>Explanation</h3>\n\n<p>In the example test, the answer is \"YES\" for pairs (4, 3), (10, 12), (1, 3) and (999999999, 1000000000).\nRoads 3-4 and 1-3 you can see on the drawing in the statement.</p>\n\n<p>The answer is \"NO\" for example for a pair (1, 4), because there is no road between cities 1 and 4.</p>",
    "category_name": "main",
    "date_added": "24-03-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/BRLADDER",
    "problem_tester": "kingofnumbers",
    "time": {
        "view_start_date": 1490450400,
        "end_date": 1490461200,
        "practice_submission_allowed": true,
        "visible_start_date": 1490461200,
        "submit_start_date": 1490450400,
        "current": 1537433968
    },
    "user": {
        "username": ""
    }
}