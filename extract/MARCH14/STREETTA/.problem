{
    "problem_code": "STREETTA",
    "problem_author": "tuananh93",
    "contest_name": "March Challenge 2014",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>tuananh93</span>",
    "problem_name": "The Street ",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "MARCH14",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/march14'>march14</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/segment-tree'>segment-tree</a>, <a class='problem-tag-small ' href='/tags/problems/tuananh93'>tuananh93</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/MARCH14/mandarin/STREETTA.pdf\">Mandarin Chinese </a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/MARCH14/russian/STREETTA.pdf\">Russian</a>.</h3>\n<p>The String street is known as the busiest street in Codeland.<br />\nTourists from all over the world want to visit the street once they are in Codeland.<br />\nThe Chef owns <b>N</b> souvenir stores across the street (numbered from <b>1</b> to <b>N</b>).<br />\nAt the beginning there is no souvenir in any store, the Chef has some plans to add some new items.<br />\nEach the Chef's plan is represented by 4 numbers: <b>u v a b</b> which mean an items with price <b>b</b><br />\nis added to the store <b>u</b>, an items with price <b>a + b</b> is added to the store <b>u + 1</b> and so on.<br />\nMore formally, an item with price <b>a * i + b</b> is added to the store <b>u + i</b> for all (<b>0 \u2264 i \u2264 v - u</b>).</p>\n<p>In additional to the cost of the item itself, the tourist must pay some conservation fees as well.<br />\nThe Codeland regularly defines the new conservation fee. Each fee is represented by 4 numbers: <b>u v a b</b> which means<br />\nthe tourist buying any item in the store <b>u + i</b> will be charged a fee of <b>i * a + b</b> for all (<b>0 \u2264 i \u2264 v - u</b>).<br />\nIn the case that several conservation fees have effect on the same store, the customer needs to pay all of those fees.</p>\n<p>At some point of time, a tourist at store <b>i</b> asks you what is the <b>largest</b> amount of money they have to spend for<br />\na souvenir at that store (the amount of money includes the price of one of the souvenirs and all the conservation fees for that store).</p>\n<p>\u00a0</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains two integers <b>N</b> and <b>M</b> represent the number of stores and the number of events</li>\n<li>Each of the next <b>M</b> lines represents an event of three types below in the chronological order.\n<ul>\n<li>The new plan of the Chef: \"1 <b>u v a b</b>\".</li>\n<li>The new conservation fee: \"2 <b>u v a b</b>\".</li>\n<li>The query from tourist: \"3 <b>i</b>\".</li>\n</ul>\n</li>\n</ul>\n<p>\u00a0</p>\n<h3>Output</h3>\n<p>For each query from tourist, print in one line the corresponding answer.<br />\nIf there is no item at the <b>i</b>th store, print out \"NA\" (without quotes) as the answer.</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>10<sup>9</sup></b></li>\n<li><b>1</b> \u2264 <b>M</b> \u2264 <b>3*10<sup>5</sup></b></li>\n<li>For events of type 1: <b>1</b> \u2264 <b>u</b> \u2264 <b>v</b> \u2264 <b>N</b>. <b>|a|, |b| \u2264 10<sup>9</sup></b></li>\n<li>For events of type 2: <b>1</b> \u2264 <b>u</b> \u2264 <b>v</b> \u2264 <b>N</b>. <b>|a|, |b| \u2264 10<sup>4</sup></b></li>\n<li>For events of type 3: <b>1</b> \u2264 <b>i</b> \u2264 <b>N</b> \n</li></ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n10 10\n3 5\n1 3 8 3 1\n3 5\n1 5 10 -8 2\n3 5\n3 10\n2 1 10 0 1\n3 6\n2 5 7 2 1\n3 6\n\n<b>Output:</b>\nNA\n7\n7\n-38\n11\n14\n</pre><h3>Explanation</h3>\n<ul>\n<li>\nAt the beginning all stores are empty so the answer for the first query which asks about the store 5 is \"NA\".\n</li>\n<li>\nThe first plan of the Chef is \"3 8 3 1\" which means the items with price 1, 4, 7, 10, 13, 16 are added to the stores 3, 4, 5, ..., 8 correspondingly. So in the next query (asking about store 5) the answer is 7 (we have only one item to buy with no conservation fee).\n</li>\n<li>\nThe second plan of the Chef is \"5 10 -8 2\" so the items with price 2, -6, -14, -22, -30, -38 are added to the stores 5, 6, 7, ..., 10 correspondingly. Now the store 5 now contains two items with the corresponding prices are 7 and 2, the answer for the query about store 5 is still 7 (we still don't have any conservation fee). The store 10 contain only one item with price is -38 so the answer for the query about this store is -38.\n</li>\n<li>\nThe first conservation fee policy is \"1 10 0 1\" which cause a conservation fee of 1 for each of 10 stores. The stores 6 contains 2 items, one costs 10 unit of money and the other costs -6. We need to pay 1 unit of money for the conservation fee so the largest amount of money we can spend for one item in store 6 is 10 + 1 = 11.\n</li>\n<li>\nThe second conservation fee policy is \"5 7 2 1\" so a conservation fees of 1, 3, 5 are added to the stores 5, 6 and 7 correspondingly. Hence the largest amount of money we can spend for one item in store 6 is increased by 3. The answer for the last query is 14.\n</li>\n</ul>\n<p><b>Note: </b>Both of the price and the conservation fee can be negative.</p>\n",
    "category_name": "main",
    "date_added": "24-01-2014",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "max_timelimit": "3",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/STREETTA",
    "problem_tester": null,
    "time": {
        "view_start_date": 1394184600,
        "end_date": 1395135000,
        "practice_submission_allowed": true,
        "visible_start_date": 1395135000,
        "submit_start_date": 1394184600,
        "current": 1537437692
    },
    "user": {
        "username": ""
    }
}