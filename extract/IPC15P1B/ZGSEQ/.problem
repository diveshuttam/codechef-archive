{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Given an array <b>A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub></b> of integers, count number of \"Zig-zag\" sub-sequences in it.\n\n<p>\nA sub-sequence of array <b>A</b> is obtained by deleting greater than or equal to zero elements and preserving the order of remaining elements. So, a sub-sequence of length <b>K</b> can by defined by a sequence of indices <b>b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>K</sub></b> such that <b>1 \u2264 b<sub>1</sub> &lt; b<sub>2</sub> &lt; ...&lt; b<sub>K</sub> \u2264 N</b>.\n</p>\n</p><p>\n\nA \"Zig-zag\" sequence is a sub-subsequence of odd length and if it starts with integer <b>x</b>, every odd positioned element needs to be <b>x</b>. Even positioned elements can be either <b>x + 1</b> or <b>x - 1</b>.<br/>\nFor example, [2, 1, 2, 3, 2] is  a valid \"Zig-zag\" sub-sequence.\n</p>\n<p>\nTwo sub-sequences are different if there is some index which is present in one of them and is not present in the other.\n</p>\n\n\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases.</li>\n<li>The first line of each test case contains an integer <b>N</b> denoting the length of array <b>A</b>.</li>\n<li>Next line contains <b>N</b> space separated integers denoting the elements of the array.</li>\n</ul>\n\n\n<h3>Output</h3>\n<p>Output a single integer in one line for each test case which is the number of \"Zig-zag\" sub-sequences modulo <b>10<sup>9</sup> + 7</b> for that case.</p>\n\n\n<h3>Constraints</h3>\n\n<ul>\n<li>1 \u2264 <b>T</b> \u2264 10<sup>5</sup></li>\n<li>1 \u2264 <b>N</b> \u2264 10<sup>5</sup></li>\n<li>1 \u2264 <b>A<sub>i</sub></b> \u2264 10<sup>9</sup></li>\n<li>Sum of <b>N</b> \u2264 10<sup>5</sup> over all cases for one test file</li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n3\n1 2 1\n<b>Output:</b>\n4\n</pre>\n\n<h3>Explanation</h3>\n<p>There are 4 valid sequences define by indices: [1], [2], [3], [1,2,3].</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "28-09-2015",
    "is_direct_submittable": false,
    "contest_name": "ICPC Preparatory Series by Team BlundersPride",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1448724600,
        "end_date": 1448746200,
        "practice_submission_allowed": true,
        "visible_start_date": 1448746200,
        "submit_start_date": 1448724600,
        "current": 1537435789
    },
    "problem_author_html_handle": "blunderspride",
    "problem_name": "Counting Zigzag Sequences",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/blunderspride'>blunderspride</a>, <a class='problem-tag-small ' href='/tags/problems/easy-medium'>easy-medium</a>, <a class='problem-tag-small ' href='/tags/problems/ipc151b'>ipc151b</a>",
    "problem_tester_html_handle": "",
    "problem_author": "blunderspride",
    "contest_code": "IPC15P1B",
    "max_timelimit": "1",
    "problem_code": "ZGSEQ"
}