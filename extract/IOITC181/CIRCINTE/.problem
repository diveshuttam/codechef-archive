{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>The integers $0$ to $M - 1$ have been arranged in a circular fashion. That is, $0, 1, 2, \\ldots, M - 1$, are in that order and\nalso, $0$ and $M - 1$ are next to each other. The distance between any two adjacent numbers on this circle is 1. You are given $N$ intervals on this, such that no two intervals touch or intersect with each other. The i-th interval will be of the form [$L_i, R_i$]. This means that the i-th interval contains all the integers between $L_i$ and $R_i$, both end points inclusive. You are supposed to mark exactly one number inside each interval, in such a way that the minimum distance between any two marked numbers is maximized.\n\nMore formally, we have $0 \\leq L_1 \\leq R_1 < L_2 \\leq R_2 < L_3 \\ldots < L_N \\leq R_N \\leq M - 1$. You are supposed to mark exactly $N$ numbers: $A_1, A_2, \\ldots, A_N$, such that $L_i \\leq A_i \\leq R_i$ for all $1 \\leq i \\leq N$. And you want to do it in such a manner $min_{i \\neq j}$ (shortest distance between $A_i$ and $A_j$ ), is maximized.\n\n###Input:\n\n- First line of the input contains a pair of integers $M$ and $N$.\n- The i-th of the next $N$ lines contains two numbers $L_i$ and $R_i$ which denote the end points of the i-th interval.\n\n###Output:\n- A single integer denoting the maximized minimum distance between any two marked numbers.\n\n###Constraints \n- $1 \\leq M \\leq 10^{18}$\n- $2 \\leq N \\leq 4 * 10^5$\n\n###Subtasks\n- 10 points : \n\t- $1 \\leq M \\leq 10000$\n\t- $2 \\leq N \\leq 100$\n- 25 points : \n\t- $1 \\leq M \\leq 10^{18}$\n\t- $2 \\leq N \\leq 1000$\n- 65 points : No further constraints.\n\n###Sample Input:\n\t9 3\n\t0 2\n\t3 4\n\t5 7\n\n###Sample Output:\n\t3\n\t\n###Explanation:\nWe can choose $A_1 = 0, A_2 = 3, A_3 = 6$. The distance between every adjacent marked pair of numbers is 3, and hence that is the minimum. You can check that you cannot do any better, and hence 3 is the answer.",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "22-06-2018",
    "is_direct_submittable": false,
    "contest_name": "Replay of Indian IOI Training Camp (IOITC) #1 (Rated)",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1529674200,
        "end_date": 1529692200,
        "practice_submission_allowed": true,
        "visible_start_date": 1529692200,
        "submit_start_date": 1529674200,
        "current": 1537432344
    },
    "problem_author_html_handle": "admin3",
    "problem_name": "Circular Intervals",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin3'>admin3</a>",
    "problem_tester_html_handle": "",
    "problem_author": "admin3",
    "contest_code": "IOITC181",
    "max_timelimit": "1",
    "problem_code": "CIRCINTE"
}