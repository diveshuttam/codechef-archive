{
    "problem_code": "MINMAX2",
    "problem_author": "ista2000",
    "contest_name": "ICO 2018 Preparatory Series - Contest 6",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>ista2000</span>",
    "problem_name": "Minimum Maximum Confusion",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "ICOP1806",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/convex-hull-optimization'>convex-hull-optimization</a>, <a class='problem-tag-small ' href='/tags/problems/dynamic-programming'>dynamic-programming</a>, <a class='problem-tag-small ' href='/tags/problems/icop1806'>icop1806</a>, <a class='problem-tag-small ' href='/tags/problems/ista2000'>ista2000</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p>Problem description.</p>\n<p>You are given two sequences of <b>N</b> elements <b>P</b> and <b>Q</b>. You have to partition them where the cost of making a partition from index <b>L</b> to <b>R</b> is <b>cost = min(P[L...N])*max(Q[1...R])</b>. Find the minimum and the maximum cost of partitioning the two sequences into exactly <b>K</b> partitions. Remember, the partitions of the two sequences must be the same, you cannot make different partitions for <b>P</b> and <b>Q</b>.</p>\n\n\n<h3>Input</h3>\n<p>Input description.</p>\n<p>The first line of the input contains an integer <b>T</b> denoting the number of test cases. <b>T</b> test cases follow. The first line of each test case contains a two integers <b>N</b> and <b>K</b> denoting the number of elements in the sequences and the number of partitions to be made. Then follows <b>N</b> lines, each line containing two integers, the first element corresponding the <b>P</b> and the second integer corresponding to <b>Q</b>.\n\n<h3>Output</h3>\n<p>For each test case, output a single line containing two integers denoting minimum and maximum cost.</p>\n\n<h3>Constraints</h3>\n<p>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>10</b></li>\n<li><b>1</b> \u2264 <b>K</b> \u2264 <b>N</b> \u2264 <b>1000</b></li>\n<li><b>-10<sup>5</sup></b> \u2264 <b>P<sub>i</sub>, Q<sub>i</sub></b> \u2264 <b>10<sup>5</sup></b></li>\n</ul>\n</p>\n\n<h3>Subtasks</h3>\n<p>\n<b>Subtask #1(9 points):</b>\n<ul>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>1000</b></li>\n<li><b>K = 2</b></li>\n</ul>\n<b>Subtask #2(16 points):</b>\n<ul>\n<li><b>1</b> \u2264 <b>K</b> \u2264 <b>N</b> \u2264 <b>1000</b></li>\n<li><b>1</b> \u2264 <b>P<sub>i</sub>, Q<sub>i</sub></b> \u2264 <b>10<sup>5</sup></b></li>\n</ul>\n<b>Subtask #3(27 points):</b>\n<ul>\n<li><b>1</b> \u2264 <b>K</b> \u2264 <b>N</b> \u2264 <b>100</b></li>\n</ul>\n<b>Subtask #4(48 points):</b>\n<ul>\n<li>Original Constraints</li>\n</ul>\n</p>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n3\n5 1\n1 1\n2 2\n3 3\n4 4\n5 5\n\n5 5\n1 1\n2 2\n3 3\n4 4\n5 5\n\n5 2\n1 1\n2 2\n3 3\n4 4\n5 5\n\n<b>Output:</b>\n5 5\n55 55\n11 29\n\n\n\n</pre>\n</p>\n<h3>Explanation</h3>\n<p>\n<b>Example case 1.</b><br>\nThere is only one way to partition the elements and that is to keep everything in the same partition, i.e, [1, 5]. The cost is min(P[1..N])*max(Q[1..N]) = 1*5 = 5.\nThis is both the maximum and the minimum possible.\n</p>",
    "category_name": "main",
    "date_added": "2-01-2018",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/MINMAX2",
    "problem_tester": null,
    "time": {
        "view_start_date": 1515074400,
        "end_date": 1515085200,
        "practice_submission_allowed": true,
        "visible_start_date": 1515085200,
        "submit_start_date": 1515074400,
        "current": 1537433244
    },
    "user": {
        "username": ""
    }
}