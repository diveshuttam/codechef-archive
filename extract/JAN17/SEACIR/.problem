{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/JAN17/mandarin/SEACIR.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/JAN17/russian/SEACIR.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/JAN17/vietnamese/SEACIR.pdf\">Vietnamese</a> as well.</h3>\n\n\n<p>Sereja has a set of <b>N</b> circles. Dima also has a set of <b>N</b> circles. Sereja can easily recognise his set of circles because he has built the circles himself using strong steel wire. One day, Dima put his <b>N</b> circles into Sereja's circles and shuffled all the circles here and there. You are given this information about the circles by <b>2 * N</b> integers corresponding to the radiuses of the circles.</p>\n\n<p>Now, Sereja wants to provide you details about his circles in the form of interactive queries, <b>i</b>-th of which will denote the radius of <b>i</b>-th of his circles. For each query, you have to position a circle of this radius in 2-D plane by providing the coordinates of its center <b>(x, y)</b>, such that <b>(r \u2264 X, Y \u2264 S - r)</b>. \n\n<p>Your aim is to position the Sereja's circles in the way so as to minimum distance between each pair of circles is as large as possible.</p>\n\n<p>Sereja is a generous person, so he will allow you to skip placing circles at most <b>skip</b> times of his queries.</p>\n\n<h3>Input + Output</h3>\n<p>First line will contain three space separated integers <b>N, S, skip</b>. Next line contains <b>2*N</b> numbers written on the sheet of paper.</p>\n<p>After this you will be given <b>N</b> queries. The <b>i</b>-th of the query will contain an integer <b>r</b> denoting the radius of Sereja's <b>i</b>-th circle. After each query you should output two integers: <b>x</b> and <b>y</b> - position of the center of the circle, if you don't want to place current circle you can output <b>-1 -1</b>, you are allowed to skip circle in this way at most <b>skip</b> times.</p>\n\n<h3>Example</h3>\n<pre><b>Input + Output:</b>\n5 10 2\n1 1 1 1 1 2 2 2 2 2\n>1\n<9 1\n>1\n<1 9\n>2\n<-1 -1\n>2\n<-1 -1\n>2\n<2 2\n</pre>\n\n<h3>Test generation</h3>\n<p>\n<h3>Test Plan #1</h3>\n<ul>\n<li><b>N = 200, S = 5000, skip = 50</b></li>\n<li>1 \u2264 <b>R[i] \u2264 100</b></li>\n<li><b>R[i]</b> are generated uniformly randomly</li>\n</ul>\n</p>\n\n<p>\n<h3>Test Plan #2</h3>\n<ul>\n<li><b>N = 200, S = 10000, skip = 50</b></li>\n<li>100 \u2264 <b>R[i] \u2264 500</b></li>\n<li><b>R[i]</b> are generated uniformly randomly</li>\n</ul>\n</p>\n\n<p>\n<h3>Test Plan #3</h3>\n<ul>\n<li><b>N = 200, S = 5000, skip = 25</b></li>\n<li>1 \u2264 <b>R[i] \u2264 100</b></li>\n<li>Radius of circles of Sereja is generated according to following probability distribution, denoted as <i>nice</i> distribution. Let <b>total</b> denote the sum of <b>log(r)</b> for <b>r</b> from 1 to 100. Probability of occurrence of radius <b>r</b> (takes values in the range [1, 100]) will be <b>log(r) / total</b>.\n<li><b>R[i]</b>'s of Dima are generated uniformly randomly</li>\n</ul>\n</p>\n\n<p>\n<h3>Test Plan #4</h3>\n<ul>\n<li><b>N = 200, S = 5000, skip = 25</b></li>\n<li>1 \u2264 <b>R[i] \u2264 100</b></li>\n<li>Radius of circles of Sereja is generated uniformly randomly.  \n<li><b>R[i]</b>'s of Dima are generated according to the <i>nice</i> probability distribution.</li>\n</ul>\n</p>\n\n<h3>Scoring</h3>\n<p>For each test case value <b>D</b> will be minimal distance between each pair of settled circles. If some pair of circles is intersected or some circle cover some other <b>D</b> is equal to <b>zero</b>.</p>\n\n<p>For example, you can see that value of <b>D</b> will be 6.899495 for the sample example shown above.</p>\n\n<p>Lets <b>S</b> will be sum of <b>D</b> among all tests and <b>W</b> is maximal value of <b>S</b> among all participants. Your displayed score will be equal to <b>S/W</b></p>\n\n<p>During the contest, your score will be be only of 20% of the files (i.e. 4 files out of 20), one for each group of test cases. Though verdict of your program will be decided by all the 20 files.</p>\n\n\n<p>Please make sure to flush the standard output after you print the coordinates of the center. You can do this by fflush(stdout) in C++, System.out.flush() in Java.</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "7-10-2016",
    "is_direct_submittable": false,
    "contest_name": "January Challenge 2017",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1483695000,
        "end_date": 1484731800,
        "practice_submission_allowed": true,
        "visible_start_date": 1484731800,
        "submit_start_date": 1483695000,
        "current": 1537434220
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>sereja</span>",
    "problem_name": "Sereja and Circles",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/sereja'>sereja</a>",
    "problem_tester_html_handle": "",
    "problem_author": "sereja",
    "contest_code": "JAN17",
    "max_timelimit": "1",
    "problem_code": "SEACIR"
}