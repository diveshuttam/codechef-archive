{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>\t<p><h3>\n\t<i>I'm on a seafood diet. I see food, I eat it.</i></h3><br>\n\tThese great lines are said by none other then our foodie Sandy.\n\t</p>\n\n\t<p>\n\t\tSandy is moving to Kerala, and being a foodie, he wants to try all the different dishes made there.<br>\n\t\tHe makes a graph consisting of all famous places across the state, say place<sub>1</sub>, place<sub>2</sub>,.....,place<sub>n</sub> as nodes, and an undirected edge between every pair of directly connected places. <br><br>It is guaranteed that the graph so obtained will be connected and there will be a unique path between any two places.<br>\n\n\t\t<br>Each place (place<sub>i</sub>) serves only one kind of dish, say ci. <br>\n\n<br>\t\tWe define the function <b>goodNess(place<sub>i</sub>)</b> as:<br><br>\n\t\t\t\u00a0 \u00a0 \u00a0 \u00a0<b>goodNess(place<sub>i</sub>) = \u03a3 distinctFood(i,j)</b> for (1 <= j <= n),<br><br>\n\t\t\twhere <b>distinctFood(i,j)</b> denotes number of <b>distinct dishes</b> that can be consumed while travelling from place<sub>i</sub> to place<sub>j</sub>.\n\n\t\t<br><br><pre>\nNow, Sandy wants to book ticket to a place<sub>i</sub>, such that:<br> <b>\n\t\tgoodNess(place<sub>i</sub>) >= goodNess(place<sub>j</sub>) </b> where (1 <= j <= n). <br>\n\nSandy needs your help in making the decision.<br><br>Can you help him out? </pre>\n\t</p>\n\n\n\t<h3>Input</h3>\n\t<p>First line contains a single integer <b>n</b>, denoting the number of places.<br><br>\n\tThe second line contains <b>n</b> space-seperated integers <b>c<sub>1</sub>,c<sub>2</sub>...c<sub>n</sub></b>, denoting the dish served at <b>place<sub>1</sub>,place<sub>2</sub>...place<sub>n</sub></b> respectively.<br>\n\t<br>Each of the next <b>(n-1)</b> lines contain two integers <b>x</b> & <b>y</b>, denoting an edge between <b>place<sub>x</sub></b> and <b>place<sub>y</sub></b>.</p>\n\t<p>\u00a0</p>\n\n\t<h3>Output</h3>\n\t<p>Print <b>n</b> lines, where the <b>i<sup>th</sup></b> line contains the <b>goodNess(place<sub>i</sub>)</b> (1 <= i <= n). <br>\n\tOn the <b>(n+1)<sup>th</sup></b> line, print the maximum goodNess value as described above.\n\t</p>\n\n\t<p>\u00a0</p>\n\n\t<h3>Constraints</h3>\n\n\t<ul>\n\t<li><b>1</b> \u2264 <b>n</b> \u2264 10<sup>5</sup><b></b></li>\n\t<li><b>1</b> \u2264 <b>c<sub>i</sub></b> \u2264 10<sup>5</sup><b></b></li>\n\t<li><b>1</b> \u2264 <b>x</b> \u2264 n<b></b></li>\n\t<li><b>1</b> \u2264 <b>y</b> \u2264 n<b></b></li>\n\n\t</ul>\n\t<p>\u00a0</p>\n\t<h3>Example</h3>\n\t<pre><b>\nSample Input:</b><br>\n5\n1 2 3 2 3\n1 2\n2 3\n2 4\n1 5\n\n\t<b>\nSample Output:</b><br>\n10\n9\n11\n9\n12\n12\n</pre>\n\t<p>\u00a0</p>\n\t<h3>Explanation</h3>\n<a href = \"https://goo.gl/9Fgj9g\">Click for image</a>\n\t<p>Let's denote distinctFood() as d(). <br>\n\t<ul>\n\t<li>goodNess(place<sub>1</sub>) = d(1,1) + d(1,2) + d(1,3) + d(1,4) + d(1,5) = 1 + 2 + 3 + 2 + 2 = 10</li><br>\n\t<li>goodNess(place<sub>2</sub>) = d(2,1) + d(2,2) + d(2,3) + d(2,4) + d(2,5) = 2 + 1 + 2 + 1 + 3 = 9</li><br>\n\t<li>goodNess(place<sub>3</sub>) = d(3,1) + d(3,2) + d(3,3) + d(3,4) + d(3,5) = 3 + 2 + 1 + 2 + 3 = 11</li><br>\n\t<li>goodNess(place<sub>4</sub>) = d(4,1) + d(4,2) + d(4,3) + d(4,4) + d(4,5) = 2 + 1 + 2 + 1 + 3 = 9</li><br>\n\t<li>goodNess(place<sub>5</sub>) = d(5,1) + d(5,2) + d(5,3) + d(5,4) + d(5,5) = 2 + 3 + 3 + 3 + 1 = 12</li><br>\n\n\t</ul>\n\tMaximum goodness value is 12 for place<sub>5</sub>.\n\n\t</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "7-10-2017",
    "is_direct_submittable": false,
    "contest_name": "KoderKombat '17",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, GO",
    "todo": false,
    "time": {
        "view_start_date": 1507473000,
        "end_date": 1507480200,
        "practice_submission_allowed": true,
        "visible_start_date": 1507480200,
        "submit_start_date": 1507473000,
        "current": 1537433483
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>sandeepg97</span>",
    "problem_name": "Sandy the foodie",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/sandeepg97'>sandeepg97</a>",
    "problem_tester_html_handle": "",
    "problem_author": "sandeepg97",
    "contest_code": "KOKO2017",
    "max_timelimit": "1",
    "problem_code": "KOK100"
}