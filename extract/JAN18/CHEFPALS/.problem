{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Chef loves palindromes! Chef loves them so much he can see palindromes anywhere! Even in this problem.</p>\n\n<p>Chef has <b>N</b> sequences of white cells. For each <b>i</b> (1 \u2264 <b>i</b> \u2264 <b>N</b>), the <b>i</b>-th sequence is formed by <b>l<sub>i</sub></b> cells; Chef has to paint exactly <b>b<sub>i</sub></b> of these cells black.</p>\n\n<p>After painting those cells, Chef writes down the lengths of all white blocks (maximum contiguous subsequences of white cells) from left to right as a single string of digits.</p>\n\n<p>For example, if Chef's initial sequence of cells is <b>\"wwwwwwwww\"</b> and he has to paint three cells black, he can get <b>\"bwwbwbwww\"</b> ('w' stands for a white cell, 'b' for a black cell). In this case, he will write down the lengths of white blocks 2, 1, 3 as the string <b>\"213\"</b>. He can also paint it to get <b>\"bbwwwwwbw\"</b> and write down <b>\"51\"</b>. He can even paint it to get <b>\"bbbwwwwww\"</b> and write down <b>\"6\"</b>. There are many other options as well.</p>\n\n<p>After painting all sequences, Chef will have written down a list of <b>N</b> strings. Now he can reorder these strings <b>in any way he wants</b> and concatenate them into one string <b>S</b>.</p>\n\n<p>It's time for palindromes! Chef wants the resulting string <b>S</b> to be as close to a palindrome as possible. The distance of <b>S</b> to a palindrome is defined as the minimum number of characters in <b>S</b> that Chef needs to change to get a palindrome.</p>\n\n<p>For example, the string <b>\"123345\"</b> has distance 2 to a palindrome. Strings <b>\"2\"</b> and <b>\"1221\"</b> have distance 0 to a palindrome, since they are already palindromes.</p>\n\n<p>You need to find a way to paint some cells, reorder and concatenate the resulting strings to form a string <b>S</b> with the minimum possible distance to a palindrome.</p>\n\n\n<h3>Input</h3>\n<p><ul>\n<li>The first line of the input contains a single integer <b>N</b>.</li>\n<li>The second line contains <b>N</b> space-separated integers <b>l<sub>1</sub>, l<sub>2</sub>, ..., l<sub>N</sub></b>.</li>\n<li>The third line contains <b>N</b> space-separated integers <b>b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>N</sub></b>.</li>\n</ul></p>\n\n<h3>Output</h3>\n<p><ul>\n<li>The first <b>N</b> lines of the output should describe the sequences of cells obtained after painting some cells black.</li>\n<li>The <b>i</b>-th of these lines should contain a single string of length <b>l<sub>i</sub></b> consisting of letters 'b' and 'w'. There should be exactly <b>b<sub>i</sub></b> letters 'b' in this string.</li>\n<li>The following line should contain a sequence of <b>N</b> space-separated integers <b>p<sub>1</sub>, p<sub>2</sub>, ..., p<sub>N</sub></b> denoting the order of strings written down for each sequence of cells \u2014 the <b>i</b>-th string in the concatenation should be the string written down for the <b>p<sub>i</sub></b>-th sequence of cells. <b>p<sub>1</sub>, p<sub>2</sub>, ..., p<sub>N</sub></b> has to be a permutation of numbers 1 through <b>N</b>.</li>\n</ul></p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>N</b> = 1000</li>\n<li>1 \u2264 <b>l<sub>i</sub></b> \u2264 1000 for each valid <b>i</b></li>\n<li>0 \u2264 <b>b<sub>i</sub></b> < <b>l<sub>i</sub></b> for each valid <b>i</b></li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n\n4\n5 10 3 8\n2 2 1 2\n\n<b>Output:</b>\n\nwwbbw\nwwwwbbwwww\nwwb\nwwwwbbww\n2 1 3 4\n</pre>\n\n<h3>Explanation</h3>\n<p><ul>\n<li>In the first sequence of cells, painting the third and fourth cell gives <b>\"wwbbw\"</b> with white blocks of lengths 2 and 1, which gives Chef the string <b>\"21\"</b>.</li>\n<li><b>\"wwwwbbwwww\"</b> gives Chef the string <b>\"44\"</b>.</li>\n<li><b>\"wwb\"</b> gives Chef <b>\"2\"</b>.</li>\n<li><b>\"wwwwbbww\"</b> gives Chef <b>\"42\"</b>.</li>\n</ul>\n</p>\n<p>After reordering the strings \"21\", \"44\", \"2\", \"42\" using the permutation (2, 1, 3, 4), Chef gets strings \"44\", \"21\", \"2\", \"42\" and concatenates them to <b>S</b> = <b>\"4421242\"</b>. The distance of this string to a palindrome is 1, as Chef only has to replace the last digit with '4' to get a palindrome.\n</p>\n\n\n<h3>Scoring</h3>\n<p><ul>\n<li>If your output is invalid in at least one test case, you will receive WA verdict.</li>\n<li>Your score for each test case is equal to the distance of the string <b>S</b> (obtained for your output) to a palindrome plus 1.</li>\n<li>The total score for a submission is the sum of scores for all test cases.</li>\n<li>Your goal is to minimise the total score.</li>\n<li>During the contest, your score will be calculated only for one test case from each of groups 1, 3, 5 and 7 of test cases. After the contest, there will be a rejudge using all test cases from all groups.</li>\n</ul></p>\n\n\n<h3>Test generation</h3>\n<p><ul>\n<li>Let random(<b>x</b>) denote a uniformly random integer in the range [0, <b>x</b>].</li>\n<li>For each valid <b>i</b>, <b>l<sub>i</sub></b> = random(999) + 1.</li>\n<li>There will be 8 groups of test cases, groups 1, 3, 5 have 3 test-cases each, and groups 2, 4 have 4 test-cases each, while groups 6, 7, 8 have one test-case each.<ul>\n<li>In group 1, <b>b<sub>i</sub></b> = random(random(<b>l<sub>i</sub></b> - 1)) for each valid <b>i</b>.</li>\n\n<li>In group 2, <b>b<sub>i</sub></b> = random(random(random(<b>l<sub>i</sub></b> - 1))) for each valid <b>i</b>.</li>\n\n<li>In group 3, <b>b<sub>i</sub></b> = random(random(random(random(<b>l<sub>i</sub></b> - 1)))) for each valid <b>i</b>.</li>\n\n<li>In group 4, <b>b<sub>i</sub></b> = random(random(random(random(random(<b>l<sub>i</sub></b> - 1))))) for each valid <b>i</b>.</li>\n\n<li>In group 5. <b>b<sub>i</sub></b> = random(random(random(random(random(random(<b>l<sub>i</sub></b> - 1)))))) for each valid <b>i</b>.</li>\n\n<li>In group 6. <b>b<sub>i</sub></b> = random(random(random(random(random(random(random(random(<b>l<sub>i</sub></b> - 1)))))))) for each valid <b>i</b>.</li>\n\n<li>In group 7. <b>b<sub>i</sub></b> = random(random(random(random(random(random(random(random(random(<b>l<sub>i</sub></b> - 1))))))))) for each valid <b>i</b>.</li>\n\n\n<li>In group 8. <b>b<sub>i</sub></b> = random(random(random(random(random(random(random(random(random(random(<b>l<sub>i</sub></b> - 1)))))))))) for each valid <b>i</b>.</li>\n</ul></li>\n</ul></p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "12-10-2015",
    "is_direct_submittable": false,
    "contest_name": "January Challenge 2018",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1515186024,
        "end_date": 1516008600,
        "practice_submission_allowed": true,
        "visible_start_date": 1516008600,
        "submit_start_date": 1515186024,
        "current": 1537433187
    },
    "problem_author_html_handle": "berezin",
    "problem_name": "(Challenge) Chef and Palindromes",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/berezin'>berezin</a>",
    "problem_tester_html_handle": "",
    "problem_author": "berezin",
    "contest_code": "JAN18",
    "max_timelimit": "1",
    "problem_code": "CHEFPALS"
}