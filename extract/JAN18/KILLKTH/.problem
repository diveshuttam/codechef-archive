{
    "problem_code": "KILLKTH",
    "problem_author": "killjee",
    "contest_name": "January Challenge 2018",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>killjee</span>",
    "problem_name": "Killjee and k-th letter ",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "JAN18",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/jan18'>jan18</a>, <a class='problem-tag-small ' href='/tags/problems/killjee'>killjee</a>, <a class='problem-tag-small ' href='/tags/problems/killjee'>killjee</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/suffix-trees'>suffix-trees</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Read problems statements in <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/JAN18/mandarin/KILLKTH.pdf\">Mandarin chinese</a>, <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/JAN18/russian/KILLKTH.pdf\">Russian</a> and <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/JAN18/vietnamese/KILLKTH.pdf\">Vietnamese</a> as well.</h3>\n\n<p>Killjee is trying to unlock a treasure. The key to the treasure is encrypted using a string <b>S</b> and <b>Q</b> queries. In each query, you need to find the <b>K</b>-th letter of a hidden string which is formed from the string <b>S</b>.</p>\n<p>To form the hidden string, you should sort all substrings of <b>S</b> in lexicographical order and concatenate them. For example, if <b>S</b> = \"abc\", the hidden string would be \"aababcbbcc\". (See the sample explanation for details.)</p>\n<p>In each query, the value of <b>K</b> is encoded in the following way:\n<ul>\n<li>You're given two integers <b>P</b> and <b>M</b>.</li>\n<li>Let's define <b>G</b> as the sum of ASCII values of answers to all previous queries (therefore, <b>G</b> = 0 for the first query).</li>\n<li>The value of <b>K</b> for the current query is <b>( P \u00b7  G ) % M + 1</b>, where <b>%</b> denotes the modulo operator.</li>\n</ul>\n</p>\n\n<h3>Input</h3>\n<p><ul>\n<li>The first line of the input contains a single string <b>S</b>.</li>\n<li>The second line contains a single integer <b>Q</b>.</li> \n<li><b>Q</b> lines follow. Each of these lines contains two space-separated integers <b>P</b> and <b>M</b>.</li>\n</ul></p>\n\n<h3>Output</h3>\n<p>For each query, print a single line containing one character \u2014 the <b>K</b>-th letter of the hidden string.</p>\n\n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>|S|</b> \u2264 2 \u00b7 10<sup>5</sup></li>\n<li>1 \u2264 <b>Q</b> \u2264 2 \u00b7 10<sup>5</sup></li>\n<li>1 \u2264 <b>K,M</b> \u2264 length of hidden string</li>\n<li>1 \u2264 <b>P</b> \u2264 10<sup>9</sup></li>\n<li><b>S</b> will consist only of lowercase English letters</li>\n</ul>\n\n<h3>Subtasks</h3>\n\n<p><b>Subtask #1 (5 points):</b> 1 \u2264 <b>|S|</b> \u2264 50</p>\n\n<p><b>Subtask #2 (15 points):</b>\n<ul>\n<li>1 \u2264 <b>|S|</b> \u2264 2000</li>\n<li>1 \u2264 <b>Q</b> \u2264 25000</li>\n</ul>\n</p>\n\n<p><b>Subtask #3 (20 points):</b> 1 \u2264 <b>Q</b> \u2264 10</p>\n\n<p><b>Subtask #4 (60 points):</b> original constraints</p>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n\nabc\n3\n1 1\n2 3\n5 6\n\n<b>Output:</b>\n\na\nb\na\n</pre>\n\n<h3>Explanation</h3>\n<p>The substrings of <b>S</b> are \"a\", \"b\", \"c\", \"ab\", \"abc\", \"bc\". The lexicographical order of these strings is \"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\", so the hidden string is \"a\"+\"ab\"+\"abc\"+\"b\"+\"bc\"+\"c\" = \"aababcbbcc\".</p>\n\n<p>For query 1, <b>G</b> = 0, so <b>K = ( P \u00b7 G ) % M + 1 = ( 1 \u00b7 0 ) % 1 + 1 = 1</b>. The 1-st character of the hidden string is <b>'a'</b>. We add the ASCII value of 'a' (97) to <b>G</b>.</p>\n\n<p>For query 2, <b>G</b> = 97, so <b>K = ( 2 \u00b7 97 ) % 3 + 1 = 3</b>. The 3-rd character of the hidden string is <b>'b'</b>. We add the ASCII value of 'b' (98) to <b>G</b>.</p>\n\n<p>For query 3, <b>G</b> = 195, so <b>K = ( 5 \u00b7 195 ) % 6 + 1 = 4</b>. The 4-th character of the hidden string is <b>'a'</b>. We add the ASCII value of 'a' (97) to <b>G</b>.</p>",
    "category_name": "main",
    "date_added": "8-12-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/KILLKTH",
    "problem_tester": null,
    "time": {
        "view_start_date": 1515144600,
        "end_date": 1516008600,
        "practice_submission_allowed": true,
        "visible_start_date": 1516008600,
        "submit_start_date": 1515144600,
        "current": 1537433189
    },
    "user": {
        "username": ""
    }
}