{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Problem description.</p>\n<p>Owlman wants to destroy the earth. Batman come to the rescue. Owlman has planted a bomb having the power to destroy earth. To diffuse the bomb Batman need to solve a puzzle.  </p>\n<p>Batman need to enter a password to diffuse the bomb. There are only two button on the keypad, A and B. Batman is also given a n length string consisting of only these two characters. There was a leak in the Owlman's team and he tells Batman the first step toward getting the password is to concatenate the string to itself to generate a string of 2n length. Batman knew that owlman loves owlfunction().Owlfuncton is defined as </p>\n<p> For a string of length 2n. Consider all substring of length less than or equal to n that ends on position i for 1&lt;=i&lt;=2n </p>\n<p> <b>owlfunction(i) = smallest owlographic substring over all such substring</b> <br /></p>\n<p>If X is proper prefix of Y then X is said to be owlographically greater than Y otherwise consider owlographic as lexicographic.Since Batman is very smart he figured out that password would be the smallest i for which owlfunction(i) is longest.  </p>\n<h3>Input</h3>\n<p>First line contains an integer T denoting the number of test cases. For each test case:</p>\n<ul>\n<li>First line contains a integer n denoting the length of string</li>\n<li>Second line contains a n length string</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case:</p>\n<ul>\n<li>Output the password in newline</li>\n</ul>\n<h3>Constraints</h3>\n<ul>\n<li>Summation of n over all test cases &lt;=150,000</li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n2\nAA\n2\nAB\n\n<b>Output:</b>\n2\n2\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "12-03-2016",
    "is_direct_submittable": false,
    "contest_name": "IOPC 2016",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1457789400,
        "end_date": 1457875800,
        "practice_submission_allowed": true,
        "visible_start_date": 1457875800,
        "submit_start_date": 1457789400,
        "current": 1537435140
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>shinigami_ryuk</span>",
    "problem_name": "Find The Key",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/shinigami_ryuk'>shinigami_ryuk</a>",
    "problem_tester_html_handle": "",
    "problem_author": "shinigami_ryuk",
    "contest_code": "IOPC2016",
    "max_timelimit": "1",
    "problem_code": "IOPC16F"
}