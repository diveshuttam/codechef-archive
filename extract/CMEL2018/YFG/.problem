{
    "problem_code": "YFG",
    "problem_author": "kr_abhinav",
    "contest_name": "Code Melange (Rated)",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>kr_abhinav</span>",
    "problem_name": "Y Figures",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "CMEL2018",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/codemelange'>codemelange</a>, <a class='problem-tag-small ' href='/tags/problems/dsu'>dsu</a>, <a class='problem-tag-small ' href='/tags/problems/kr_abhinav'>kr_abhinav</a>, <a class='problem-tag-small ' href='/tags/problems/medium'>medium</a>, <a class='problem-tag-small ' href='/tags/problems/sack'>sack</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>You are given a tree with <b>N</b> nodes, numbered from 1 to <b>N</b>. It is rooted at node 1, and each node i is labelled with a positive integer <b>label<sub>i</sub></b>.</p>\n\n<p>\u2018Y Figures\u2019 of a node X are defined as the number of ordered triplets of nodes (A, B, C) satisfying:</p>\n<ul>\n<li><b>label<sub>A</sub></b> = <b>label<sub>B</sub></b> = <b>label<sub>C</sub></b> = <b>label<sub>X</sub></b>.</li>\n<li>A is an ancestor of X.</li>\n<li>B and C are in the subtree of X and LCA(B,C) = X. </li>\n<li>A, B, C, X are pairwise distinct.</li>\n</ul>\n\n<p>You need to answer Q queries of the form \u2018X Z\u2019. For each query, Change the label of node X to Z and report the number of \u2018Y Figures\u2019 of the node X.  </p>\n\n<p><b>Note:</b> Changes are not persistent. Each query is independent of every other query. </p>\n\n<p>It is advised to use fast I/O methods.</p>\n\n\n<h3>Input</h3>\n<ul>\n<li>First Line of Input consists of a single integer <b>T</b>, the number of test cases.</li>\n<li>First line of every test case contains of two Integers, <b>N</b> and <b>Q</b>,  denoting number of nodes in the tree and the number of queries respectively.</li>\n<li>The second line of input consists of <b>N</b> integers,  where the i-th integer represents <b>label<sub>i</sub></b>, the label of node i (1-indexed).</li>\n<li>The next <b>N - 1</b> lines contain two integers, <b>a</b> and <b>b</b>,  denoting that an edge exists between node <b>a</b> and node <b>b</b>.</li>\n<li>The next <b>Q</b> lines contain two integers, <b>X</b> and <b>Z</b> where <b>X</b> is the node and <b>Z</b> is the new label of the node for the current query.</li>\n</ul>\n\n<h3>Output</h3>\n<ul>\n<li>For every testcase, output <b>Q</b> lines, where each line is the answer to each query in the order of input.</li>\n</ul>\n\n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>T</b> \u2264 1000</li>\n<li>1 \u2264 Sum of all <b>N</b> \u2264 200000</li>\n<li>1 \u2264 <b>a</b>, <b>b</b> \u2264 <b>N</b></li>\n<li>1 \u2264 <b>X</b> \u2264 <b>N</b></li>\n<li>1 \u2264 Sum of all <b>Q</b> \u2264 100000</li>\n<li>1 \u2264 <b>Z, label<sub>i</sub></b> \u2264 1000000000</li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n6 2\n1 1 1 1 1 1\n1 2\n2 3\n3 4\n2 5\n2 6\n2 1\n2 2\n\n<b>Output:</b>\n10\n0\n</pre>\n\n<h3>Explanation</h3>\n<p>For query \u20182 1\u2019, the satisfying triplets are (1,3,5), (1,3,6), (1,4,5), (1,4,6), (1,5,6), (1,5,3), (1,5,4), (1,6,5), (1,6,3) and (1,6,4). </p>\n<p>For query \u20182 2\u2019, there are no satisfying triplets.\n</p>",
    "category_name": "main",
    "date_added": "26-03-2018",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "max_timelimit": "1.5",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/YFG",
    "problem_tester": null,
    "time": {
        "view_start_date": 1522855800,
        "end_date": 1522873800,
        "practice_submission_allowed": true,
        "visible_start_date": 1522873800,
        "submit_start_date": 1522855800,
        "current": 1537432703
    },
    "user": {
        "username": ""
    }
}