{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Read problems statements in <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/SNCKEL17/mandarin/CHEFPRAD.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/SNCKEL17/russian/CHEFPRAD.pdf\">Russian</a> and <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/SNCKEL17/vietnamese/CHEFPRAD.pdf\">Vietnamese</a> as well.</h3>\n\n<p>We define a function maxMatching(A, B, y), which takes two arrays of integers, A and B, an integer y, and returns an integer. The function is described as follows:</p>\n<p>Let N be the size of array A, and M be the size of array B. Consider a bipartite graph with one side having the vertices {a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>}, and the other side having the vertices {b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>M</sub>}. There is an edge between a<sub>i</sub> and b<sub>j</sub> if abs(A<sub>i</sub> - B<sub>j</sub>) \u2264 y. The function returns the size of a <a href = \"https://en.wikipedia.org/wiki/Matching_(graph_theory)#Definition\">maximum matching</a> in this graph.</p>\n\n<p> Now, you are given two arrays, <b>C</b> and <b>D</b>, an integer <b>e</b>, and asked to output the result of this procedure: </p>\n<pre> <code>\nans = maxMatching(C, D, e)\nFOR x = -2*10^9..2*10^9\n\t FOR i = 1..N\n\t \t F[i] = C[i] + x\n\t ans = max(ans, maxMatching(F, D, e))\noutput ans\n</code></pre>\n<p> </p>\n\n<h3>Input</h3>\n<ul>\n<li>The first line contains one integer <b>T</b>, denoting the number of tests. <b>T</b> test cases follows. </li>\n\n<li>The first line of each test case contains three integers: <b>N</b> - number of elements of array <b>C</b>, <b>M</b> - number of elements of array <b>D</b> and <b>e</b>.</li>\n<li>The second line contains <b>N</b> space-separated integers denoting elements of array <b>C</b>.</li>\n<li>The third line contains <b>M</b> space-separated integers denoting elements of array <b>D</b>.</li>\n</ul>\n\n<h3>Output</h3>\n<p> For each test case output the final value of \"ans\" as produced by the given procedure, in a new line. </p>\n\n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>T</b> \u2264 10</li>\n<li>1 \u2264 <b>N, M</b> \u2264 250 </li>\n<li>1 \u2264 <b>C<sub>i</sub>, D<sub>i</sub></b>, <b>e</b> \u2264 10<sup>9</sup></li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n5 7 1\n8 9 18 13 19\n1 3 7 20 17 18 11\n\n<b>Output:</b>\n4\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "1-06-2017",
    "is_direct_submittable": false,
    "contest_name": "SnackDown 2017 Online Elimination Round",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1496498400,
        "end_date": 1496516400,
        "practice_submission_allowed": true,
        "visible_start_date": 1496516400,
        "submit_start_date": 1496498400,
        "current": 1537433821
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>mgch</span>",
    "problem_name": "Chef and Pairs",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/mgch'>mgch</a>",
    "problem_tester_html_handle": "",
    "problem_author": "mgch",
    "contest_code": "SNCKEL17",
    "max_timelimit": "1",
    "problem_code": "CHEFPRAD"
}