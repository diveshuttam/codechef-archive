{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p>\nThe NSS department of NIT Trichy recently assigned the task of planting trees in a portion of the campus to a local nursery.\n<br>\nThe area is a rectangular one ant it is comprised of <b>M * N</b> square units. Among them, only certain squares can be plotted with trees.\n<br><br>\nThe local nursery provided a quotation in which they specified that they would plant the first tree for free. For each subsequent tree they would calculate the cost based on the Berlin principle. \n<br>\nThe Berlin principle states that the cost of planting a tree on a\nunit (x,y) would be the maximum Berlin distance between (x,y) and already plotted trees.\n<br><br>\nBerlin distance between points (a<sub>1</sub> ,b<sub>1</sub> ) & (a<sub>2</sub> ,b<sub>2</sub> ) is given by :\n\n<b> max(|a<sub>1</sub> -a<sub>2</sub> | , |b<sub>1</sub> -b<sub>2</sub> |) </b>\n<br><br>\nObviously, 2 adjacent squares are 1 unit apart. For a given problem find the\n\nminimum cost that can be paid to the nursery in order to plant trees in all the marked\n\nsquares.\n</p>\n\n<h3>Input</h3>\n<p>Input description.</p>\n<p>\u00a0\nFirst line comprises of two space separated integers <b>M,N</b>\n\nFollowing is a <b>M x N</b> matrix <b>W</b>.\n\nIf <b>W[i,j]</b> is 1 it implies that a tree needs to be planted in that square. For any other case <b>W[i,j]</b> is 0\n</p>\n\n<h3>Output</h3>\n<p>Output description.</p>\n<p>\u00a0Single line containing the minimum cost </p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>M, N</b> \u2264 <b> 60 </b></li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n3 3\n\n1 0 0\n\n0 1 0\n\n0 0 1\n<br>\n<b>Output:</b>\n2\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p>We first plant the tree on (1,1) for free. The other trees each incur a cost of 1 unit\n\neach.\n<br><br>\nFor (0,0) -> max(|0-1|,|0- 1|) = 1\n<br>\nFor (2,2) -> max(|2-1|,|2- 1|) = 1\n<br>\n1 + 1 = 2</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "1-02-2017",
    "is_direct_submittable": false,
    "contest_name": "CodeSurf 17",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1486222200,
        "end_date": 1486233000,
        "practice_submission_allowed": true,
        "visible_start_date": 1486233000,
        "submit_start_date": 1486222200,
        "current": 1537434179
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>h5harsh_5</span>",
    "problem_name": "Planting Trees",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/h5harsh_5'>h5harsh_5</a>",
    "problem_tester_html_handle": "",
    "problem_author": "h5harsh_5",
    "contest_code": "COSU2017",
    "max_timelimit": "1",
    "problem_code": "VORTEX6"
}