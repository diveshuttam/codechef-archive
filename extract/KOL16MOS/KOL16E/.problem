{
    "problem_code": "KOL16E",
    "problem_author": "kol_adm",
    "contest_name": "ACM-ICPC Asia-Kolkata Onsite Mirror Contest 2016",
    "todo": false,
    "problem_author_html_handle": "kol_adm",
    "problem_name": "Divide Me Please",
    "source_sizelimit": "40000",
    "problem_tester_html_handle": "",
    "contest_code": "KOL16MOS",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/acm16kol'>acm16kol</a>, <a class='problem-tag-small ' href='/tags/problems/kol_adm'>kol_adm</a>, <a class='problem-tag-small ' href='/tags/problems/medium'>medium</a>, <a class='problem-tag-small ' href='/tags/problems/modular-arith'>modular-arith</a>, <a class='problem-tag-small ' href='/tags/problems/number-theory'>number-theory</a>",
    "body": "<p>There are some short-cut ways to check divisibility of numbers in base 10. Here are some examples:</p>\n<ol>\n\t<li>Remember divisibility testing of 3 in base 10? It was simple, right? We need to add all the digits and then check if it is divisible by 3. Call this method <b>\"1-sum\"</b>.</li>\n\t<li>In case of testing of 11, we need to add all digits by alternating their signs. For example,\u20281354379988104 = 11*123125453464 and (4-0+1-8+8-9+9-7+3-4+5-3+1) = 0, which is divisible by 11 (0 = 0*11).  Lets call this method <b>\"1-altersum\"</b>.</li>\n    <li>In case of 7, we need to add all 3-digit-groups by alternating their signs. For example,\u2028<b>8</b>618<b>727</b>529<b>993</b> = 7*1231246789999 and (<b>993</b>-529+<b>727</b>-618+<b>8</b>) = 581, which is divisible by 7 (581 = 7*83). Similarly, we call this method <b>\"3-altersum\"</b>.</li>\t\n\t<li>In similar Manner, 13\u2019s checking is <b>\"3-altersum\"</b>.</li>\n</ol>\n\n<p>In this problem, we are interested to see divisibility checking of <b>only</b> prime numbers in base 10. For a prime <b>P</b>, you need to find the smallest positive integer <b>N</b> such that <b>P\u2019s divisibility testing</b> is <b>\"N-sum\"</b> or <b>\"N-altersum\"</b>.</p>\n\n<h3>Input</h3>\n\n<p>At first you will be given <b>T (T \u2264 1000)</b>, the number of test cases. Then <b>T</b> lines will follow. In each line there will be single integer <b>P (P \u2264 2<sup>31</sup>-1 = 2147483647)</b>, the prime number (<b>P</b> is a prime number <b>NOT</b> equal to <b>2</b> or <b>5</b>).</p>\n\n<h3>Output</h3>\n<p>For each line of input, produce exactly one line of output like either \"Case &lt;test-case>: &lt;N>-sum\" or \"Case &lt;test-case>: &lt;N>-altersum\". Please see sample input and output for details.</p>\n<h3>Sample</h3> <pre><b>Input</b>\n<p>4\n3\n7\n11\n13</p>\n<b>Output</b>\n<p>Case 1: 1-sum\nCase 2: 3-altersum\nCase 3: 1-altersum\nCase 4: 3-altersum</p>\n</pre>\n",
    "category_name": "main",
    "date_added": "21-12-2016",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "max_timelimit": "2",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/KOL16E",
    "problem_tester": null,
    "time": {
        "view_start_date": 1482816600,
        "end_date": 1482834600,
        "practice_submission_allowed": true,
        "visible_start_date": 1793856333,
        "submit_start_date": 1482816600,
        "current": 1537434261
    },
    "user": {
        "username": ""
    }
}