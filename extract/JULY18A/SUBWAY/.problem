{
    "problem_code": "SUBWAY",
    "problem_author": "lzr010506",
    "contest_name": "July Challenge 2018 Division 1",
    "todo": false,
    "problem_author_html_handle": "lzr010506",
    "problem_name": "Subway Ride",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "JULY18A",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/july18'>july18</a>, <a class='problem-tag-small ' href='/tags/problems/lzr010506'>lzr010506</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Read problems statements in <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/JULY18/mandarin/SUBWAY.pdf\">Mandarin chinese</a>, <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/JULY18/russian/SUBWAY.pdf\">Russian</a> and <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/JULY18/vietnamese/SUBWAY.pdf\">Vietnamese</a> as well.</h3>\n\n\n\nBeing a newcomer to Computopia, Chef is confused by the countless subway lines in the city. Help him!\n\nYou are given an undirected graph with $N$ vertices and $M$ edges. There are no self-loops and no simple cycles that contain more than 2 edges in the graph (i.e. if we replaced each set of multiple edges connecting the same pair of vertices by one edge, we would obtain a tree). Each edge also has a colour.\n\nConsider a simple path with length $K$ in the graph that passes through edges with colours $A_1, A_2, \\dots, A_K$ in this order. The *cost* of this path is defined as $(A_1 \\neq A_2) + (A_2 \\neq A_3) + \\dots + (A_{K-1} \\neq A_K)$, where the boolean value `true` is interpreted as the integer $1$ and `false` is interpreted as $0$. In other words, the cost of a simple path is the number of pairs of neighbouring (consecutive) edges on this path with different colours. The cost of a path with length $0$ is defined to be $0$.\n\nYou need to answer $Q$ queries. In each query, you are given vertices $u$ and $v$; you should find the maximum possible cost of some simple path connecting them.\n\nNote that a simple path may not visit a vertex more than once.\n\n### Input\n- The first line of the input contains two space-separated integers $N$ and $M$.\n- Each of the next $M$ lines contains three space-separated integers $u$, $v$ and $w$ denoting an edge between vertices $u$ and $v$ with colour $w$.\n- The next line contains an integer $Q$.\n- Each of the next $Q$ lines contains two space-separated integers $u$ and $v$ describing a query.\n\n### Output\nFor each query, print a single line containing one integer \u2014 the maximum cost of a simple path.\n\n### Constraints \n- $1 \\le N, Q \\le 500,000$\n- $1 \\le M \\le 1,000,000$\n- $1 \\le u, v \\le N$\n- for each edge, $u \\neq v$\n- $1 \\le w \\le M$\n\n### Subtasks\n**Subtask #1 (20 points):**\n- $1 \\le N, Q \\le 10$\n- $1 \\le M \\le 100$\n\n**Subtask #2 (20 points):**\n- $1 \\le N, Q \\le 500$\n- $1 \\le M \\le 10,000$\n\n**Subtask #3 (20 points):**\n- $1 \\le N, Q \\le 5,000$\n- $1 \\le M \\le 100,000$\n\n**Subtask #4 (20 points):**\n- $1 \\le N, Q \\le 100,000$\n- $1 \\le M \\le 300,000$\n\n**Subtask #5 (20 points):** original constraints\n\n### Example Input\n```\n8 10\n1 2 1\n1 2 2\n1 3 2\n1 3 3\n2 4 2\n2 5 1\n3 6 3\n3 7 1\n3 8 1\n3 8 3\n5\n2 3\n5 6\n4 6\n4 8\n4 7\n```\n\n### Example Output\n```\n1\n2\n3\n3\n3\n```\n",
    "category_name": "main",
    "date_added": "28-06-2018",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "max_timelimit": "4",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/SUBWAY",
    "problem_tester": null,
    "time": {
        "view_start_date": 1530869400,
        "end_date": 1531733400,
        "practice_submission_allowed": true,
        "visible_start_date": 1531733400,
        "submit_start_date": 1530869400,
        "current": 1537432288
    },
    "user": {
        "username": ""
    }
}