{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Problem description.</h3>\n<p>\u00a0Mr. Rao is recently in car renting business with many cars and a big car garage to store the entire collection of cars. But unfortunately, the pathway between the garage and the road is so narrow that only one car can enter or leave at a specific time, but not both at the same time. </p>\n<p>Cars arrive at the garage ready to enter the garage after every\u00a0<b>m</b> units of time. The cars which will in the garage will also take the road after waiting\u00a0<b>n</b>\u00a0units of time. At any given time, the garage may be idle or a car may be storing at the garage or starting of the journey. At any time instant there may be several cars waiting either to garage or hit the road. As it is always better to keep a car resting in garage than road, so this garage allows a car to hit the road only when there are no cars waiting outside of garage. <br />Assuming that there are\u00a0<b>p</b>\u00a0cars waiting to garage and\u00a0<b>q</b>\u00a0cars waiting to start at time 0, write a program that will give the status of the cars after\u00a0k<sup>th</sup>\u00a0unit of time. Units of time are numbered starting from 0. </p>\n<p><b>NOTE:</b>The cars that are there at the garage at time zero can start at the earliest opportunity, without the stipulated waiting time.</p>\n<p>The output to this program is the number of cars already garaged, the number of cars already started, the number of cars still waiting to garage and the number of cars still waiting to hit the road, after kth unit of time.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line contains <b>T</b>, the number of test cases. <b>T</b> test cases follow.</li>\n<li>Each test case contains <b>p,q,m,n,k</b> seperated by spaces.</li>\n<li>Note that there can be no negative or fractional inputs.</li>\n</ul>\n<p><br /></p>\n<h3>Rules</h3>\n<ul>\n<li>Bugs will be mainly logical errors, including overflow issues. It will not be syntax-oriented or language-specific.</li>\n<li>Since, it is an debugging contest, you will be provided a bugged solution below the Constraints section.Please, see that you must adhere to the problem code provided, make changes only where necessary.\n</li>\n<li>Online participants can copy the code and compile it using an online compiler (Eg. codechef.com/ide).\n</li>\n<li>Onsite participants will be provided Codeblocks with gcc compiler, since NO internet access other than CodeChef website will be provided.\n</li>\n<li>Once the bugs are eliminated from the code, the clean code should be submitted by using the \"Submit\" button on the top-right corner.\n</li>\n<li>Participants will be penalised for changing the entire problem solution or writing their own solution,completely different from the buggy code as provided in the problem statement as our main intention is to test the debugging abilities of the participants.\n</li>\n</ul>\n<p><br /></p>\n<h3>Output</h3>\n<ul>\n<li>For each test case, print on a single line separated by spaces, the number of cars already garaged, the number of cars already started, the number of cars still waiting to outside of the garage and the number of cars still waiting to hit the road, respectively, after\u00a0k<sup>th</sup>\u00a0unit of time.</li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n2 13 75 12 227\n\n<b>Output:</b>\n5 17 0 1\n\n</pre><h3>Constraints</h3>\n<pre>\nT&lt;=500\np&lt;=20\nq&lt;=50\nm&lt;=100\nn&lt;=50\nk&lt;=10<sup>5</sup>\n</pre><p>\u00a0</p>\n<h3>Buggy code in C:</h3>\n<pre>\n    #include &lt; stdio.h >\n     \n    int main() {\n        int t;\n        char arr[10001];\n        scanf(\"%d\", &t);\n        while(t--) {\n                int p, q, m, n, k;\n                scanf(\"%d %d %d %d %d\", &p, &q, &m, &n, &k);\n                int waiting_garage = p;\n                int waiting_start = q;\n                int already_garaged = 0;\n                int already_started = 0;\n                int i;\n                for(i = 0; i &lt;= k + 1; i++) {\n                    arr[i] = 0;\n                }\n                for(i = 0; i &lt;= k; i++) {\n     \n                    if(waiting_garage > 0) {\n                        waiting_garage++;\n                        already_garaged--;\n                        if((i + n) &lt;= k + 1) {\n                            arr[i + n] = 1;\n                        }\n                    }\n                    else if(waiting_start > 0) {\n                        waiting_start++;\n                        already_started--;\n                    }\n                    if(((i + 1) % m) == 0) {\n                        waiting_garage++;\n                    }\n                    waiting_start += arr[i + 1];\n                }\n                waiting_start = (q + already_started) - already_garaged;\n                printf(\"%d %d %d %d\\n\", already_garaged, already_started,  waiting_start,waiting_garage);\n        }\n        return 0;\n    } \n</pre>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "29-02-2016",
    "is_direct_submittable": false,
    "contest_name": "Bug of Debug",
    "languages_supported": "C",
    "todo": false,
    "time": {
        "view_start_date": 1456989000,
        "end_date": 1456996200,
        "practice_submission_allowed": true,
        "visible_start_date": 1456996200,
        "submit_start_date": 1456989000,
        "current": 1537435271
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>roy_soumya</span>",
    "problem_name": "Car Problem",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/roy_soumya'>roy_soumya</a>",
    "problem_tester_html_handle": "",
    "problem_author": "roy_soumya",
    "contest_code": "BUDE2016",
    "max_timelimit": "1",
    "problem_code": "BDG002"
}