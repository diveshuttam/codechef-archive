{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<p>Problem text...\nAt the largest conference on coding and cryptography the following theorem needed a proof or a counterexample: Suppose you are given a set of words of equal length; each word consisting of 0's, 1's and/or *'s. Furthermore suppose the pattern of *'s is different for all words in the set. By this we mean: if you replace all 0's and 1's by say $ you obtain different words. \n\nThe claim is: if you replace the *'s by 0's and 1's in all possible ways, then you obtain a set that is at least as big as the set you started with. \n\nExample: \n\n{ 10*, *0*, *00 } produces { 100, 101, 000, 001 } \n\n{ 100, 101, 10* } produces { 100, 101 } \n\nNotice that the set in the latter example does not satisfy the condidtion mentioned above, so it does not provide a counterexample. \n\nYou program has to check for a number of cases: \nWhether the pattern of *'s is different for all words in the set and: \nCompute the number of words obtained by replacing the *'s by 0's and 1's. \nThe words will not be longer than 15 symbols.\n<h3>Input</h3>\n<p>Input description...\nThe input is a text-file that presents a sequence of sets. Each set is described as follows. The first line gives two integers: the length of the words and the number of the words. Then follow the words, each on a separate line. The end of the sequence of sets is indicated by a set with wordlength 0 and number of words equal to 0.\n<h3>Output</h3>\n<p>Output description...\nThe output is a textfile that contains one line for each set. if the pattern of *'s is different for all the words in this set this line should contain YES (in uppercase), followed by a space and the number of obtained words, otherwise it should contain NO (uppercase) only.\n<h3>Example</h3>\n\n<pre>\n<b>Input:</b>\n3 3\n10*\n*0*\n*00\n4 3\n1100\n1101\n110*\n0 0\n\n<b>Output:</b>\nYES 4\nNO\nYES 0\n</pre>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "14-02-2010",
    "is_direct_submittable": false,
    "contest_name": "Code Spaghetti",
    "languages_supported": "C",
    "todo": false,
    "time": {
        "view_start_date": 1266690600,
        "end_date": 1266777000,
        "practice_submission_allowed": true,
        "visible_start_date": 1654180175,
        "submit_start_date": 1266690600,
        "current": 1537439723
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>rushikesh30</span>",
    "problem_name": "Filling the Gaps ",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/rushikesh30'>rushikesh30</a>",
    "problem_tester_html_handle": "",
    "problem_author": "rushikesh30",
    "contest_code": "CSOC10",
    "max_timelimit": "0.731707",
    "problem_code": "CS10"
}