{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p><b> For Turbo C++ Users : Read the following document before attempting the question : <br /><a href=\"http://foobar.iiitd.edu.in/turbo.pdf\" > Switching from Turbo to GNU </a> </b><br />\n<br /><br /><br /></p>\n<h3>Problem Description</h3>\n<p>Hank Pym is an aspiring student at IIITD. He has almost completed his work on Ultron, the ultimate artificial intelligence. However, one thing remains. He feels that Ultron should have a fail-safe code which can be used to switch him off (just in case Ultron decides to wipe out our race). So, he encodes the number and feeds it into Ultron. Hank shares the number with the rest of the Avengers and the way to decrypt it:<br />\n<br /><br />\n<i><br />\nDivide the encrypted number \u2018N\u2019 by its biggest prime divisor. Now, divide the resultant number by its biggest prime divisor and continue the process (i.e., recursively) until the resultant number doesn\u2019t have any prime divisors. The decrypted code is the number of times you have to do this process.<br />\n</i><br />\n<br />\nHank wants you to decrypt the number for him, so that he may store it somewhere safe (maybe inside one of the books at the IIITD library).Can you help Hank?</p>\n<h3>Input</h3>\n<p>First line contains \u2018T\u2019, the number of test cases.<br />\nEach test case is given on a new line, which consists of a number the encrypted number 'N'.</p>\n<h3>Output</h3>\n<p>For each test case, print the decrypted number.</p>\n<h3>Constraints</h3>\n<p>Should contain all the constraints on the input data that you may have. Format it like:</p>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>100</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>10^9</b></li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n4\n2\n9\n100\n17\n\n<b>Output:</b>\n1\n2\n4\n1\n</pre><p>\u00a0</p>\n<h3>Explanation</h3>\n<ul>\n<li>For the <b>first</b> test case, 2 has no prime divisors apart from itself. So, the answer is 1.</li>\n<li>For the <b>second</b> test case, 9 has 3 as the only prime divisor. Dividing it by 3, we get 3.Dividing 3 by itself, we get 1, which has no prime divisors. So, the answer is 2.</li>\n<li>For the <b>third</b> test case, the largest prime divisor is 5. Dividing, we get 20.The largest prime factor of 20 is 5. So, dividing by 5, we get 4. The largest prime factor of 4 is 2. Dividing, we get 2. Again dividing 2 by 2, we stop at 1.So, we did the division 4 times. Hence, the answer is 4.</li>\n<li>The <b>fourth</b> test case is similar to the first test case.</li>\n</ul>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "10-07-2015",
    "is_direct_submittable": false,
    "contest_name": "Procon Junior 2015",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "todo": false,
    "time": {
        "view_start_date": 1438317000,
        "end_date": 1438327800,
        "practice_submission_allowed": true,
        "visible_start_date": 1438327800,
        "submit_start_date": 1438317000,
        "current": 1537436164
    },
    "problem_author_html_handle": "proconjr2015",
    "problem_name": "Age of Ultron",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/proconjr2015'>proconjr2015</a>",
    "problem_tester_html_handle": "",
    "problem_author": "proconjr2015",
    "contest_code": "PRCNJR15",
    "max_timelimit": "1",
    "problem_code": "AOU"
}