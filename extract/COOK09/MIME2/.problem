{
    "problem_code": "MIME2",
    "problem_author": "pieguy",
    "contest_name": "April Cook-Off Challenge",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>pieguy</span>",
    "problem_name": "Internet Media Types",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "friggstad",
    "contest_code": "COOK09",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cook09'>cook09</a>, <a class='problem-tag-small ' href='/tags/problems/easy'>easy</a>, <a class='problem-tag-small ' href='/tags/problems/pieguy'>pieguy</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Many internet protocols these days include the option of associating a\nmedia type with the content being sent.\nThe type is usually inferred from the file extension.\nYou are to write a program that facilitates the lookup of media types for\na number of files.</p>\n\n<p>You will be given a table of media type associations that associate a certain\nfile extension with a certain media type.\nYou will then be given a number of file names, and tasked to determine the correct\nmedia type for each file.\nA file extension is defined as the part of the file name after the final period.\nIf a file name has no periods, then it has no extension and the media type cannot\nbe determined.\nIf the file extension is not present in the table, then the media type cannot be\ndetermined.\nIn such cases you will print \"unknown\" as the media type.\nIf the file extension does appear in the table (case matters), then print the associated\nmedia type.</p>\n\n<h3>Input</h3>\n<p>Input begins with 2 integers N and Q on a line.\nN is the number of media type associations, and Q is the number of file names.\nFollowing this are N lines, each containing a file extension and a media type, separated by a space.\nFinally, Q lines, each containing the name of a file.</p>\n<p>N and Q will be no greater than 100 each.\nFile extensions will consist only of alphanumeric characters, will have length at most 10, and will be distinct.\nMedia types will have length at most 50, and will contain only alphanumeric characters and punctuation.\nFile names will consist only of alphanumeric characters and periods and have length at most 50.</p>\n\n<h3>Output</h3>\n<p>For each of the Q file names, print on a line the media type of the file.\nIf there is no matching entry, print \"unknown\" (quotes for clarity).</p>\n\n<h3>Sample Input</h3>\n<pre>5 6\nhtml text/html\nhtm text/html\npng image/png\nsvg image/svg+xml\ntxt text/plain\nindex.html\nthis.file.has.lots.of.dots.txt\nnodotsatall\nvirus.exe\ndont.let.the.png.fool.you\ncase.matters.TXT\n</pre>\n\n<h3>Sample Output</h3>\n<pre>text/html\ntext/plain\nunknown\nunknown\nunknown\nunknown\n</pre>",
    "category_name": "main",
    "date_added": "12-04-2011",
    "status": "success",
    "languages_supported": "C, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "max_timelimit": "0.1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/MIME2",
    "problem_tester": "friggstad",
    "time": {
        "view_start_date": 1303660800,
        "end_date": 1303669800,
        "practice_submission_allowed": true,
        "visible_start_date": 1303669800,
        "submit_start_date": 1303660800,
        "current": 1537439227
    },
    "user": {
        "username": ""
    }
}