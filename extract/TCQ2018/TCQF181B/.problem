{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<p> </p>\n<p>Dexter is the smartest kid in his class. He gave <b>N</b> tests and scored <b>S[i]</b> in each.\nIf there are <b>Y</b> papers with marks greater than or equal to the median Dexter will be happy else he'll be sad. Determine the minimum marks he would additionally need to be happy. </p>\n<p> </p>\n\n\n<h3>Input</h3>\n<p>First line of input contains <b>T</b> - the number of test cases. First line of each test case consists of <b>N</b> , denoting the number of tests and <b>Y</b> , denoting number of papers for which marks should be greater than or equal to the median. Second line of each test case consists of <b>N</b> numbers denoting scores in N papers.\n</p>\n<p> </p>\n\n<h3>Output</h3>\n<p>For each test case, output the minimum additional marks required to make Dexter happy.<br>\nIf Dexter is already happy print \u201c0\u201d (without quotes).<br>\nIf it is not possible to make Dexter happy print \"-1\" (without quotes).<br>\n<p> </p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>100</b></li>\n<li><b>1</b> \u2264 <b>N, Y</b> \u2264 <b>10<sup>5</sup></b> where N is always odd.</li>\n<li><b>1</b> \u2264 <b>S[i]</b> \u2264 <b>10<sup>9</sup></b></li>\n</ul>\n<p> </p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n7 5\n1 5 3 2 2 5 6\n\n\n<b>Output:</b>\n1\n</pre>\n<p> </p>\n<h3>Explanation</h3>\n<p><b>Example case 1:</b>\n1 2 2 3 5 5 6 (so median is 3)\nSince RHS elements of 3 are already greater than 3 we have a total of 4 subjects that Dexter is satisfied with. So now he needs one extra mark from the LHS element 2 to make it equal to 3</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "28-01-2018",
    "is_direct_submittable": false,
    "contest_name": "Turing Cup Qualifier 1",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1517715000,
        "end_date": 1517758200,
        "practice_submission_allowed": true,
        "visible_start_date": 1828727587,
        "submit_start_date": 1517715000,
        "current": 1537433061
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>nerdyninja</span>",
    "problem_name": "Dexter and Marks",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/codechef'>codechef</a>, <a class='problem-tag-small ' href='/tags/problems/nerdyninja'>nerdyninja</a>, <a class='problem-tag-small ' href='/tags/problems/simple'>simple</a>, <a class='problem-tag-small ' href='/tags/problems/turingcup'>turingcup</a>",
    "problem_tester_html_handle": "",
    "problem_author": "nerdyninja",
    "contest_code": "TCQ2018",
    "max_timelimit": "1",
    "problem_code": "TCQF181B"
}