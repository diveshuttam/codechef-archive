{
    "problem_code": "LBRACKET",
    "problem_author": "gvaibhav21",
    "contest_name": "ICPC Preparatory Series by Team Forthewatch Mirror contest",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>gvaibhav21</span>",
    "problem_name": "Luther and Brackets",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "IPC15CMR",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/data-structure'>data-structure</a>, <a class='problem-tag-small ' href='/tags/problems/gvaibhav21'>gvaibhav21</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/segment-tree'>segment-tree</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\n\nLuther likes solving mathematical expressions. However, he hates dealing with parenthesis in his expressions. Hence, when he comes accross a problem involving bracket sequence, he asks for your help:<br><br>\n\nGiven a string containing only '<b>(</b>' and '<b>)</b>', you have to handle 2 types of operations on it:<br><br>\n\n1. update <b>x</b>,<b>y</b>: flip all parenthesis in the string lying between <b>x</b> to <b>y</b> (both inclusive) (all occurrences of '<b>(</b>' are replaced with '<b>)</b>' and all occurences of '<b>)</b>' are replaced with '<b>(</b>' ).<br><br>\n\n2. query <b>x</b>: find the longest contiguous correct bracket sequence starting from position <b>x</b>.<br><br>\n\nThe length of the string is <b>N</b> , and you have to handle <b>Q</b> operations.<br><br>\n\nHelp Luther in performing the operations efficiently.<br>\n\n<b>Note:</b>\nA Correct Bracket Sequence (CBS) is a sequence that can be obtained through following rules:<br>\n1) An empty string is a CBS. <br>\n2) If <b>A</b> is a CBS, then <b>B</b> = (<b>A</b>) is also a CBS. <br>\n3) If <b>A</b> and <b>B</b> are CBS, then <b>C</b> = <b>AB</b> is also a CBS.\n\n</p>\n\n\n<h3>Input</h3>\n<p>\n\nThe first line contains 2 space seperated integers: <b>N</b> and <b>Q</b>.<br>\nThe next line contains a string of length <b>N</b>, consisting of only '<b>(</b>' and '<b>)</b>'.<br>\n<b>Q</b> lines follow, each line containing the description of an operation in the following format:<br><br>\n\nfor Update operation:<br>\n1 <b>x y</b><br><br>\n\nfor Query operation:<br>\n2 <b>x</b><br>\n\n</p>\n\n\n<h3>Output</h3>\n<p>\nOutput the answer for each query operation on a seperate line.<br>\n</b>\n</p>\n\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>200000</b></li>\n<li><b>1</b> \u2264 <b>Q</b> \u2264 <b>200000</b></li>\n<li><b>1</b> \u2264 <b>x \u2264 y</b> \u2264 <b>N</b></li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n7 5\n(()()))\n2 1\n2 2\n1 4 6\n2 2\n2 5\n\n<b>Output:</b>\n6\n4\n2\n0\n</pre>\n\n<h3>Explanation:</h3>\n\nInitially, string is: (()())) <br><br>\n\n1. The longest CBS starting at position 1 is (()())<br>\n2. The longest CBS starting at position 2 is ()()<br>\n3. After the update, the string becomes: (())(()<br>\n4. The longest CBS starting at position 2 is ()<br>\n5. The longest CBS starting at position 5 is the empty string.<br>\n",
    "category_name": "main",
    "date_added": "29-09-2016",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/LBRACKET",
    "problem_tester": null,
    "time": {
        "view_start_date": 1475422200,
        "end_date": 1475440200,
        "practice_submission_allowed": true,
        "visible_start_date": 1475440200,
        "submit_start_date": 1475422200,
        "current": 1537434504
    },
    "user": {
        "username": ""
    }
}