{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p>\n        Mrs. Mashini is doing lectures for UWU students. She usually tell \"Come forward!\" to students in the back rows. Front rows are the first 50% rows of all rows and in other hand back rows are the rest. When she told \"Come forward!\", Students in the back rows are moving to available front seats.\n\n        Specially when they are moving they usually chek whether all students in the same back row can move to available single front row . \n        If there is no possibility to move (not enough available seats in front rows) they will stay and not going to move anywhere. also once students moved into a row in front none of students will come to that row again.it's guarranteed that none of back row is empty.\n        <br/><br/>\n        <img src=\"http://codechef_shared.s3.amazonaws.com/download/upload/CONI2018/front1.png\" alt=\"front1\" border=\"0\">\n        <br/><br/>\n\n        There are 4 rows and row 3 and row 4 is identified as back rows (Because first 50% are front rows).\n        <br/><br/>\n\n\n        <img src=\"http://codechef_shared.s3.amazonaws.com/download/upload/CONI2018/front2.png\" alt=\"front2\" border=\"0\">\n\n        <br/><br/>\n\n        When she told \"Come forward!\" Student in the row 1 can move in to row 1 and those 3 students in last row will go to row 2. We print 2 as the answer because 2 rows can move by maximizing no of students.\n</p>\n<p>\u00a0</p>\n\n\n<h3>Input</h3>\n<p>First line is No of rows <b>(T)</b> in the lecture hall\n\n        Each <b>T</b> lines will give Total seats in current row - <b>X</b>  and Total students sitting in particular row - <b>Y</b>  as pairs</p>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p>Print single integer <b>Z</b> has the value of how many number of rows can move from back row to front row by maximizing the number of students who will move.</p>\n<p>\u00a0</p>\n\n<h3>Contraints</h3>\n<ul>\n        <li><b>T</b> is always even</li>\n\n        <li>2 \u2264 T \u2264 100</li>\n        \n        <li>2 \u2264 Y \u2264 X \u2264 100  Y != 0 for back rows</li></Y>\n</ul>\n<p>\u00a0</p>\n\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n4\n4 2\n3 0\n3 1\n5 3\n\n<b>Output:</b>\n2\n</pre>\n<p>\u00a0</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "15-03-2018",
    "is_direct_submittable": false,
    "contest_name": "CodeNight",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1521289800,
        "end_date": 1521300600,
        "practice_submission_allowed": true,
        "visible_start_date": 1521300600,
        "submit_start_date": 1521289800,
        "current": 1537432813
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>shalithasurang</span>",
    "problem_name": "Front Rows",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/shalithasurang'>shalithasurang</a>",
    "problem_tester_html_handle": "",
    "problem_author": "shalithasurang",
    "contest_code": "CONI2018",
    "max_timelimit": "1",
    "problem_code": "FRNTR"
}