{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p><strong>The following a tie breaker problem.  The best solution will receive one point.  All other successful answers will be scored on a curve and receive a fraction of a point based on how close they come to the best answer.</strong></p>\n\n<p>Given a large board (with holes) and set of tetris-like figures (an unlimited source, capable of generating any number of them), try to cover the board as exactly as possible.\nThe source is capable of generating the following pieces:\n<p style=\"font-family: monospace\">\n\n<pre  style=\"font-family: monospace\">\n1)\n###\n.#.\n</pre>\n<p>\n<pre style=\"font-family: monospace\">\n2)\n##.\n.##\n</pre>\n<p>\n<pre style=\"font-family: monospace\">\n3)\n#.#\n###\n</pre>\n<p>\n<pre style=\"font-family: monospace\">\n4)\n###\n#..\n</pre>\n<p>\n<pre style=\"font-family: monospace\">\n5)\n..#\n###\n#..\n</pre>\n<p>\n<pre style=\"font-family: monospace\">\n6)\n#.#\n###\n.#.\n</pre>\n<br/>\n<p>\nYou are allowed to flip and rotate pieces before placing them on the board.\n<h3>Input</h3>\n<p>\nThe first line contains two numbers - 100<=<var>n</var>,<var>m</var><=1000 - the height and the width of the board.\nThe next <var>n</var> lines, each containing <var>m</var> space-separated numbers, are the board description. The symbol '<b>0</b>' is a square which should be filled, the symbol '<b>1</b>' is a square which should not be filled.\n\n<h3>Output</h3>\n<p>\nFirst output the number of pieces used, <var>k</var> < 10<sup>6</sup>. Then write <var>k</var> successive descriptions of the used pieces. Each description should be of the form: <var>t</var> - the number of full squares of the piece, followed by <var>t</var> pairs of integers denoting the coordinates of the respective squares (using 0-based offsets, with the top-left of input written as (0,0) ).\n\n<h3>Example</h3>\n\n<pre>\n<b>Input:</b>\n3 3\n0 0 0\n0 1 0\n0 0 0\n\n\n<b>Output:</b>\n2\n4\n0 0\n0 1\n1 1\n0 2\n4\n0 2\n1 2\n2 2\n2 1\n\n</pre>\n<h3>Scoring</h3>\n<p>\nFor each square you will receive a penalty, calculated in the following way:\nLet <var>a</var> be the number a square should be covered by (either 0 or 1), and let <var>b</var> be the actual number <i>of times</i> the square has been covered by a # piece (pieces <b>may overlap</b>). If <var>a</var> > <var>b</var> (the square should have been covered, but was not), the penalty is <b>3</b>. If <var>b</var> > <var>a</var> (the square should not have be covered and was covered, or should have been covered, but was covered more than once), the penalty is <b><var>b</var>-<var>a</var></b>.\nThe total penalty is the sum of individual penalties, taken over all squares.\n<br/>\n\n<p>\nIn the example the penalty is 3+3+1+1 = 8.\n</p>\n\n<p>\nThe program will be run several times for different data sets and the overall score will be the mean of scores received.\n</p>\n\n<h3>Tests</h3>\n<p>\nAll tests have been randomly generated, with <b>1</b> covering less than 40% of the total number of squares.",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "15-04-2009",
    "is_direct_submittable": false,
    "contest_name": "May 2009 (Contest III)",
    "languages_supported": "C, JAVA, PYTH, CS2, PAS fpc, PAS gpc, RUBY, PHP, HASK, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, TEXT",
    "todo": false,
    "time": {
        "view_start_date": 1241170200,
        "end_date": 1242034200,
        "practice_submission_allowed": true,
        "visible_start_date": 1242034200,
        "submit_start_date": 1241170200,
        "current": 1537439945
    },
    "problem_author_html_handle": "admin",
    "problem_name": "Best board fill",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin'>admin</a>",
    "problem_tester_html_handle": "",
    "problem_author": "admin",
    "contest_code": "MAY09",
    "max_timelimit": "0.120365",
    "problem_code": "CX"
}