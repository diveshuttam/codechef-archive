{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKFL16/mandarin/XORPATH.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKFL16/russian/XORPATH.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKFL16/vietnamese/XORPATH.pdf\">Vietnamese</a> as well.</h3>\n\n\n<p>Chef was practicing with some graph theory problems in CodeChef. He was trying to solve a problem involving finding the <b>shortest path</b> in a weighted, undirected graph. He thought it was quite standard, so he coded the solution and submitted it. Unfortunately it was judged \u201cWrong Answer\u201d.</p>\n\n<p>Wanting to debug, Chef downloaded Peter Xor's accepted solution. He also made a test case, illustrated by the following image:</p>\n\n<img src=\"https://s3.amazonaws.com/codechef_shared/download/upload/JULY16/XORPath.png\" width=\"100%\">\n\n<p>Now, what is the cost of the shortest path from 1 to 5? Chef thought that the answer should be <b>36 + 16 + 18 = 70</b>, because the other candidate path has a higher total cost of <b>36 + 50 + 11 + 18 = 115</b>. But he was surprised when Peter Xor's accepted solution outputted <b>15</b>! Chef was confused because he can't see any path with a total cost of <b>15</b>.</p>\n\n<p>After rereading the problem, Chef found his mistake. The problem's title was actually <b>Xortest path</b>, not <b>Shortest path</b>, so the problem was actually asking for the path between two given nodes with <b>the least possible XOR</b>! So in the example above, the answer is indeed <b>15</b>, because the path <b>1 \u2192 2 \u2192 3 \u2192 4 \u2192 5</b> has an XOR cost of <b>36 \u2295 50 \u2295 11 \u2295 18 = 15</b>, and no other path has a lower XOR cost than this. In other words, this is the \u201cxortest path\u201d.</p>\n\n<p>Now that Chef knows his mistake, he still has a problem; he doesn't know how to answer this problem! Your task as his sous-chef is to answer this problem for him. Specifically, you have to answer <b>Q</b> queries, where each query is a pair of nodes, and the answer is the weight of the \u201cxortest path\u201d between them.</p>\n\n<p>Note that in this problem, a <b>path</b> may pass through an edge or node any number of times. (Some authors would call such a path a <b>walk</b>.) For instance, in the example above, the path <b>1 \u2192 2 \u2192 4 \u2192 3 \u2192 2 \u2192 4 \u2192 5</b> is also a \u201cxortest path\u201d, because its XOR cost is <b>36 \u2295 16 \u2295 11 \u2295 50 \u2295 16 \u2295 18 = 15</b>.</p>\n\n<h3>Input</h3>\n<p>The first line of input contains three integers, <b>N</b>, <b>E</b> and <b>Q</b>. Nodes are labelled <b>1</b> to <b>N</b>.</p>\n<p>The following <b>E</b> lines describe the edges. The <b>i<sup>th</sup></b> line contains three integers <b>a<sub>i</sub></b>, <b>b<sub>i</sub></b> and <b>c<sub>i</sub></b>, which means that there is an undirected edge between nodes <b>a<sub>i</sub></b> and <b>b<sub>i</sub></b> with weight <b>c<sub>i</sub></b>.</p>\n<p>The following <b>Q</b> lines describe the queries. The <b>j<sup>th</sup></b> line contains two integers <b>x<sub>j</sub></b> and <b>y<sub>j</sub></b>, which means that you need to find the \u201cxortest path\u201d between nodes <b>x<sub>j</sub></b> and <b>y<sub>j</sub></b>.</p>\n\n\n<h3>Output</h3>\n<p>Output <b>Q</b> lines, one for each query. The <b>j<sup>th</sup></b> line must contain a single integer, the weight of the xortest path between <b>x<sub>j</sub></b> and <b>y<sub>j</sub></b>. If there does not exist a path between these nodes, output \u201c<tt>XIT</tt>\u201d (without quotes) instead.</p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>N</b>, <b>E</b>, <b>Q</b> \u2264 <b>10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>a<sub>i</sub></b>, <b>b<sub>i</sub></b>, <b>x<sub>j</sub></b>, <b>y<sub>j</sub></b> \u2264 <b>N</b></li>\n<li><b>0</b> \u2264 <b>c<sub>i</sub></b> \u2264 <b>10<sup>9</sup></b></li>\n<li>Parallel edges or self-loops may appear.</li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n<tt>7 7 5\n1 2 36\n2 4 16\n4 5 18\n2 3 50\n3 4 11\n6 6 100\n7 6 100\n1 5\n5 1\n1 2\n6 7\n1 7\n</tt>\n<b>Output:</b>\n<tt>15\n15\n13\n0\nXIT</tt>\n</pre>\n\n<h3>Explanation</h3>\n<p>The sample input is illustrated by the image above.</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "7-06-2016",
    "is_direct_submittable": false,
    "contest_name": "SnackDown 2016 Onsite Final Mirror",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1468047000,
        "end_date": 1468065000,
        "practice_submission_allowed": true,
        "visible_start_date": 1468065000,
        "submit_start_date": 1468047000,
        "current": 1537434776
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>kevinsogo</span>",
    "problem_name": "Xortest Path",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/kevinsogo'>kevinsogo</a>",
    "problem_tester_html_handle": "",
    "problem_author": "kevinsogo",
    "contest_code": "SNFL16MR",
    "max_timelimit": "1",
    "problem_code": "XORPATH"
}