{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKFL16/mandarin/RAINFALL.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKFL16/russian/RAINFALL.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKFL16/vietnamese/RAINFALL.pdf\">Vietnamese</a> as well.</h3>\n<p>\nYou are given an <b>n*m</b> matrix <b>A</b>. <b>A[1][1]</b> is the top-left cell, and <b>A[n][m]</b> is the bottom-right cell. You want to fill a matrix <b>B[n][m]</b> using the following pseudo code. All the entries of matrix <b>B</b> are zero initially.\n</p>\n<p>\n<code>randomInt(a, b)</code> returns an uniform random integer between a and b (both inclusive). That is, all the b-a+1 integers have an equal probability of being returned.\n</p>\n<pre>\n<code>\nFor x = 1 to n:\n  For y = 1 to m:\n    I = randomInt(1, x)\n    J = randomInt(1, y)\n    K = randomInt(x, n)\n    L = randomInt(y, m)\n    Consider the rectangle formed by (I, J) as top-left and (K, L) as \n    right-bottom cell. Add A[x][y] to every cell in the B matrix which\n    is within this rectangle.\n    This means B[p][q] += A[x][y] if I &lt;= p &lt;= K and J &lt;= q &lt;= L.\n</code>\n</pre>\n<p>\nA city is constructed, which has <b>n * m</b> houses. The house located at <b>(i, j)</b> has height <b>B[i][j]</b> above sea level. After <b>X</b> amount of rainfall, all houses whose height is less than or equal to <b>X</b> are submerged in water.\n</p>\n<p>\nNote than in the above construction, the heights of houses inside the city are not constant, but vary based on outcome of the previous algorithm.\n</p>\n<p>\nYou have to answer <b>Q</b> queries, where each query is defined by an integer <b>k</b> (<b>0 &lt; k &lt; n * m</b>). You have to find the smallest integer <b>X</b>, so that if there is <b>X</b> amount of rainfall, expected number of houses submerged in water are at least <b>k</b>.\n</p>\n<h3>Input</h3>\n<p>\nThe first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.\n</p>\n<p>The first line of each test case contains three integers, <b>n, m</b> and <b>Q</b>.</p>\n<p>The next <b>n</b> lines contain <b>m</b> space separated integers each, denoting the initial matrix <b>A</b>.</p>\n<p>The next <b>Q</b> lines have one integer each, the query parameter <b>k</b>.</p>\n<h3>Output</h3>\n<p>For each test case, for each query, output a single line containing the smallest value of integer <b>X</b>.</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>1000</b></li>\n<li><b>1 \u2264 n,m \u2264 20</b></li>\n<li><b>1 \u2264 A[i][j] \u2264 5</b></li>\n<li><b>1 \u2264 Q \u2264 400</b></li>\n<li><b>0 &lt; k &lt; n*m</b> </li>\n<li>The sum of <b>n*m</b> for all test cases in a single file does not exceed 500 </li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n1 2 1\n2 3\n1\n\n<b>Output:</b>\n3\n</pre><h3>Explanation</h3>\n<p>\nThese are the following possible values of B:</p>\n<pre>\n2 3\n\n5 3\n\n2 5\n\n5 5\n</pre><p>\nAll these four values of <b>B</b> appear with same probability, 1/4. The expected number of houses submerged when X = 3 is (2 * 1/4 + 1 * 1/4 + 1 * 1/4 + 0 * 1/4) = 1.<br />\nif rainfall is less than 3, then the expected number of submerged houses is less than 1.<br />\n\n</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "7-07-2016",
    "is_direct_submittable": false,
    "contest_name": "SnackDown 2016 Onsite Final Mirror",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1468047000,
        "end_date": 1468065000,
        "practice_submission_allowed": true,
        "visible_start_date": 1468065000,
        "submit_start_date": 1468047000,
        "current": 1537434774
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>utkarsh_lath</span>",
    "problem_name": "Rain vs City",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/utkarsh_lath'>utkarsh_lath</a>",
    "problem_tester_html_handle": "",
    "problem_author": "utkarsh_lath",
    "contest_code": "SNFL16MR",
    "max_timelimit": "2",
    "problem_code": "RAINFALL"
}