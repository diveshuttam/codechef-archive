{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<h3>Problem description.</h3>\n<p>Suppose your friend is working under a Chief Minister and his work is to fix the appointments for the meeting to the CM.He has to check 100 to 150 appointments daily so that the new appointment doesn't clash to another appointment , to fix the new appointment for meeting.He gets frustrated of doing the same thing daily.One day he found you in market while you were buying the vegetables and he told you everything.So you are suppose to help your friend.Make a computer program to solve this problem.<br/>The input consists of a list of start times and finish times of appointments.\nE.g. [[1, 2], [3, 6], [4, 7] \u2026]\nCreate a program that gives the maximum number of non-overlapping appointments possible.\n</p>\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</li>\n<li>The first line of each test case contains <b>N</b> number of intervals</li>\n<li>The second line of each test case contains the intervals for example intervals [2,3] [5,6] as 2 3 5 6</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p>Output will consists only single number denoting the maximum number of non-overlapping appointments possible.</p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>20</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>1000</b></li>\n<li>The start and finish times range from 0 to 100</li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre>\n<b>Input:</b>\n1\n5\n1 4 6 9 5 6 2 3 3 5\n4                  \n5 6 2 3 1 4 6 9\n\n<b>Output:</b>\n4\n3\n\n</pre>\n<p>\u00a0</p>\n<hr/>\n<h3>Explanation</h3>\n<p><b>Example case 1.</b>For appointment schedules [[1, 4], [6, 9], [5, 6], [2, 3], [3, 5]] <br/>the maximum number of non-overlapping appointments are <b>4</b> which are [2, 3], [3, 5], [5, 6], [6, 9]</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "5-01-2018",
    "is_direct_submittable": false,
    "contest_name": "Code Sense",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1515857400,
        "end_date": 1515868200,
        "practice_submission_allowed": true,
        "visible_start_date": 1515868200,
        "submit_start_date": 1515857400,
        "current": 1537433212
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>skv_007</span>",
    "problem_name": "Meeting Appointment",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/skv_007'>skv_007</a>",
    "problem_tester_html_handle": "",
    "problem_author": "skv_007",
    "contest_code": "CODS2018",
    "max_timelimit": "1",
    "problem_code": "CSGGV5"
}