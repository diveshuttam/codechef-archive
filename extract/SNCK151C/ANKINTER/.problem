{
    "problem_code": "ANKINTER",
    "problem_author": "code_master01",
    "contest_name": "CodeChef Snackdown 2015, Round 1C",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>code_master01</span>",
    "problem_name": "Intervals and subarrays",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "SNCK151C",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/code_master01'>code_master01</a>, <a class='problem-tag-small ' href='/tags/problems/snck151c'>snck151c</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCK151C/mandarin/ANKINTER.pdf\">Mandarin Chinese </a> , <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCK151C/russian/ANKINTER.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCK151C/vietnamese/ANKINTER.pdf\">Vietnamese</a></h3>\n\n\n<p>Chef Rahul likes those arrays that can be rearranged to form an <strong>interval of values</strong> - an increasing sequence where each element is greater than the previous by exactly one. For example:  \n<ul>\n<li>Rahul likes the array <b>[3, 6, 5, 4]</b> as it can be re-arranged to <b>[3, 4, 5, 6]</b>.  \n</li>\n<li>Rahul doesn't like <b>[1, 2, 4, 5]</b> as no clear interval can be defined from these elements.  \n</li>\n</ul>\n</p>\n<p>Given an array <strong>a</strong> of length <strong>n</strong>, your task is to write a program that counts the number of contiguous subarrays of <strong>a</strong> liked by Rahul that have length not less than <strong>w</strong>.</p>\n\n<h3>Input:</h3>\n<p>The first line contains a single integer <strong>T</strong>, the number of test cases to follow. Each of the test cases contain exactly <b>2</b> lines.</p>\n\n<p>The first line contains two space-separated integers <strong>n</strong> and <strong>w</strong>.</p> \n\n<p>The next line contains exactly <strong>n</strong> space-separated integers, denoting the array <b>a</b>.</p>\n\n<h3>Output:</h3>\n<p>You should output exactly <strong>T</strong> lines each containing answer for corresponding test case.</p>\n\n<h3>Constraints:</h3>\n<ul>\n<li><b>1 \u2264 T \u2264 10<sup>5</sup> </b> \n</li>\n<li><b>1 \u2264 n \u2264 10<sup>6</sup> </b> \n</li>\n<li>sum of <b>n</b> over all testcases does not exceed <b>10<sup>6</sup></b></li>\n<li><b>1 \u2264 w \u2264 n</b></li>\n<li><b>a</b> is a permutation of values <b>[1, 2, 3 ... n]</b></li>\n</ul>\n\n<h3>Example</h3>\n<p><strong>Input:</strong>\n<pre>2\n3 1\n2 3 1\n6 3\n6 1 5 3 4 2 \n</pre> \n</p>\n\n<p><strong>Output:</strong><pre>\n5\n5  \n</pre>\n</p>\n\n<h3>Explanation</h3>\n<p><strong>Example case #1:</strong><br />\nThe following <b>5</b> subarrays form an interval:  \n\n<ol>\n<li><b>[2]</b></li>\n<li><b>[3]</b></li>\n<li><b>[1]</b></li>\n<li><b>[2, 3]</b></li>\n<li><b>[2, 3, 1]</b></li>\n</ol>\n</p>\n\n<p><strong>Example case #2:</strong><br />\nThe following 5 subarrays form an interval:  \n<ol>\n<li><b>[6, 1, 5, 3, 4, 2]</b>  forms <b>[1..6]</b></li>\n<li><b>[1, 5, 3, 4, 2]</b>  forms <b>[1..5]</b></li>\n<li><b>[5, 3, 4]</b>  forms <b>[3..5]</b></li>\n<li><b>[5, 3, 4, 2]</b>  forms <b>[2..5]</b></li>\n<li><b>[3, 4, 2]</b>  forms <b>[2..4]</b></li>\n</ol>\n</p>\n<p>Note that <b>[3, 4]</b> also forms an interval but cannot be counted as its length is less than <b>w</b>(= 3).</p>\n\n",
    "category_name": "main",
    "date_added": "1-06-2015",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/ANKINTER",
    "problem_tester": null,
    "time": {
        "view_start_date": 1433692800,
        "end_date": 1433700900,
        "practice_submission_allowed": true,
        "visible_start_date": 1433700900,
        "submit_start_date": 1433692800,
        "current": 1537436273
    },
    "user": {
        "username": ""
    }
}