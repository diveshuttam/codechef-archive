{
    "problem_code": "J3",
    "problem_author": "admin",
    "contest_name": "December 2009 (Contest XI)",
    "todo": false,
    "problem_author_html_handle": "admin",
    "problem_name": "The N Queens Puzzle Revisited",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "DEC09",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin'>admin</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Johnny, a computer science student from the Bytelandian Technological University (BTU), has finally managed to write a program to solve the N queens problem. However, his version of the N queens problem is not really all that similar to the classical one.</p>\n<p>Recall that in the N queens problem, there is a square chessboard of size NxN. The goal is to put N queens on the chessboard so that no two queens would be able to attack each other.</p>\n<p>\nIn Johnny's version of the problem (which he states to be \"much harder\" than the original one), there are K \"blocked\" squares given on the chessboard. The goal is still the same: to put N queens on the chessboard such that no two queens would be able to attack each other. However, there are some differences due to the existence of blocked squares. First, a queen <b>cannot be put</b> on a blocked square. Secondly, two queens are considered to be able to attack each other only if there is <b>no blocked square</b> between them. Finally, there must be <b>exactly one</b> queen on every column of the board. \n</p>\n<p>\nJohnny claims that his program solves the above problem very effectively. He generates some test cases (which his program can solve within minutes) to challenge you. You know the method Johnny used to generate the test case. For a given N, Johnny randomly picks a number K between 1 and N<sup>2</sup>/2 with equal probability. After that, Johnny picks K blocked squares on the chess board. Any combinations of K squares can be picked with equal probability. \n</p>\n<p>Write a program that can solve Johnny's test cases within seconds.\n</p>\n\n<h3>Input</h3>\n<p>The first line contains t, the number of test cases (about 5). Then t test cases follow. Each test case has the following form:</p>\n<ul>\n<li>The first line contains two integers N and K (8 <= N <= 500, 1 <= K <= N<sup>2</sup>/2)</li>\n<li>Each line in the next K lines contains two integers i, j which are the row and the column number of a blocked square (1 <= i, j <= N)</li>\n</ul>\n<p>Each test case's input is separated by a blank line. The rows and the columns of the chessboard are numbered from 1 to N. There is always a solution for each test case.</p>\n\n\n<h3>Output</h3>\n<p>For each test case, print a single line containing N integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub> in which a<sub>i</sub> is the row number of the queen in column i. Any correct solution will be accepted.</p>\n\n<h3>Example</h3>\n<pre>\n<b>Input</b>\n1\n\n8 15\n7 7\n3 1\n7 1\n4 8\n8 3\n6 5\n4 4\n2 1\n8 2\n6 3\n3 7\n7 6\n2 3\n1 2\n6 4\n\n<b>Output</b>\n4 2 7 5 2 4 6 8 \n</pre>\n<img src='http://www.codechef.com/download/qpuzzle.png' />",
    "category_name": "main",
    "date_added": "15-10-2009",
    "status": "success",
    "languages_supported": "C, JAVA, PYTH, CS2, PAS fpc, PAS gpc, RUBY, PHP, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, TEXT",
    "max_timelimit": "0.144615 - 1.87",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/J3",
    "problem_tester": null,
    "time": {
        "view_start_date": 1259659800,
        "end_date": 1260523800,
        "practice_submission_allowed": true,
        "visible_start_date": 1260523800,
        "submit_start_date": 1259659800,
        "current": 1537439858
    },
    "user": {
        "username": ""
    }
}