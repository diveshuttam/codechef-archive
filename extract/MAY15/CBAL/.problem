{
    "problem_code": "CBAL",
    "problem_author": "ma5termind",
    "contest_name": "May Challenge 2015",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>ma5termind</span>",
    "problem_name": "Chef and Balanced Strings",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>kevinsogo</span>",
    "contest_code": "MAY15",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/ma5termind'>ma5termind</a>, <a class='problem-tag-small ' href='/tags/problems/may15'>may15</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/sqrt-decomp'>sqrt-decomp</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/MAY15/mandarin/CBAL.pdf\">Mandarin Chinese </a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/MAY15/russian/CBAL.pdf\">Russian</a>.</h3>\n<p>Chef Smurf likes strings a lot but he likes balanced strings more. Smurf calls a string <b>S</b> a balanced string if and only if characters of strings <b>S</b> can be partitioned into two multi-sets <b>M<sub>1</sub></b> and <b>M<sub>2</sub></b> such that <b>M<sub>1</sub> = M<sub>2</sub></b>.<br/><b>For eg :</b> Strings such as <b>aabbcc</b>, <b>abcabc</b> , <b>baccba</b> , <b>abccba</b> are all balanced strings as their characters can be partitioned into two multi-sets <b>M<sub>1</sub></b> and <b>M<sub>2</sub></b> such that <b>M<sub>1</sub> = M<sub>2</sub> = {a,b,c} </b> whereas strings such as <b>aba</b>, <b>abc</b> , <b>abcdef</b>, <b>blablah</b> are not balanced strings.</br/></p>\n<p>Today, Smurf found a special string <b>P</b> consisting of <b>N</b> lower case Latin letters. Smurf wants to make some queries about his string <b>P</b>.</p>\n<p>Each of Smurf's query consists of <b>3</b> integers <b>L R type</b>. For a given query, Smurf wants to calculate this :\u00a0\u00a0\u00a0\u00a0</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<IMG WIDTH = \"200\" SRC = \"https://s3.amazonaws.com/codechef_shared/download/CBAL/4.png\" /></p>\n<p>For all <b>T<sub>s,e</sub></b>, where <b>T<sub>s,e</sub></b> is balanced string such that starting index <b>s</b> and ending index <b>e</b> of a chosen string <b>T<sub>s,e</sub></b> satisfies <b>L \u2264 s &lt; e \u2264 R.</b></p>\n<p><b>Note : </b><b>|T<sub>s,e</sub>|</b> denotes the length of string <b>T<sub>s,e</sub></b>.</p>\n<p>Just to make this problem little bit more interesting, given input is encoded. Instead of <b>L</b> and <b>R</b> in each query, you will be provided with two integers <b>X</b> and <b>Y</b>. Two keys <b>A</b> and <b>B</b> are used to decode the given input.</p>\n<pre>\n<code>\nvoid decode(){\n    A = 0 ; // initialising first key \n    B = 0 ; // initialising second key \n    Q = input(); // number_of_queries;\n    while( Q -- ) {\n        X = input(); \n        Y = input();\n        type = input() ;\n        L = ( X + A ) % N + 1; // decoding L\n        R = ( Y + B ) % N + 1; // decoding R\n        // N is the length of the given string\n        if (L > R) {\n            // swap L and R\n            int T = L;\n            L = R;\n            R = T;\n        }  \n        ans = solve(L,R,type); // calculate answer for current query\n        A = B;     // updating key A \n        B = ans;   // updating key B \n    } \n}\n</code>\n</pre><p><br/></br/></p>\n<p>Smurf cannot accomplish this task alone. Can you help him ?</p>\n<h3>Input</h3>\n<p>First line of the input contains a single integer <b>T</b> denoting the number of test cases. First line of each test case contains a string <b>P</b> denoting the chef's special string. Next line of the each test case contains a single integer <b>Q</b> denoting the number of chef's queries. Next <b>Q</b> lines of the each test case contains three space separated integers denoting <b>X</b>, <b>Y</b> and <b>type</b> respectively.</p>\n<h3>Output</h3>\n<p>For each of the chef's query, print the required answer.</p>\n<h3>Note </h3>\n<p>Two substrings <b>T<sub>s<sub>1</sub>,e<sub>1</sub></sub></b> and <b>T<sub>s<sub>2</sub>,e<sub>2</sub></sub></b> are considered to be different if either <b>s<sub>1</sub> != s<sub>2</sub></b> or <b>e<sub>1</sub> != e<sub>2</sub></b> where <b>s<sub>1</sub>,e<sub>1</sub></b> and <b>s<sub>2</sub>,e<sub>2</sub></b> are the starting and ending indices of string <b>T<sub>1</sub></b> and string <b>T<sub>2</sub></b> respectively.</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1 \u2264 T \u2264 10<sup>5</sup>.</b></li>\n<li><b>1 \u2264 |P| \u2264 10<sup>5</sup>.</b></li>\n<li><b>1 \u2264 Q \u2264 10<sup>5</sup>.</b></li>\n<li><b>0 \u2264 X,Y &lt; |P|.</b></li>\n<li><b>type = { 0 , 1 , 2 }.</b></li>\n<li><b>sum of N over all test cases i.e SN does not exceed 10<sup>5</sup>.</b></li>\n<li><b>sum of Q over all test cases i.e SQ does not exceed 10<sup>5</sup>.</b></li>\n<li><b>All test files are strictly according to constraints.</b></li>\n</ul>\n<h3>Subtasks</h3>\n<ul>\n<li> Subtask #1: <b>1 \u2264 SN,SQ \u2264 500 , type = { 0, 1, 2 }. : ( 20 pts ) </b></li>\n<li> Subtask #2: <b>1 \u2264 SN,SQ \u2264 10<sup>4</sup> , type = { 0, 1, 2 }. : ( 20 pts ) </b></li>\n<li> Subtask #3: <b>1 \u2264 SN,SQ \u2264 10<sup>5</sup> , type = { 0 }.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: ( 20 pts ) </b></li>\n<li> Subtask #4: <b>1 \u2264 SN,SQ \u2264 10<sup>5</sup> , type = { 0, 1 }.\u00a0\u00a0\u00a0\u00a0\u00a0: ( 20 pts ) </b></li>\n<li> Subtask #5: <b>1 \u2264 SN,SQ \u2264 10<sup>5</sup> , type = { 0, 1, 2 }. : ( 20 pts ) </b></li>\n</ul>\n<h3>Example</h3>\n<pre>\n<b>Input</b>\n1\ncchheeff\n5\n0 1 0\n0 2 1\n7 5 2\n0 7 0\n1 1 2\n<b>Output</b>\n1\n8\n80\n10\n4\n</pre><h3>Explanation</h3>\n<pre>\n<b>After decoding queries will take the following form : </b>\n1\ncchheeff\n5\n1 2 0\n1 4 1\n1 6 2\n1 8 0\n2 4 2\n<p>Q1 : \"cc\" is the only balanced string. Type = 0 and therefore answer = 1.<br/>Q2 : \"cc\" , \"hh\" , \"cchh\" are the only balanced strings. Type = 1 and therefore answer = 2 + 2 + 4 = 8.<br/>Q3 : \"cc\" , \"hh\" , \"ee\" , \"cchh\" , \"hhee\" , \"cchhee\" are the only balanced strings. Type = 2 and therefore answer = 2<sup>2</sup> + 2<sup>2</sup> + 2<sup>2</sup> + 4<sup>2</sup> + 4<sup>2</sup> + 6<sup>2</sup>= 80.</br/></br/></p>\n<h3>Warning</h3>\n<p>Large test data set, Prefer to use faster input/output methods .</p></pre>",
    "category_name": "main",
    "date_added": "3-03-2015",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "2",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/CBAL",
    "problem_tester": "kevinsogo",
    "time": {
        "view_start_date": 1431077400,
        "end_date": 1431941400,
        "practice_submission_allowed": true,
        "visible_start_date": 1431941400,
        "submit_start_date": 1431077400,
        "current": 1537436302
    },
    "user": {
        "username": ""
    }
}