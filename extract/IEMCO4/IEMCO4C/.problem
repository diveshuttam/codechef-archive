{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Problem Description</h3>\n<p>Ankit has a collection of <b>N</b> books each numbered from <b>1</b> to <b>N</b>. As he is an avid reader he has\nassigned a number <b>A[i]</b> to each of his books.\n<br><br>\nOne fine day he bought a new book shelf, which had exactly <b>N</b> slots, and started storing his books in it. But he used the <b>ith</b> slot for the book numbered <b>i only</b>. While storing the books, he would pick any of the book that is yet to be placed in the shelf and put it in it's respective slot.\n<br><br>\nAs the shelf started to fill up, it consisted of segments of books, such as all the books that are placed in consecutive slots formed a single segment.\n<br><br>\nFor example, a book segment <b>S(i,j)</b> denotes that books numbered from i to j (both inclusive) have been placed in the shelf and books numbered i-1 and j+1 are yet to be placed (if such books exist).\n<br>A single book B[i] placed with no immediate neighbours\ni.e B[i+1] and B[i-1] being placed till now also forms a book segment of size 1.\n<br><br>\nThe awesomeness of a book segment S(i,j) ,denoted by Awesome[S(i,j) ], is defined as the product of\nmax(A[x]) for i <= x <= j and (j-i+1), the size of segment.\n<br><br>\n<b>Awesome[S(i,j)] = (Max(A[x]) for i <= x <= j) * (j-i+1) </b>\n<br><br>\nThe total awsomeness of the book shelf is in turn defined as the summation of awsomeness of all\nthe book segments present in the book shelf till now.\n<br><br>\n<b>Total Awesomeness = \u2211 Awesome[S(i,j) ] for all valid segments</b>\n<br>\nA segment S(i,j) is said to be valid if every book numbered from i to j (both inclusive) is present and\nslots i-1 and j+1 are empty or no such slots exists.\n<br><br>\nAs he is storing the books in the shelf he requires YOU to tell him the awesomeness of the book\nshelf every time he inserts a book into it. Being a nice friend of him you can not refuse to help him,\ncan you?\n<br><br>\nGiven the awesomeness of each book and the order in which the books are stored find the\nawesomeness of the shelf after every insertion.\u00a0</p>\n\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases.Each test case follows 3 lines.</li>\n<li>First line of each testcase consists of an integer <b>N</b> which denotes number of books.</li>\n<li>Second line of each testcase consists of <b>N</b> space seperated integers where the <b>ith</b> integer denotes the\nAwesomeness of the ith book <b>A[i]</b>. </li>\n<li>Third line of each testcase consists of <b>N</b> integers with numbers from <b>1</b> to <b>N</b> occuring exactly once, denoting the\norder in which books were inserted in the book shelf.</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p></p>\n<ul>\n<li>For each testcase output a single line consisting of N integers where ith integer denotes the value\nof awesomeness of the shelf after inserting the ith book.</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Constraints</h3>\n<p></p>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>100</b></li>\n<li><b>0</b> \u2264 <b> A[i] </b> \u2264 <b>10^9</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>100000</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n\n3\n4\n10 5 10 5\n1 3 4 2\n5\n0 5 8 2 9\n5 1 2 4 3\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n\n<b>Output:</b>\n\n10 20 30 40\n9 9 19 28 45\n1 4 9 16 25 36 49 64 81 100\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p><b>Example case 1.</b>The book shelf looks like the following (-1 representing empty book slots and\noccupied slots represented by the value of A[i] of the book):\n<br>\nInitially : -1,- 1,-1,- 1\n<br>After putting book 1 : 10,-1,- 1,-1 Total Awesomeness = Max(10)*1 = 10\n<br>After putting book 3 : 10,-1,10,- 1 Total Awesomeness = Max(10)*1 +Max(10)*1 = 10 + 10 = 20\n<br>After putting book 4 : 10,-1,10,5 Total Awesomeness = Max(10)*1 + Max(10,5)*2 = 10 + 10*2 =\n30\n<br>After putting book 2 : 10,5,10,5 Total Awesomeness = Max(10,5,10,5)*4 = 10*4 = 40\n<br>Hence the output should be 10 20 30 40</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "2-11-2017",
    "is_direct_submittable": false,
    "contest_name": "IEM Coding Olympiad (IEMCO)",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1509805800,
        "end_date": 1509816600,
        "practice_submission_allowed": true,
        "visible_start_date": 1509816600,
        "submit_start_date": 1509805800,
        "current": 1537433377
    },
    "problem_author_html_handle": "tkh_iem",
    "problem_name": "Avid Learner",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/tkh_iem'>tkh_iem</a>",
    "problem_tester_html_handle": "",
    "problem_author": "tkh_iem",
    "contest_code": "IEMCO4",
    "max_timelimit": "1",
    "problem_code": "IEMCO4C"
}