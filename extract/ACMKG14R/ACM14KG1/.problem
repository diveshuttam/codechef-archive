{
    "problem_code": "ACM14KG1",
    "problem_author": "admin",
    "contest_name": "ACM-ICPC Asia-Kharagpur Site First Round Online Recontest 2014",
    "todo": false,
    "problem_author_html_handle": "admin",
    "problem_name": "Cracker shops",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "ACMKG14R",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/acmkg14r'>acmkg14r</a>, <a class='problem-tag-small ' href='/tags/problems/admin'>admin</a>, <a class='problem-tag-small ' href='/tags/problems/easy-medium'>easy-medium</a>, <a class='problem-tag-small ' href='/tags/problems/sorting'>sorting</a>, <a class='problem-tag-small ' href='/tags/problems/two-pointers'>two-pointers</a>",
    "body": "<p>Laxman is doing Diwali shopping. There are <b>N</b> shops numbered from <b>1</b> to <b>N</b>. Laxman wants to buy <b>M</b> different types of crackers. Crackers are numbered from <b>1</b> to <b>M</b>. Each shop sells many types of crackers. Laxman is currently at the <b>i'th</b> shop. Laxman want to find <b>j</b> and <b>k</b>, such that <b>j &lt;= i</b> and <b>k >= i</b> and he can buy all <b>M</b> types of crackers only by visiting shops in the range of <b>j</b> to <b>k</b>. If there are multiple valid <b>j</b>, <b>k</b>, he then want to minimize the window size, that is, minimize the value of <b>k - j</b>. If there are still multiple valid <b>j</b>, <b>k</b>, then he wants to minimize the value of <b>j</b>. It is also known that, by visiting all the <b>N</b> shops, Laxman can surely buy all <b>M</b> types of crackers.</p>\n<p>Write a program to output <b>j</b>, <b>k</b> values for all valid <b>i</b>.</p>\n<h3>Input</h3>\n<p>The first line of the input contains an integer <b>T</b> denoting the number of test cases. Each test case is described as follows,<br />\nFirst line of each test case has 2 integers, <b>N</b> and <b>M</b>. Following <b>N</b> lines describe the shops.<br />\nEach of the <b>N</b> lines starts with an integer <b>X</b>, which denotes the number of different types of crackers sold in that shop. <b>X</b> integers follow describing the cracker types. All the <b>X</b> integers are different.</p>\n<h3>Output</h3>\n<p>For each test case output <b>N</b> lines, One for each <b>i</b>, <b>1 &lt;= i &lt;= N</b>. Each line should contain two integers, <b>j</b> and <b>k</b>.</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>10000</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>100000</b></li>\n<li><b>1</b> \u2264 <b>M</b> \u2264 <b>100000</b></li>\n<li><b>0</b> \u2264 <b>X</b> \u2264 <b>100000</b></li>\n<li><b>1</b> \u2264 <b>Sum of N over all test cases</b> \u2264 <b>500000</b></li>\n<li><b>1</b> \u2264 <b>Sum of M over all test cases</b> \u2264 <b>500000</b></li>\n<li><b>1</b> \u2264 <b>Sum of X over all test cases</b> \u2264 <b>500000</b></li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n3 3\n1 1\n1 2\n1 3\n3 3\n1 1\n2 2 3\n1 1\n\n<b>Output:</b>\n1 3\n1 3\n1 3\n1 2\n1 2\n2 3\n</pre><h3>Explanation</h3>\n<p><b>Test case #1:</b><br />\nLaxman needs to visit all 3 shops to but all <b>M</b> types\n</p>\n<p><b>Test case #2:</b><br />\nLaxman needs to visit shops 1, 2 to get all <b>M</b> types. Or he can visit shops 2, 3 to get all <b>M</b> types.<br />\nFor i = 2, we could have bought all types from shops 2 3, but we prefer 1 2 because 1 &lt; 2, as stated in the statement we want to minimize j in case of tie.\n</p>\n",
    "category_name": "main",
    "date_added": "22-10-2014",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA",
    "max_timelimit": "2",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/ACM14KG1",
    "problem_tester": null,
    "time": {
        "view_start_date": 1414672200,
        "end_date": 1414683000,
        "practice_submission_allowed": true,
        "visible_start_date": 1725829439,
        "submit_start_date": 1414672200,
        "current": 1537437288
    },
    "user": {
        "username": ""
    }
}