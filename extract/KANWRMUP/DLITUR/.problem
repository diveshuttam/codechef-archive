{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Delhi tour operators offer attractive tour options with low cost tickets. Tickets are \n\nmade available to interested tourists for visits to tourist spots in the city, following \n\ncertain routes, under certain conditions. \n\nThe conditions are illustrated through some examples. A ticket to visit Spot-1, then \n\nSpot-2 and then Spot-3, does not allow a tourist to use only the portion of the ticket for \n\nvisiting Spot-2 first and then Spot-3. A tourist must always start at the first spot \n\nmentioned on the ticket. In addition, tourists are not allowed to utilize the ticket to \n\nvisit Spot-1 and Spot-2 in order, have a break to visit other spots using different \n\ntickets and on return to Spot-2 continue visit from Spot-2 to Spot-3 using the same \n\nticket. Suppose three types of tickets are available: \n\nTicket #1: Spot-1 to Spot-3 to Spot-4 at a cost of Rs225 \nTicket #2: Spot-1 to Spot-2 at a cost of Rs200\nTicket #3: Spot-2 to Spot-3 at a cost of Rs50 \nFor a tourist having a plan to visit Spot-1 and then Spot-3 there are two options of \n\ntickets: \n\nHave Ticket #1 for Rs225 and use it only for the first leg of the ticket. \nHave Ticket #2 for Rs200 and Ticket #3 for Rs50. \n\nObviously, for the specified plan, the first option has the minimum cost of tickets. \nGiven a set of ticket options, and one or more visit plans, you must determine, for each \n\nvisit plan, the minimum cost of tickets.\n\n\n<h3>Input</h3>\n<p>Input consists of multiple test cases. \nEach case begins with a line containing T, the number of ticket options, followed by T \n\noptions, one to a line. Each option consists of a positive integer specifying the cost of \n\nthe ticket, the number of tourist spots in the ticket's route, and then that many spots. \n\nEach spot in a case has an arbitrary, but unique, integer identification number.\nThe next line contains P, the number of plans for which the minimum cost of tickets is to \n\nbe found. P lines follow, giving the route for each plan. Each line consists of the number \n\nof spots in the plan (including the starting spot) followed by that many spot \n\nidentification numbers, given in the order they are to be visited. \nThere will be no more than 20 ticket options or 20 visit plans in a test case. Each ticket \n\noption and visit plan lists from 2 to 10 spots. No ticket cost exceeds Rs5000. Adjacent \n\nspots in a route or plan will be distinct. Options and plans are numbered sequentially in \n\neach set, starting with 1. \nThe last case is followed by a line containing a zero. \n\n<h3>Output</h3>\n<p>For each visit plan, output one line containing the case number, the plan number, the \n\nminimum cost of the plan, and the numbers of the ticket options used for the plan, in the \n\norder they will be used. Follow the output format shown below. The output will always be \n\nunique. \n\n\n<h3>Example</h3>\n\n<pre>\n<b>Input:</b>\n3 \n225 3 1 3 4 \n200 2 1 2 \n50 2 2 3 \n1 \n2 1 3 \n3 \n100 2 2 4 \n100 3 1 4 3 \n200 3 1 2 3 \n2 \n3 1 4 3 \n3 1 2 4 \n0\n\n\n<b>Output:</b>\n1 1 225 1\n2 1 100 2\n2 2 300 3 1\n\n</pre>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "14-10-2011",
    "is_direct_submittable": false,
    "contest_name": "Kanpur ACM ICPC Warm-up Contest",
    "languages_supported": "C, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1318694400,
        "end_date": 1318703400,
        "practice_submission_allowed": true,
        "visible_start_date": 1318703400,
        "submit_start_date": 1318694400,
        "current": 1537439119
    },
    "problem_author_html_handle": "admin",
    "problem_name": "Delhi Tour",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin'>admin</a>",
    "problem_tester_html_handle": "",
    "problem_author": "admin",
    "contest_code": "KANWRMUP",
    "max_timelimit": "1",
    "problem_code": "DLITUR"
}