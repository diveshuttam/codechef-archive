{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Chef hates unoptimized codes and people who write such codes. One fine day he decided to look through the kitchen's codebase and found a function whose pseudo-code is given here:\n\n<pre><code>input: integer N, list X[1, 2, ..., N], list Y[1, 2, ..., N]\n\noutput: integer res\n\nfunction:\n\nset res = 0;\nfor i := 1 to N do\n   for j := 1 to N do\n      for k := 1 to N do\n         if (X[i] = X[j]) OR (X[j] = X[k]) OR (X[k] = X[i])\n            continue\n         else\n            set res = max(res, Y[i] + Y[j] + Y[k])\nreturn res\n</code>\n</pre>\n\n<p>Luckily enough this code gets triggered only if the Head Chef makes a submission. But still there is a possibility that this can crash the judge. So help Chef by writing a new function which does the same thing but is faster.</p>\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</li>\n<li>The first line of each test case contains an integer <b>N</b> denoting the number of elements in the two lists.</li>\n<li>The i-th of the next <b>N</b> lines contains a pair of space-separated integers denoting the values of <b>X[i]</b> and <b>Y[i]</b> respectively.</li>\n</ul>\n\n<h3>Output</h3>\n<p>For each test case, output an integer corresponding to the return value of the function.</p>\n\n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>T</b> \u2264 10</li>\n<li>1 \u2264 <b>N</b> \u2264 10<sup>5</sup></li>\n<li>1 \u2264 <b>X[i]</b>, <b>Y[i]</b> \u2264 10<sup>8</sup></li> \n</ul>\n\n<h3>Example</h3>\n<pre>\n<b>Input</b>\n2\n3\n1 3\n3 1\n1 2\n5\n1 3\n2 4\n1 2\n3 2\n3 4\n\n<b>Output</b>\n0\n11\n</pre>\n\n<h3>Explanation</h3>\n<p><b>Testcase 2:</b> The maximum is attained when i = 1, j = 2 and k = 5. This leads to res being 3 + 4 + 4 = 11. This value is attained in other iterations as well, but it never exceeds this, and hence this is the answer.</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "13-12-2017",
    "is_direct_submittable": false,
    "contest_name": "ACM-ICPC Asia-Gwalior Onsite Replay Contest 2017",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "todo": false,
    "time": {
        "view_start_date": 1516386600,
        "end_date": 1516482000,
        "practice_submission_allowed": true,
        "visible_start_date": 1516482000,
        "submit_start_date": 1516386600,
        "current": 1537433146
    },
    "problem_author_html_handle": "admin2",
    "problem_name": "Optimize The Slow Code",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin2'>admin2</a>, <a class='problem-tag-small ' href='/tags/problems/gwr17rol'>gwr17rol</a>, <a class='problem-tag-small ' href='/tags/problems/simple'>simple</a>, <a class='problem-tag-small ' href='/tags/problems/sorting'>sorting</a>",
    "problem_tester_html_handle": "",
    "problem_author": "admin2",
    "contest_code": "GWR17ROL",
    "max_timelimit": "2",
    "problem_code": "OPTCODE"
}