{
    "problem_code": "QPOLYSUM",
    "problem_author": "anton_lunyov",
    "contest_name": "December Challenge 2012",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>anton_lunyov</span>",
    "problem_name": "Quasi-Polynomial Sum",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>laycurse</span>",
    "contest_code": "DEC12",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/anton_lunyov'>anton_lunyov</a>, <a class='problem-tag-small ' href='/tags/problems/dec12'>dec12</a>, <a class='problem-tag-small ' href='/tags/problems/hard'>hard</a>, <a class='problem-tag-small ' href='/tags/problems/math'>math</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\nYou are given a polynomial <b>P(X) = C<sub>D</sub> * X<sup>D</sup> + ... + C<sub>1</sub> * X + C<sub>0</sub></b> with integer coefficients <b>C<sub>0</sub>, C<sub>1</sub>, ..., C<sub>D</sub></b>. You are also given a non-negative integer <b>Q</b> and positive integers <b>M</b> and <b>N</b>. Your task is to find the following sum\n</p>\n<p>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <b>(P(0) * Q<sup>0</sup> + P(1) * Q<sup>1</sup> + ... + P(N \u2212 1) * Q<sup>N \u2212 1</sup>) mod M</b>.\n</p>\n<p>\nHere <b>A mod B</b> means the remainder of the division of <b>A</b> by <b>B</b>.\n</p>\n<p>\nUsually polynomials are given by the sequence of their coefficients. However, in this problem you will be given the sequence <b>A<sub>0</sub>, A<sub>1</sub>, ..., A<sub>D</sub></b>, where <b>A<sub>i</sub> = P(i) mod M</b>, as an input. One can prove that these values are enough to restore the value of <b>P(K) mod M</b> for any integer <b>K</b>. Therefore, the value of the above sum is uniquely determined by the values <b>M, Q, N, D, A<sub>0</sub>, A<sub>1</sub>, ..., A<sub>D</sub></b>.\n</p>\n<p>\nThe function of the form <b>P(X) * Q<sup>X</sup></b> sometimes is called <i>quasi-polynomial</i>, hence the title of the problem.\n</p>\n<h3>Input</h3>\n<p>\nThe first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows. The first line of each test case contains four space-separated integers <b>M, Q, N, D</b>. The second line contains <b>D + 1</b> space-separated integers <b> A<sub>0</sub>, A<sub>1</sub>, ..., A<sub>D</sub></b>.\n</p>\n<h3>Output</h3>\n<p>\nFor each test case, output a single line containing the value of the corresponding sum.\n</p>\n<h3>Constraints</h3>\n<p><ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>5000</b></li>\n<li><b>1</b> &lt; <b>M</b> &lt; <b>10<sup>18</sup></b></li>\n<li><b>0</b> \u2264 <b>Q</b> &lt; <b>M</b></li>\n<li><b>1</b> \u2264 <b>N</b> &lt; <b>10<sup>100000</sup></b></li>\n<li><b>0</b> \u2264 <b>D</b> &lt; <b>20000</b></li>\n<li><b>0</b> \u2264 <b>A<sub>i</sub></b> &lt; <b>M</b> for <b>i = 0, 1, ..., D</b></li>\n<li>The sum of <b>D + 1</b> over each input file does not exceed <b>20000</b>.</li>\n<li>The overall number of digits in all numbers <b>N</b> in each input file does not exceed <b>10<sup>5</sup></b>.</li>\n<li><b><b>M</b> is not divisible by any number from <b>2</b> to <b>D + 14</b>, inclusive.</b></li>\n<li>It is guaranteed that there exists a polynomial <b>P(X)</b> of degree at most <b>D</b> with integer coefficients such that <b>A<sub>i</sub> = P(i) mod M</b> for <b>i = 0, 1, ..., D</b>.</li>\n</ul>\n</p>\n<h3>Example</h3>\n<pre>\n<b>Input:</b>\n2\n101 2 5 0\n1\n289 1 6 2\n1 4 9\n\n<b>Output:</b>\n31\n91\n</pre><h3>Explanation</h3>\n<p>\n<b>Example case 1.</b> We have <b>M = 101, Q = 2, N = 5, D = 0</b> and <b>P(0) mod M = 1</b>. Therefore,  <b>P(X) = C<sub>0</sub></b> and <b>P(0) mod 101 = 1</b>. Hence, <b> C<sub>0</sub> mod 101 = 1</b>. So we can take, for example, <b>C<sub>0</sub> = 1</b>. Then the corresponding sum takes the form of <b>(P(0) * Q<sup>0</sup> + P(1) * Q<sup>1</sup> + ... + P(N \u2212 1) * Q<sup>N \u2212 1</sup>) mod M = (1 * 2<sup>0</sup> + 1 * 2<sup>1</sup> + 1 * 2<sup>2</sup> + 1 * 2<sup>3</sup> + 1 * 2<sup>4</sup>) mod 101 = (1 + 2 + 4 + 8 + 16) mod 101 = 31 mod 101 = 31.</b> Note, that the polynomial <b>P(X)</b> is not unique. We can take, for example, <b>C<sub>0</sub> = 102</b> or <b>C<sub>0</sub> = 2021</b>. However, the same will be always the same.\n</p>\n<p>\n<b>Example case 2.</b> We have <b>M = 289, Q = 1, N = 6, D = 2</b> and <b>P(0) mod M = 1, P(1) mod M = 4, P(2) mod M = 9</b>. It is easy to see that we can take <b>P(X) = (X + 1)<sup>2</sup></b>. Then the corresponding sum takes the form of <b>(1<sup>2</sup> + 2<sup>2</sup> + 3<sup>2</sup> + 4<sup>2</sup> + 5<sup>2</sup> + 6<sup>2</sup>) mod 289 = (1 + 4 + 9 + 16 + 25 + 36) mod 289 = 91.</b> Note that the polynomial <b>P(X)</b> again is not unique. In fact, the set of all polynomials of degree at most 2 that satisfy the conditions <b>P(0) mod 289 = 1, P(1) mod 289 = 4, P(2) mod 289 = 9</b> has the form of <b>{(X + 1)<sup>2</sup> + 289 * (C<sub>2</sub> * X<sup>2</sup> + C<sub>1</sub> * X + C<sub>0</sub>) | C<sub>0</sub>, C<sub>1</sub>, C<sub>2</sub></b> are integers}.\n</p>\n",
    "category_name": "main",
    "date_added": "29-10-2012",
    "status": "success",
    "languages_supported": "C, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "max_timelimit": "4",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/QPOLYSUM",
    "problem_tester": "laycurse",
    "time": {
        "view_start_date": 1354354200,
        "end_date": 1355218200,
        "practice_submission_allowed": true,
        "visible_start_date": 1355218200,
        "submit_start_date": 1354354200,
        "current": 1537438616
    },
    "user": {
        "username": ""
    }
}