{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p>Yesterday, the CS Club hosted a massive party that put all the frat parties to shame.  Today, they have to clean up everything.  They also have to restock the strategic supply of Mountain Dew.  Phillip hates cleaning and wants to pick up the dew instead.  He knows that they intend to distribute the chores by having everyone get a number between 1 and the number of people who actually stayed to help clean up.  Once everyone has a number, they will start with the person who has number \"1\" and skip some number of people.  The person who they land on will be given a specific cleaning task.  The last person picked will not have to clean and will instead get the Dew.  Help Phillip avoid work by creating a program that will take in the number of people participating and the number skipped and output which number Phillip should get in order to the last to get a chore.</p>\n<p>\u00a0</p>\n<h3>Input</h3>\n<p>The number of people playing and the number being skipped.</p>\n<h3>Output</h3>\n<p>The number that will be picked last.</p>\n<p>Tips:</p>\n<ul>\n<li><a href = http://webspace.ship.edu/deensley/mathdl/Joseph.html>Here </a> is a website that visualizes this problem </li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n41 3\n\n<b>Output:</b>\n31\n</pre><p>\u00a0</p>\n<h3>Explanation</h3>\n<p><b>Example case 1.</b> ...</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "22-02-2015",
    "is_direct_submittable": false,
    "contest_name": "Replay of Pitt CSC - University of Pittsburgh ",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1427301000,
        "end_date": 1427311800,
        "practice_submission_allowed": true,
        "visible_start_date": 1427311800,
        "submit_start_date": 1427301000,
        "current": 1537436490
    },
    "problem_author_html_handle": "pwf7",
    "problem_name": "Chore Wheel",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/pwf7'>pwf7</a>",
    "problem_tester_html_handle": "",
    "problem_author": "pwf7",
    "contest_code": "PITTCS15",
    "max_timelimit": "10",
    "problem_code": "PCSC7"
}