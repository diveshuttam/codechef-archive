{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Once, there lived a prince in Baksland named Baks. He was a newly assigned prince, and the land was barren. There was nothing but a few houses in the city. Therefore, King Baks decided to make some towers for the people of his city. He wanted to make his city attractive so he could get more revenue out of tourists. He experimented daily from dusk to dawn to get the perfect combination for his city. Finally, after weeks and weeks of experimentation, he found out that people love symmetry. \n<br><br>\nKing Baks hired the best architect, TJ, from his city and asked for his advice on the symmetry that would suit his city. TJ told him to build his city such that the towers of the city are either increasing(not strictly) or decreasing(not strictly) in height. TJ further told him not to build a tower higher than the total number of towers. Also there cannot be a tower with 0 height. King Baks, has fixed the number of towers to be 'N'. Now he wants TJ to state the number of possible rearrangement of towers that are possible. \n<br><br>\nTJ, being weak at Maths requires your help to compute the same.</p>\n<p>\u00a0</p>\n\n\n<h3>Input</h3>\n<p>T; The number of Test Cases, T lines follow.\nN; Each lines contains an integer N, for which you have to output the solution</p>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p>For each N, output the solution modulus 1000000007.</p>\n\n<p>\u00a0</p>\n\n<h3>Constraints</h3>\n<p>1 <= T <= 50</p>\n<p>1<=N<=10^5</p>\n\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n1\n2\n\n<b>Output:</b>\n1\n4\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p><b>Example case 1.  </b>All possible rearrangements are:   {{1}} </p>\n<p><b>Example case 2.  </b>All possible rearrangements are:    {{1 1} , {1 2} , {2 1}, {2 2}} </p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "28-01-2017",
    "is_direct_submittable": false,
    "contest_name": "Algoflux Qualifiers",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYPY",
    "todo": false,
    "time": {
        "view_start_date": 1485792000,
        "end_date": 1485801900,
        "practice_submission_allowed": true,
        "visible_start_date": 1485877500,
        "submit_start_date": 1485792000,
        "current": 1537434191
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>code_hard123</span>",
    "problem_name": "Towers of Baksland",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/code_hard123'>code_hard123</a>",
    "problem_tester_html_handle": "",
    "problem_author": "code_hard123",
    "contest_code": "AGOF2017",
    "max_timelimit": "1",
    "problem_code": "ALGFLXQH"
}