{
    "problem_code": "KSUBSUM",
    "problem_author": "flying_ant",
    "contest_name": "ACM-ICPC Practice round 2014",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>flying_ant</span>",
    "problem_name": "Makx Sum",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>masked_zorro</span>",
    "contest_code": "ICPC14PR",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cook18'>cook18</a>, <a class='problem-tag-small ' href='/tags/problems/easy'>easy</a>, <a class='problem-tag-small ' href='/tags/problems/flying_ant'>flying_ant</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p align=\"justify\">\nDid you know that the Hindus believe there are 330 million deities ? Lets discuss about them in long contests. The three main forces of god Brahma, Vishnu and Mahesh, also called Trimurti ( 3 forms ), want to decide when to end the world. Given an array A, which contains the 'Good' ( or 'Evil' ) score of each place on earth, they can easily find the maximum sum of the scores of a (contiguous) sub-array of places. But this is not much useful to them. So, <i>each</i> of them gives a value K and want to know the Kth maximum sum of scores of a contiguous sub-array. In other words, find the value of S[K] (1-based index), where the array S contains the sums of all possible contiguous sub-arrays in non-increasing order.\n\n<h3>Input</h3>\n</p><p align=\"justify\">\nFirst line contains T, number of test cases. T cases follow. In each test case, first line contains N K1 K2 K3. Next line contains N space separated integers.\n<br />\n\n\n<h3>Output</h3>\n</p><p align=\"justify\">\nFor each test case, output the K1<sup>th</sup>, K2<sup>th</sup> and K3<sup>th</sup> maximum sum in a single line, separated by a single space. See sample cases and explanation for more clarity.\n\n<h3>Constraints</h3>\n</p><p align=\"justify\">\n1 \u2264 T \u2264 3<br />\n2 \u2264 N \u2264 10000<br />\n1 \u2264 K1 &lt; K2 &lt; K3 \u2264 2012<br />\nK3 \u2264 N*(N+1)/2<br />\n-10000 \u2264 A[i] \u2264 10000<br />\n\n\n<h3>Example</h3>\n\n<pre>\n<b>Input:</b>\n3\n3 1 2 3\n10 20 30\n3 3 4 6\n10 20 30\n4 2 6 10\n20 -15 10 -15\n\n<b>Output:</b>\n60 50 30\n30 30 10\n15 -5 -20\n</pre>\n<br />\n<b>Explanation:</b><br />\nCase 1 &amp; 2 : A = { 10, 20, 30 }. All possible sums of sub-arrays in non-increasing order, S[1..6] = { 60, 50, 30, 30, 20, 10 }<br />\n<br /><br />\n<i><b>Warning : </b>\"Large input / output. Be careful with certain languages. Eg: Prefer using scanf/printf to cin/cout for C++\"</i>\n<br /><br />\n<i><b>Note : </b>There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted.</i></p>",
    "category_name": "main",
    "date_added": "9-01-2012",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "max_timelimit": "0.620981",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/KSUBSUM",
    "problem_tester": "masked_zorro  ",
    "time": {
        "view_start_date": 1417372200,
        "end_date": 1418837400,
        "practice_submission_allowed": true,
        "visible_start_date": 1418837400,
        "submit_start_date": 1417372200,
        "current": 1537437116
    },
    "user": {
        "username": ""
    }
}