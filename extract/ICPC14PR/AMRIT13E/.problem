{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>We have an array A and we want to sort it in non-decreasing order. The only allowable operation is to move one element of the array into any other place (before all elements, after all elements or between any two adjacent elements). The cost of the single operation is equal to the value of the moved element. We want to minimize the total cost of sorting the array.</p>\n<p>For example, we have an array {7, 1, 2, 3}. We can sort it by moving 7 from the head to the tail. But the cost of this operation is 7 which is not optimal. The optimal sorting algorithm is to consecutively move 1, 2 and 3 to the proper places before 7. The total cost of these three movements will be 1+2+3=6, which is less than 7.</p>\n<p>You will be given an array. Output the minimum total cost required to sort the array.</p>\n<p>Input Format:<br /> The first line contains a single integer, N.<br /> The second line contains N space separated integers.</p>\n<p>Output Format:<br /> A single line, containing a single integer: the minimum total cost required to sort the array.</p>\n<p>Constraints:</p>\n<p>All integers will be between 1 and 5000, inclusive.<br /> Easy case (20) : 1 &lt;= N &lt;= 10<br /> Hard case (80) : 1 &lt;= N &lt;= 5000</p>\n<p>Sample Input 1:<br /> 4<br /> 7 1 2 3</p>\n<p>Sample Output 1:<br /> 6<br /> \u00a0<br /> Sample Input 2:<br /> 6<br /> 8 2 6 5 1 4</p>\n<p>Sample Output 2:<br /> 18</p>\n<p>Source: TopCoder SRM 351</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "10-12-2014",
    "is_direct_submittable": false,
    "contest_name": "ACM-ICPC Practice round 2014",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, JAR, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1417372200,
        "end_date": 1418837400,
        "practice_submission_allowed": false,
        "visible_start_date": 1418837400,
        "submit_start_date": 1417372200,
        "current": 1537437114
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>murdocc007</span>",
    "problem_name": "An odd sort",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/murdocc007'>murdocc007</a>",
    "problem_tester_html_handle": "",
    "problem_author": "murdocc007",
    "contest_code": "ICPC14PR",
    "max_timelimit": "1",
    "problem_code": "AMRIT13E"
}