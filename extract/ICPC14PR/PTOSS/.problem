{
    "problem_code": "PTOSS",
    "problem_author": "yellow_agony",
    "contest_name": "ACM-ICPC Practice round 2014",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>yellow_agony</span>",
    "problem_name": "Pizza Tossing",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>gamabunta</span>",
    "contest_code": "ICPC14PR",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cook26'>cook26</a>, <a class='problem-tag-small ' href='/tags/problems/kmp'>kmp</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/yellow_agony'>yellow_agony</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p >\n\n<p style=\"text-align:justify\">The string S1 is the encoded form of the lucky sequence. S1 will contain only characters 'a' - 'z' (that stand for values 0 - 25), and 'A' - 'F' (that stand for values 26 - 31). To decode S1, concatenate the values as 5-bit binary numbers of each character of S1. Then, replace 0's with F's and 1's with B's. Chef's lucky sequence is the first N characters in the resulting string.</p>\n\n<p style=\"text-align:justify\">The string S2 is the encoded form of the sequence of sides Chef has already tossed today, in the same way.</p>\n\n<p style=\"text-align:justify\">Please see the examples for more clarity.</p>\n\n<h3>Output</h3>\n<p style=\"text-align:justify\">For each test case, output a single line containing the expected number of additional tosses Chef will make. It can be proved that the answers will always be an integer. Since the answers can be very large, output each answer modulo 1,000,000,007. Note that if Chef has already achieved his lucky sequence today, he can stop right away and therefore you should output 0.</p>\n\n<h3>Example</h3>\n<pre>\n<b>Input:</b>\n3\n1 a\n0 a\n3 a\n2 a\n8 An\n3 B\n\n<b>Output:</b>\n2\n8\n254\n</pre>\n\n<h3>Explanation</h3>\n<p style=\"text-align:justify\">In the third case, for the lucky sequence, 'A' stands for 26 and its 5-bit binary number is 11010. 'n' stands for 13 and its 5-bit binary number is 01101. Concatenate them to get 1101001101. The decoded string will be BBFBFFBBFB. Chef's lucky sequence is the first eight characters, i.e., BBFBFFBB.</p>\n\n<h3>Constraints</h3>\n<p>\n1 \u2264 |S1|, |S2| \u2264 200,000<br/>\n1 \u2264 N \u2264 5 \u00d7 |S1|<br/>\n0 \u2264 M \u2264 5 \u00d7 |S2|<br/>\n(sum of |S1| for all S1) \u2264 1,000,000<br/>\n(sum of |S2| for all S2) \u2264 1,000,000<br/>\n(|S| denotes the number of characters of S.)\n</p>",
    "category_name": "main",
    "date_added": "9-03-2012",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "max_timelimit": "0.9",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/PTOSS",
    "problem_tester": "gamabunta",
    "time": {
        "view_start_date": 1417372200,
        "end_date": 1418837400,
        "practice_submission_allowed": true,
        "visible_start_date": 1418837400,
        "submit_start_date": 1417372200,
        "current": 1537437089
    },
    "user": {
        "username": ""
    }
}