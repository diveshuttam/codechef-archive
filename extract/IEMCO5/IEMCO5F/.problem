{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Problem Description</h3>\n<br><br>\n<p>\n\t<b>Harshit</b> entered the Retro Arcade in DisneyLand, where he found a vintage Snake Frenzy Game. The arena is in the form of an NXM matrix and is covered with Bushes(#) and Land(.). The Snake(S) can walk over land only. In one unit time, if the snake is at index (i, j) it can move to index (i-1, j), (i+1, j), (i, j-1) or (i, j+1)\n\t<br><br>\n\t He wants to calculate the maximum time it would take for any snake to kill any Mouse(M) that it can reach. Beware there can be more than one snakes and mouses present on the arena. Consider, that a snake can travel unit distance in unit time, so the maximum time is equal to the maximum distance between the snake and the mouse. Help Harshit calculate this time.\n\t <br><br>\n\t Note: Arena has 1-based indexing, all paths from any snake to mouse are unique, if more than one snakes are at the same distance from a mouse then choose the snake with smallest column number, if two snakes happen to have the same column number then go for the smallest row number. Similarly for the mouse, snakes will look for the farthest mouse even if any other snake or mouse come in between.\n\t <br>\n\t Example: for S..M.M  the maximum distance is 5.\n</p>\n\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases.</li>\n<li>First line of each testcase contains 2 space separated integers: <b>M (number of columns)</b>  and <b>N (number of rows)</b></li>\n<li>Next N lines consist of the Arena as per the the description</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p></p>\n<ul>\n<li>For each testcase print 3 lines.</li>\n<li>On the first line for each testcase, print the maximum time it would take for any snake to kill any Mouse(M) that it can reach.</li>\n<li>On the second line for each testcase, print the coordinates of the Snake for that maximum time.</li>\n<li>On the third line for each testcase, print the coordinates of the Mouse for that maximum time.</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Constraints</h3>\n<p></p>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>10</b></li>\n<li><b>1</b> \u2264 <b>N, M</b> \u2264 <b>100</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n\n1\n5 4\nS...#\n#M..#\n###.#\nS..##\n\n<b>Output:</b>\n\n6\n1 1\n2 2\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p>\n\tThe maximum time that the snake at (1, 1) can take to reach the mouse at (2, 2) is 6 seconds.\n\t<br>\n\tThe path is (1, 1) -> (1, 2) -> (1, 3) -> (1, 4) -> (2, 4) -> (2, 3) -> (2, 2).\n\tThe snake at (4, 1) cannot reach the mouse.\n\tSo the maximum time taken by any snake to reach any mouse is 6 seconds.\n</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "19-04-2018",
    "is_direct_submittable": false,
    "contest_name": "IEM Coding Olympiad (IEMCO)",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1524321000,
        "end_date": 1524331800,
        "practice_submission_allowed": true,
        "visible_start_date": 1524331800,
        "submit_start_date": 1524321000,
        "current": 1537432543
    },
    "problem_author_html_handle": "tkh_iem",
    "problem_name": "Harshit Goes To Disneyland",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/tkh_iem'>tkh_iem</a>",
    "problem_tester_html_handle": "",
    "problem_author": "tkh_iem",
    "contest_code": "IEMCO5",
    "max_timelimit": "1",
    "problem_code": "IEMCO5F"
}