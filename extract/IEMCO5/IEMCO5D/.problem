{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Problem Description</h3>\n<br><br>\n<p>\n\t<b>Sid</b> has a girlfriend, he wants to go on a world tour with her. Sid will be visiting <b>N</b> countries and he has total <b>N</b> bank accounts, 1 in each of the <b>N</b> countries that he would be visiting. Sid's ith bank account is located in the ith country and has <b>A[i]</b> amount of money.\n\t<br><br>\n\tThe world tour requires a lot of money and Sid has <b>Q</b> queries. A query can be one of the two following 2 types:\n\t<br><br>\n\t<b>1 B M:</b>\n\tQuery of type 1 with bank account index as B (1-indexed) and amount of money deposited to bank account with index B is M. You do not have to find out anything for this type of query.\n<br><br>\n\t<b>2 B M L R:</b>\n\tQuery of type 2 with bank account index as B, amount of money to be checked is M. He will travel the countries B-L to B+R and we have to find out if he has at least M amount of money when he travels from countries B-L to B+R in a <b>left to right</b> fashion.\n<br><br>\nRemember that the <b>world is round</b>. You can consider that for n >= 2, nth (last) country lies on the left side of the 1st country\n<br><br>\n\tNote: He is only checking for the money and <b>not</b> withdrawing it from any bank account in query of type 2\n</p>\n\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer T denoting the number of test cases.The description of T test cases follows.</li>\n<br>\n<li>The first line of each test case contains 2 space separated integers N and Q denoting the number of countries he would be visiting and the number of queries respectively.</li>\n<br>\n<li>The second line of each test case contains N space separated integers. The ith integer denotes A[i], the amount of money in the bank of the ith country.</li>\n<br>\n<li>Each of the following Q lines describes one query in the following format\u200b :\n\t<ul>\n\t\t<li>1 B M: for query of first type</li>\n\t\t<li>2 B M L R: for query of second type</li>\n\t</ul>\n</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p>\nFor each query of type 2 print a single line either \"YES\" or \"NO\" without quotes, whether Sid will have the required money M over his journey.</p>\n<p>\u00a0</p>\n\n<h3>Constraints</h3>\n<p></p>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>100</b></li>\n<li><b>1</b> \u2264 <b>N, Q, B</b> \u2264 <b>10^5</b></li>\n<li><b>0</b> \u2264 <b>M, A[i]</b> \u2264 <b>2*(10^9)</b></li>\n<li><b>0</b> \u2264 <b>L, R</b> \u2264 <b>N-1</b></li>\n<li><b>0</b> \u2264 <b>L+R</b> \u2264 <b>N-1</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n\n1\n5 5\n1 2 3 4 5\n1 2 5\n1 1 10\n2 2 20 1 1\n2 5 20 1 1\n2 5 31 2 2\n\n<b>Output:</b>\n\nYES\nYES\nNO\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p>\n\t Balance   : 1 2 3 4 5\n<br>\n\t 1st query       : 1 <b>7</b> 3 4 5 (Deposited money to second bank account)\n<br>\n\t2nd query      : <b>11</b> 7 3 4 5 (Deposited money to first bank account)\n<br>\n\t3rd query            : <b>\u200b11 7 3</b> \u200b 4 5 (sum of 11, 7, 3 is 21 which is greater than 20 therefore YES)\n<br>\n\t4th query          : \u200b<b>11</b> 7 3 <b>4 5</b> \u200b (sum of 4, 5, 11 is 20 which is equal to 20, YES, considering array as circular)\n<br>\n\t5th query             : \u200b <b>11 7 3 4 5</b> \u200b (sum of 11, 7, 3, 4, 5 is 30 which is less than 31, NO, considering array as circular)\n\t\n</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "19-04-2018",
    "is_direct_submittable": false,
    "contest_name": "IEM Coding Olympiad (IEMCO)",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1524321000,
        "end_date": 1524331800,
        "practice_submission_allowed": true,
        "visible_start_date": 1524331800,
        "submit_start_date": 1524321000,
        "current": 1537432546
    },
    "problem_author_html_handle": "tkh_iem",
    "problem_name": "Wake Up Sid",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/tkh_iem'>tkh_iem</a>",
    "problem_tester_html_handle": "",
    "problem_author": "tkh_iem",
    "contest_code": "IEMCO5",
    "max_timelimit": "1",
    "problem_code": "IEMCO5D"
}