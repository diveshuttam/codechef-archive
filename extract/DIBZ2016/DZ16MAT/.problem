{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>You are given a matrix with <b>N</b> rows and <b>M</b> columns. Cell <strong>(x, y)</strong> indicates the cell at the intersection of <b>x<sup>th</sup></b> row and <b>y<sup>th</sup></b> column. Each cell of matrix contains some assigned value (say <strong>H</strong>). Visiting this cell, you will get <b>H</b> dollars (if <b>H</b> \u2265  0) else you have to pay <b>|H|</b> dollars. You start from cell <strong>(1, 1)</strong> and you have to reach cell <strong>(N, M)</strong>. From a given cell, you can only move right or down. Formally, from cell <strong>(x, y)</strong>, you can go to cell <strong>(x + 1, y)</strong> i.e down or cell <strong>(x, y + 1)</strong> i.e. right. In your way you have to collect <strong>maximum </strong>amount of money.</p>\n<p>However, there is a trick to mend the rule. You can pay <b>P</b> dollars and change the direction of at most <b>1</b> move i.e. instead of going down or right, you can pay <b>P</b> dollars and go to left or up. [cell (x - 1, y) or cell (x, y - 1) from cell (x, y).] After you use this trick once, you will again have to start moving from one cell to another cell in your old way (right or down). <br /><br />\nVisiting a cell previously visited will cause <strong>no </strong>more gain or loss in money since you already have collected or paid for this cell before.</p>\n<p>Given the amount present on each cell of matrix and the value of <strong>P</strong>, find the <strong>maximum </strong>money you can get while travelling from <strong>(1, 1)</strong> to <strong>(N, M)</strong>. You cannot move out of grid during any of your moves.</p>\n<h3>Input</h3>\n<p>The first line of each test file contains three space separated integers <b>N</b>, <b>M</b> and <b>P</b> denoting rows and columns of the matrix respectively. Next <b>N</b> lines follow, each contains <b>M</b> integers. The <b>j<sup>th</sup></b> integer on the <b>i<sup>th</sup></b> line indicates the amount of money in cell <b>(i, j)</b>.</p>\n<h3>Output</h3>\n<p>Output in a single line, an integer that represents the maximum amount of money you can collect. In case you are in loss (negative collection of money), print the minimum amount of loss (with negative sign to indicate loss).</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>N, M</b> \u2264 <b>10<sup>3</sup></b></li>\n<li><b>-10<sup>6</sup></b> \u2264 <b>Amount in each cell</b> \u2264 <b>10<sup>6</sup></b></li>\n<li><b>1</b> \u2264 <b>P</b> \u2264 <b>10<sup>5</sup></b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n3 3 1\n1 3 1 \n5 3 5 \n2 1 1 \n\n<b>Output:</b>\n18\n</pre><h3>Explanation</h3>\n<p><b>Example case.</b>We will choose the path (1, 1) -> (2, 1) -> (2, 2) -> (1, 2) -> (1, 3) -> (2, 3) -> (3, 3). Total money gained during the path is 1 + 5 + 3 + 3 + 1 + 5 + 1 = 19. Since you went <b>up</b> on cell (2, 2), you pay 1 dollar. So final total profit is 18 dollars.</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "26-01-2016",
    "is_direct_submittable": false,
    "contest_name": "Divide by zero",
    "languages_supported": "CPP14, JAVA",
    "todo": false,
    "time": {
        "view_start_date": 1454167800,
        "end_date": 1454185800,
        "practice_submission_allowed": true,
        "visible_start_date": 1454185800,
        "submit_start_date": 1454167800,
        "current": 1537435582
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>ruchirgarg05</span>",
    "problem_name": "Same Old Matrix Problem",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/ruchirgarg05'>ruchirgarg05</a>",
    "problem_tester_html_handle": "",
    "problem_author": "ruchirgarg05",
    "contest_code": "DIBZ2016",
    "max_timelimit": "1",
    "problem_code": "DZ16MAT"
}