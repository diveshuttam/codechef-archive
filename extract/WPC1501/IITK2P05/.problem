{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p><font size=2></font></p>\n<p>This problem is simple. You will be given an integer <b> N </b> and you need to factorize that number. To help you with factorization of <b> N </b>, you will also be given <b> <I>phi</i>(N) </b>. </p>\n<p>\n<b> <I>phi</i>(x) </b> is also known as <a href = \"http://en.wikipedia.org/wiki/Euler%27s_totient_function\">Euler's Totient </a> function.<br />\n<b> <I>phi</i>(x) </b> is defined as number of positive integers less than or equal to <b>x</b> which are relatively prime to <b> x </b> (i.e, greatest common divisor is 1).\n</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.\n</li>\n<li>The only line of each test case contains two space separated integers representing <b>N</b> and <b> <I>phi</i>(N) </b> respectively.<b> N </b> denotes the number to be factorized.\n</li></ul>\n<h3>Output</h3>\n<ul>\n<li>For each test case, output a single line containing the prime factors of <b> N </b> in <b>non decreasing</b> order. See example for clarity.</li>\n</ul>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>20</b></li>\n<li><b>2</b> \u2264 <b>N</b> \u2264 <b>1,000,000,000,000,000,000 (10<sup>18</sup>)</b></li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n3\n8 4\n36 12\n450 120\n\n<b>Output:</b>\n2 2 2\n2 2 3 3\n2 3 3 5 5\n\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "19-01-2015",
    "is_direct_submittable": false,
    "contest_name": "IIT Kanpur, Monthly Programming Contest 2015",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1421847000,
        "end_date": 1421868600,
        "practice_submission_allowed": true,
        "visible_start_date": 1421868600,
        "submit_start_date": 1421847000,
        "current": 1537436955
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>triveni</span>",
    "problem_name": "Factorization",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/hard'>hard</a>, <a class='problem-tag-small ' href='/tags/problems/mpc'>mpc</a>, <a class='problem-tag-small ' href='/tags/problems/mpc2'>mpc2</a>, <a class='problem-tag-small ' href='/tags/problems/number-theory'>number-theory</a>, <a class='problem-tag-small ' href='/tags/problems/triveni'>triveni</a>",
    "problem_tester_html_handle": "",
    "problem_author": "triveni",
    "contest_code": "WPC1501",
    "max_timelimit": "2",
    "problem_code": "IITK2P05"
}