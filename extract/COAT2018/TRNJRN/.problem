{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>In a 26 dimensional hypothetical world there are 27 equidistant towns, each named after a lowercase English alphabet, except Town '0' where the President lives.\n\nThe world's railway system has **N** trains, each having Town '0' as its source. Each train has variable number of coaches, where each coach is named after one of the 26 English alphabet towns. A train on its journey visits the town designated by its last coach and upon arrival detaches the coach and so on until only the engine is left which stays at its last town.\n\nInput consists of coach order, from first to last coach, of each of the **N** trains as newline separated strings **S**<sub>**1**</sub> to **S**<sub>**N**</sub> and **Q** queries where each query consists of coach order of a new train, **q**.\n\nFrom the given **N** trains output the coach order of the train with which **q** will have longest journey together before parting ways for the first time.\n\nAssume all towns have **N** parallel tracks and the trains have same speed. If **q** has longest journey with more than one trains, output coach order which is lexicographicaly smallest when reversed.\n\n**Input -**\n\n-   The first line of the input contains a single integer **N**\n-   Each one of the next **N** lines contains coach order for i-th train as string **S**<sub>**i**</sub>, 1 &lt;= i &lt;= **N**\n-   Next line contains a single integer **Q**\n-   Each of the next **Q** lines contains coach order of a new query train **q**\n\n****\n\n**Output -**\n\nFor each query output a string on a newline which satisfies the condition given in the problem statement, as an answer to that query\n\n****\n\n**Constraints -**\n\n1 &lt;= **N**, **Q** &lt;= 100,000\n\n1 &lt;= |**S**<sub>**i**</sub>| &lt;= 50, 1 &lt;= i &lt;= **N**\n\n1 &lt;= |**q**| &lt;= 50\n\n****\n\n**Example Input -**\n\n3\n\nabc\n\nbac\n\ncba\n\n2\n\ndc\n\ne\n\n****\n\n**Example Output -**\n\nbac\n\ncba\n\n****\n\n**Explanation -**\n\n1<sup>st</sup> Query -\n\nTrain with coach order \u2018dc\u2019 has longest journey with trains with coach order \u2018abc\u2019 and \u2018bac\u2019. When reversed, the lexicographically smallest one is \u2018bac\u2019.\n\n2<sup>nd</sup> Query -\n\nTrain with coach order \u2018e\u2019 has longest journey, of length 0, with all three trains. When reversed, the lexicographically smallest one is \u2018cba\u2019.",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "3-08-2018",
    "is_direct_submittable": false,
    "contest_name": "CodeAthon",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1534060800,
        "end_date": 1534075200,
        "practice_submission_allowed": true,
        "visible_start_date": 1534075200,
        "submit_start_date": 1534060800,
        "current": 1537432167
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>herambpatil98</span>",
    "problem_name": "Train Journey",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/herambpatil98'>herambpatil98</a>",
    "problem_tester_html_handle": "",
    "problem_author": "herambpatil98",
    "contest_code": "COAT2018",
    "max_timelimit": "1",
    "problem_code": "TRNJRN"
}