{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Asya is not only cute but smart and her young age doesn't stop her from learning different algorithms. These days she is busy in developing an application for communication over a network.</p>\n<p>Now she needs your help in writing a small program. Your are given the message received by a node on network, <b>R</b>. The message is in binary.</p>\n<p>The network designed by Asya is pretty awesome. It is assured that <b>at maximum a single bit error</b> can occur in the <b>original message (M)</b>. To detect this, the original message is transformed to <b>Encoded message (E)</b>. The message is transformed as follows : </p>\n<p>1> Blank spaces are inserted (from left) at all positions which are 2<sup>i</sup> where i = 0, 1, 2, 3,... <br />\n2> At any blank space at position <b>2<sup>i</sup></b>, the value given is : (sum of all the bits at position x, where i-th bit (from LSB) is set in x) MOD 2.</p>\n<p>for example; if M = 111110001100 <br />\nthen, inserting blank spaces : _ _ 1 _ 1 1 1 _ 1 0 0 0 1 1 0 _ 0 <br />\nBlank spaces are at 1, 2, 4, 8, 16 th positions. </p>\n<p>Now value at position 1 : (sum of bits at position 3, 5, 7, 9, 11, 13, 15, 17) % 2 <br />\n\t\t\t\t\t\t= (1 + 1 + 1 + 1 + 0 + 1 + 0 + 0) % 2<br />\n\t\t\t\t\t\t= 5 % 2<br />\n\t\t\t\t\t\t= 1</p>\n<p>value at position 2\t\t: (sum of bits at position 3, 6, 7, 10, 11, 14, 15) % 2<br />\n\t\t\t\t\t\t= (1 + 1 + 1 + 0 + 0 + 1 + 0) % 2<br />\n\t\t\t\t\t\t= 4 % 2<br />\n\t\t\t\t\t\t= 0</p>\n<p>value at position 4\t\t: (sum of bits at position 5, 6, 7, 12, 13, 14, 15) % 2<br />\n\t\t\t\t\t\t= (1 + 1 + 1 + 0 + 1 + 1 + 0) % 2<br />\n\t\t\t\t\t\t= 5 % 2<br />\n\t\t\t\t\t\t= 1</p>\n<p>value at position 8\t\t: (sum of bits at position 9, 10, 11, 12, 13, 14, 15) % 2<br />\n\t\t\t\t\t\t= (1 + 0 + 0 + 0 + 1 + 1 + 0) % 2<br />\n\t\t\t\t\t\t= 3 % 2<br />\n\t\t\t\t\t\t= 1</p>\n<p>value at position 16\t: (sum of bits at position 17) % 2<br />\n\t\t\t\t\t\t= 0 % 2<br />\n\t\t\t\t\t\t= 0</p>\n<p>So, E = <b>1</b> <b>0</b> 1 <b>1</b> 1 1 1 <b>1</b> 1 0 0 0 1 1 0 <b>0</b> 0</p>\n<p>This message <b>E</b> is sent over the network. <br />\nNow she wants you to write the code to output the <b>correct original message (M)</b>, when the input is <b>received message (R)</b>. (i.e, you have to develop the decoding algorithm).</p>\n<h3>Input : </h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</li>\n<li>Every test case contains a binary string, denoting the received message (R).</li>\n</ul>\n<p>\u00a0</p>\n<h3>Output : </h3>\n<ul>\n<li>For each test case, output a single line containing the original message (M).</li>\n</ul>\n<p>\u00a0</p>\n<h3>Constraints : </h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>100</b></li>\n<li><b>3</b> \u2264 <b>|R|</b> \u2264 <b>100000</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example : </h3>\n<pre><b>Input:</b>\n2\n10111111101011000\n110<br />\n<br />\n<b>Output:</b>\n111110001100\n1\n</pre><p>\u00a0</p>\n<h3>Explanation : </h3>\n<p><b>Example case 1.</b><br />\n<b>R = </b>10111111101011000<br />\n<b>So, E = </b>10111111100011000<br />\nand thus, <b>M = </b>111110001100\n</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "19-02-2016",
    "is_direct_submittable": false,
    "contest_name": "ICPC Preparatory Series by Team Akatsuki",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, LISP sbcl, LISP clisp, SCM guile, ERL, TCL, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1457274600,
        "end_date": 1457292600,
        "practice_submission_allowed": true,
        "visible_start_date": 1457292600,
        "submit_start_date": 1457274600,
        "current": 1537435257
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>pakhandi</span>",
    "problem_name": "Asya & Encoding",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/bitwise'>bitwise</a>, <a class='problem-tag-small ' href='/tags/problems/easy'>easy</a>, <a class='problem-tag-small ' href='/tags/problems/implementation'>implementation</a>, <a class='problem-tag-small ' href='/tags/problems/ipc15p3b'>ipc15p3b</a>, <a class='problem-tag-small ' href='/tags/problems/pakhandi'>pakhandi</a>",
    "problem_tester_html_handle": "",
    "problem_author": "pakhandi",
    "contest_code": "IPC15P3B",
    "max_timelimit": "2",
    "problem_code": "ASYA1"
}