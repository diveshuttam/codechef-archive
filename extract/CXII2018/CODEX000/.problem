{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h2>Help The Stark Industries</h2>\n<br/><br/><br/>\n<b>J.A.R.V.I.S </b> assists Tony Stark in his Iron Man identity, giving him advice on the armor's status and on the enemy's weak points during the battles. He wants to help Stark in creating a new element as a substitute for the obsolete palladium for the Arc Reactor. The element is on the verge of creation. The only thing missing is an expression that will aid in completing this experiment.\n<br/><br/><br/>\nThe expression Mr. Stark has is in prefix format. The postfix format of the same expression is the key catalyst for this experiment. \n<br/><br/><br/>\nJ.A.R.V.I.S needs your help in converting the input Prefix expression to the Postfix form. \n<br/><br/>\n<b>Prefix:</b> The operator appears in the expression before the operands. Simply of the form (operator operand1 operand2).\n<br/> Example : *+AB-CD (Infix : (A+B) * (C-D) ). \n<br/><br/>\n<b>Postfix:</b> The operator appears in the expression after the operands. Simply of the form (operand1 operand2 operator).\nExample : AB+CD-* (Infix : (A+B * (C-D) ). \n<br/><br/><br/>\n<b>###Input:</b>\n<br/>\n- Only one line expression with the Prefix notation.\n<br/><br/><br/>\n<b>###Output:</b>\n<br/>\nPrint the postfix notation for the input prefix expression.  \n<br/><br/><br/>\n<b>###Sample Input 1:</b><br/>\n\t*+AB-CD\n<br/><br/>\n<b>###Sample Output 1:</b><br/>\n\tAB+CD-*<br/><br/>\n\t\n<b>###Sample Input 2:</b><br/>\n\t*-A/BC-/AKL\n\t\n<br/><br/>\n<b>###Sample Output 2:</b><br/>\n\tABC/-AK/L-* <br/><br/>\n\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "19-04-2018",
    "is_direct_submittable": false,
    "contest_name": "Code-XII",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1524191400,
        "end_date": 1524202200,
        "practice_submission_allowed": true,
        "visible_start_date": 1524202200,
        "submit_start_date": 1524191400,
        "current": 1537432558
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>mjdubal</span>",
    "problem_name": "Help JARVIS solve Expressions",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/mjdubal'>mjdubal</a>",
    "problem_tester_html_handle": "",
    "problem_author": "mjdubal",
    "contest_code": "CXII2018",
    "max_timelimit": "1",
    "problem_code": "CODEX000"
}