{
    "problem_code": "ALOST",
    "problem_author": "amitpandeykgp",
    "contest_name": "May Lunchtime 2016",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>amitpandeykgp</span>",
    "problem_name": "Akhil Recovers The Lost Array",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>prateekg603</span>",
    "contest_code": "LTIME36",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/amitpandeykgp'>amitpandeykgp</a>, <a class='problem-tag-small ' href='/tags/problems/ltime36'>ltime36</a>, <a class='problem-tag-small ' href='/tags/problems/number-theory'>number-theory</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME36/mandarin/ALOST.pdf\">Mandarin Chinese </a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME36/russian/ALOST.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME36/vietnamese/ALOST.pdf\">Vietnamese</a> as well.</h3>\n<p>Akhil has an array consisting of <b>N</b> positive integers. As we know that there are <b>(N*(N+1))/2</b> non-empty contiguous subarrays in an array of size <b>N</b>. Akhil found that exactly <b>E</b> of the contiguous subarrays had even sum and remaining <b>O = (N*(N+1))/2 - E</b> have odd sum.\n</p>\n<p>Next day, he lost the original array. But he still remembered the <b>E</b> and <b>O</b> values correctly. Now, he wants to recreate any such array which has exactly <b>E</b> even sum continuous subarrays and <b>O</b> odd ones. If there are many such possible arrays, printing any one of them will make him happy.\n</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows:</li>\n<li>First line of each test case contains an integer <b>N</b> denoting the length of lost array.</li>\n<li>Second line of each test case contains two space separated integers <b>E</b> and <b>O</b>, denoting number of contiguous subarrays with even and odd sums, respectively. </li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>For each test case, output a single line containing all the integers of an array separated by a space.</li>\n<li>Each integer should lie between 0 and 100(both inclusive).</li>\n<li>If there is no such possible array, print <b>-1</b> in a single line.</li>\n</ul>\n<h3>Constraints</h3>\n<ul>\n<li><b>0</b> \u2264 <b>E, O</b> \u2264 <b>N*(N+1)/2</b></li>\n<li><b>E + O</b> = <b>N*(N+1)/2</b></li>\n</ul>\n<h3>Subtasks</h3>\n<li>Subtask #1 (20 points) : <b>1</b> \u2264 sum of <b>N</b> over all test cases \u2264 <b>15</b></li>\n<li>Subtask #2 (20 points) : <b>1</b> \u2264 sum of <b>N</b> over all test cases \u2264 <b>2 * 10<sup>3</sup></b></li>\n<li>Subtask #3 (60 points) : <b>1</b> \u2264  sum of <b>N</b> over all test cases  \u2264 <b>10<sup>6</sup></b></li>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n3\n3\n2 4\n3\n3 3\n3\n0 6\n\n<b>Output:</b>\n2 1 2\n1 2 2\n-1\n</pre><h3>Explanation</h3>\n<p><b>Example case 1.</b> There are total 6 subarrays : {2},{1},{2},{2,1},{1,2},{2,1,2}. Their sums {2, 1, 2, 3, 3, 5} are respectively. As 2 of them are even and 4 of them are odd. So, this is one possible answer which satisfies Akhil's requirements.</p>\n<p><b>Example case 3.</b> There is no array of length 3 whose all the subarrays have odd sum. Akhil might have remembered something incorrectly. Hence, you should print -1.</p>\n",
    "category_name": "main",
    "date_added": "19-04-2016",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/ALOST",
    "problem_tester": "prateekg603",
    "time": {
        "view_start_date": 1464444000,
        "end_date": 1464454800,
        "practice_submission_allowed": true,
        "visible_start_date": 1464454800,
        "submit_start_date": 1464444000,
        "current": 1537434884
    },
    "user": {
        "username": ""
    }
}