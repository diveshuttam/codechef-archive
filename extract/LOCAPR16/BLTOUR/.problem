{
    "problem_code": "BLTOUR",
    "problem_author": "ankurverma1994",
    "contest_name": "April LoC Competitive Programming Marathon",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>ankurverma1994</span>",
    "problem_name": "Byteland Tour",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "LOCAPR16",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/ankurverma1994'>ankurverma1994</a>, <a class='problem-tag-small ' href='/tags/problems/dfs'>dfs</a>, <a class='problem-tag-small ' href='/tags/problems/graph'>graph</a>, <a class='problem-tag-small ' href='/tags/problems/locapr16'>locapr16</a>, <a class='problem-tag-small ' href='/tags/problems/tree'>tree</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>In Byteland there are <b>N</b> cities, numbered <b>1</b> through <b>N</b>. Some pairs of cities are connected by bi-directional roads in such a way that starting from any one city you can visit all other cities either directly or indirectly.\n</p>\n<p>Chef is currently at city <b>A</b> and wants to visit all other cities in Byteland. Chef can only move according to following rule. <br /><br />\nIf Chef is at city A then he continues to move from city A to city B, city B to city C (provided A is directly connected to B, B is directly connected to C) and so on unless there are no more cities leading from current city.<br />\nIf so he jumps back to previous city and repeat the same tour with other cities leading from it which are not visited. Chef repeat this step unless all cities are not visited.<br /></p>\n<p>Help Chef to count number of ways in which he can visit all other cities . As this number can be large print it modulo <b>10<sup>9</sup>+7</b></p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</li>\n<li>The first line of each test case contains a single integer <b>N</b> denoting the number of cities in Byteland.</li>\n<li> Next <b>N-1</b> lines contain two space-separated integers <b>u and v</b> denoting there is bi-directional road between city numbered u and v. </li>\n<li> Next line contains a single integer <b>A</b> denoting the city number where Chef is present.</li>\n</ul>\n\n<h3>Output</h3>\n<ul>\n<li>For each test case, output a single line containing number of ways in which Chef can visit all cities modulo 10<sup>9</sup>+7.</li>\n</ul>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>5</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>A</b> \u2264 <b>N</b></li>\n</ul>\n\n<h3>Subtasks</h3>\n<p><b>Subtask #1 : (10 points) </b></p>\n<ul>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>5</b></li>\n</ul>\n<p><b>Subtask #2 : (30 points) </b></p>\n<ul>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>100</b></li>\n</ul>\n<p><b>Subtask #3 : (60 points) </b></p>\n<ul>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>10<sup>5</sup></b></li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n3\n1 2\n1 3\n1\n5\n1 2\n1 3\n2 4\n2 5\n1\n\n<b>Output:</b>\n2\n4\n</pre>\n<h3>Explanation</h3>\n<p><b>Example case 1.</b> Chef can visit cities in two ways according to the problem: 1-2-3 and 1-3-2</p>\n<p><b>Example case 1.</b> Chef can visit cities in four ways according to the problem:<br />\n<br /> 1-2-4-5-3<br /> 1-2-5-4-3<br /> 1-3-2-4-5<br /> 1-3-2-5-4</p>\n",
    "category_name": "main",
    "date_added": "19-04-2016",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/BLTOUR",
    "problem_tester": null,
    "time": {
        "view_start_date": 1461868200,
        "end_date": 1462213740,
        "practice_submission_allowed": true,
        "visible_start_date": 1462213740,
        "submit_start_date": 1461868200,
        "current": 1537434913
    },
    "user": {
        "username": ""
    }
}