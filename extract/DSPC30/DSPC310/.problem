{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p class=\"MsoNormal\"><span>The <span class=\"SpellE\">DoubleVision</span>\n<span class=\"GramE\">company</span> designs inks and fonts that can be easily read\nby both humans and machines. They design their fonts on a rectangular grid. Shown\nbelow is a very simple 5x3 design for the first five digits.</span></p>\n\n\n<p class=\"MsoNormal\"><span>.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">oo</span></span>.\n\n<span class=\"SpellE\"><span class=\"GramE\">oo</span></span>. <span class=\"SpellE\">o.o</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.<span class=\"GramE\">o.</span> ..<span class=\"GramE\">o ..o</span> <span class=\"SpellE\">o.o</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n\n.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">oo</span></span>.\n<span class=\"SpellE\"><span class=\"GramE\">ooo</span></span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.o. o<span class=\"GramE\">..</span> ..<span class=\"GramE\">o ..o</span></span></p>\n\n<p class=\"MsoNormal\"><span>.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">ooo</span></span>\n<span class=\"SpellE\">oo</span>. ..<span class=\"GramE\">o</span></span></p>\n\n<p class=\"MsoNormal\"><span>The ink appears to be normal black\nink, but just underneath the surface <span class=\"SpellE\">DoubleVision</span>\nadds a special polymer that can be detected by an infrared scanner. A human\nsees the black ink but not the polymer, and a machine sees the polymer but not\nthe black ink. The only problem is that the polymer is much more expensive than\nthe ink, so <span class=\"SpellE\">DoubleVision</span> wants to use as little of it\nas possible. They have discovered that with many fonts, each symbol can be\nuniquely identified by at most two pixels. By only adding the polymer to one or\ntwo pixels per symbol, they drastically lower costs while still ensuring 100%\naccuracy in their scanners. The font shown above has this property; pixels that\nuniquely identify each letter are highlighted with '</span><span>#</span><span>'.\n(There are other choices that would work as well.)</span></p>\n\n<p class=\"MsoNormal\"><span>.#.\n<span class=\"GramE\">.o. #o. <span class=\"SpellE\">oo</span>.</span> <span class=\"GramE\">o</span>.#</span></p>\n\n<p class=\"MsoNormal\"><span>#.<span class=\"GramE\">o .#</span>. ..<span class=\"GramE\">o ..o</span> <span class=\"SpellE\">o.o</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.o<span class=\"GramE\">. .</span>o. #o. <span class=\"SpellE\">ooo</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.o. #<span class=\"GramE\">..</span> ..<span class=\"GramE\">o ..o</span></span></p>\n\n<p class=\"MsoNormal\"><span>.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">ooo</span></span>\n#o. ..<span class=\"GramE\">o</span></span></p>\n\n<p class=\"MsoNormal\"><span>Your job is to write a program to\ndetermine if a given font has this property, and if so highlight the pixels.</span></p>\n\n<p class=\"MsoNormal\"><span>The input consists of one or more\ntest cases, followed by a line containing '</span><span>0</span><span> </span><span>0</span><span> </span><span>0</span><span>' (three zeros) that signals the end\nof the input. Each test case begins with a line containing three positive\nintegers <i>n</i>, <i>r</i>, and <i>c</i>, separated by a space: <i>n</i> is\nthe number of symbols in the font, <i>r</i> is the number of rows in each grid,\nand <i>c</i> is the number of columns in each grid. The next <i>r</i> lines\ncontain the image of each symbol, using the exact format shown in the examples:\na dot '</span><span>.</span><span>' represents an empty part of the grid, a lowercase '</span><span>o</span><span>'\nrepresents a <span class=\"GramE\">pixel,</span> and adjacent grids are separated\nby a space. The total width of each line will be at most 79 characters (not\ncounting end-of-<span class=\"SpellE\">line</span> characters), and <i>r</i> will\nbe at most 10. The test cases are implicitly numbered starting with 1.</span></p>\n\n<p class=\"MsoNormal\"><span>For test case <span class=\"SpellE\"><i>i</i></span>,\nfirst output a line that says '</span><span>Test</span><span> <span class=\"SpellE\"><i>i</i></span>'. Then determine if each\nsymbol can be uniquely identified with one or two pixels. If not, output a line\nwith the word '</span><span>impossible</span><span>'. Otherwise, output the font in the same format except that\nthe identifying pixels for each symbol are replaced with '</span><span>#</span><span>'.\n</span></p>\n\n<p class=\"MsoNormal\"><span>In general there may be several\ndifferent pixels or pixel pairs that uniquely identify a symbol. To ensure that\nthe output is unique, we add the following definition and rules. When comparing\ntwo pixels, the <i>topmost-leftmost</i> pixel is the one closest to the top of\nthe grid. If both pixels are on the same row, then the topmost-leftmost is the\none closest to the left of the grid.</span></p>\n\n<p class=\"MsoNormal\"><span>If one pixel will work, highlight\nthe topmost-leftmost pixel that works. Never highlight a two-pixel solution if\na one-pixel solution is possible. If two pixels are needed, highlight the pair\nwith the topmost-leftmost pixel. If two or more pairs have the same\ntopmost-leftmost pixel, highlight the one with the topmost-leftmost <i>other</i>\npixel.</span></p>\n\n<p class=\"MsoNormal\"><b><span>Input:</span></b><span></span></p>\n\n<p class=\"MsoNormal\"><span>3\n2 <span class=\"SpellE\">2</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span class=\"GramE\"><span>oo</span></span></span><span>\n<span class=\"SpellE\">oo</span> .o</span></p>\n\n<p class=\"MsoNormal\"><span>o.\n.o o.</span></p>\n\n<p class=\"MsoNormal\"><span>3\n2 <span class=\"SpellE\">2</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span class=\"GramE\"><span>oo</span></span></span><span>\n<span class=\"SpellE\">oo</span> .o</span></p>\n\n<p class=\"MsoNormal\"><span>o.\n.o <span class=\"SpellE\">oo</span></span></p>\n\n<p class=\"MsoNormal\"><span>5\n<span class=\"SpellE\">5</span> 3</span></p>\n\n<p class=\"MsoNormal\"><span>.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">oo</span></span>.\n<span class=\"SpellE\"><span class=\"GramE\">oo</span></span>. <span class=\"SpellE\">o.o</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.<span class=\"GramE\">o.</span> ..<span class=\"GramE\">o ..o</span> <span class=\"SpellE\">o.o</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">oo</span></span>.\n\n<span class=\"SpellE\"><span class=\"GramE\">ooo</span></span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.o. o<span class=\"GramE\">..</span> ..<span class=\"GramE\">o ..o</span></span></p>\n\n<p class=\"MsoNormal\"><span>.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">ooo</span></span>\n\n<span class=\"SpellE\">oo</span>. ..<span class=\"GramE\">o</span></span></p>\n\n<p class=\"MsoNormal\"><span>1\n2 4</span></p>\n\n<p class=\"MsoNormal\"><span>.o<span class=\"GramE\">..</span></span></p>\n\n<p class=\"MsoNormal\"><span>...o</span></p>\n\n<p class=\"MsoNormal\"><span>0\n<span class=\"SpellE\">0</span> <span class=\"SpellE\">0</span></span></p>\n\n<p class=\"MsoNormal\"><b><span>Output:</span></b><span></span></p>\n\n<p class=\"MsoNormal\"><span>Test\n1</span></p>\n\n<p class=\"MsoNormal\"><span class=\"GramE\"><span>impossible</span></span><span></span></p>\n\n<p class=\"MsoNormal\"><span>Test\n2</span></p>\n\n<p class=\"MsoNormal\"><span>#o\n#o .o</span></p>\n\n<p class=\"MsoNormal\"><span>#.\n.# ##</span></p>\n\n<p class=\"MsoNormal\"><span>Test\n3</span></p>\n\n<p class=\"MsoNormal\"><span>.#.\n<span class=\"GramE\">.o. #o. <span class=\"SpellE\">oo</span>.</span> <span class=\"GramE\">o</span>.#</span></p>\n\n<p class=\"MsoNormal\"><span>#.<span class=\"GramE\">o .#</span>. ..<span class=\"GramE\">o ..o</span> <span class=\"SpellE\">o.o</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.o<span class=\"GramE\">. .</span>o. #o. <span class=\"SpellE\">ooo</span></span></p>\n\n<p class=\"MsoNormal\"><span class=\"SpellE\"><span>o.o</span></span><span>\n.o. #<span class=\"GramE\">..</span> ..<span class=\"GramE\">o ..o</span></span></p>\n\n<p class=\"MsoNormal\"><span>.o<span class=\"GramE\">. .</span>o. <span class=\"SpellE\"><span class=\"GramE\">ooo</span></span>\n#o. ..<span class=\"GramE\">o</span></span></p>\n\n<p class=\"MsoNormal\"><span>Test\n4</span></p>\n\n<p class=\"MsoNormal\"><span>.#..</span></p>\n\n<p class=\"MsoNormal\"><span>...o</span></p>\n\n<p class=\"MsoNormal\">\u00a0</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "30-03-2010",
    "is_direct_submittable": false,
    "contest_name": "DreamSpark Contest 3",
    "languages_supported": "C, JAVA, PYTH, CS2, PAS fpc, PAS gpc, RUBY, PHP, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TEXT",
    "todo": false,
    "time": {
        "view_start_date": 1272112200,
        "end_date": 1272306540,
        "practice_submission_allowed": true,
        "visible_start_date": 1272306540,
        "submit_start_date": 1272112200,
        "current": 1537439589
    },
    "problem_author_html_handle": "ganesha",
    "problem_name": "DOUBLE VISION",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/ganesha'>ganesha</a>",
    "problem_tester_html_handle": "",
    "problem_author": "ganesha",
    "contest_code": "DSPC30",
    "max_timelimit": "0.24",
    "problem_code": "DSPC310"
}