{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>You are given an integer $C$ and an array $A$ = $A_1, A_2, \\ldots, A_N$ which has distinct positive integers. It is guaranteed that $A_i \\leq C$ for $1 \\leq i \\leq N$. You have an infinite supply of coins of denomination $A_i$ for $1 \\leq i \\leq N$. You have another array $W = W_1, W_2, \\ldots W_N$. This denotes that a single coin of denomination $A_i$ has a weight of $W_i$.\n\nYou are given $M$ queries: $Q_1, Q_2, \\ldots, Q_M$. You need to get a collection of coins, such that their values add up to exactly $Q_i$ (ie. sum of denominations), and the sum of their weights is minimized. Output this minimum weight, or say that it is impossible to get exactly a sum of $Q_i$. As the minimum weight could be huge, output it module $10^9 +7$.\n\n###Input:\n\n- The first line of the input contains three integers: $N$, $C$ and $M$.\n- The i-th of the next $N$ lines contains two numbers $A_i$ and $W_i$, which have been described above.\n- The i-th of the next $M$ lines contains a single integer: $Q_i$.\n\n###Output:\n- $M$ lines, each of which should contain a single integer. If it is possible to achieve the queried value, then your output should be the remainder when the minimum total weight is divided by $10^9 + 7$.\n- If it is not possible to achieve the exact value in the query, print $-1$. Note that we do not take modulo anything here.\n\n###Constraints \n- $1 \\leq N \\leq C \\leq 100$\n- $1 \\leq M \\leq 10^6$\n- $1 \\leq A_i \\leq C$\n- $A_i \\neq A_j$, if $i \\neq j$\n- $1 \\leq W_i \\leq 10^9$\n- $1 \\leq Q_i \\leq 10^{18}$\n\n###Subtasks\n- 12 points : $1 \\leq Q_i \\leq 10^6$\n- 88 points : No further constraints.\n\n###Sample Input:\n\t3 100 2\n\t2 50\n\t8 1\n\t3 40\n\t9\n\t7\n\t\n###Sample Output:\n\t120\n\t140\n\t\n###Explanation:\nYou can get a total value of $9$ by taking three coins of denomination $3$. Their total weight comes to $3 * 40 = 120$. You can check that you cannot do better than this.\n\nYou can get a total value of $7$ by taking two coins of denomination $2$ and one coin of denomination $3$ ($(2 * 2) + 3 = 7$). Their total weight comes to $(2 * 50) + 40 = 140$. You can check that you cannot do better than this.",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "24-06-2018",
    "is_direct_submittable": false,
    "contest_name": "Replay of Indian IOITC 2018 #2 (Rated)",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, LISP sbcl, LISP clisp, SCM guile, ERL, TCL, kotlin, TEXT, SCM chicken, FS",
    "todo": false,
    "time": {
        "view_start_date": 1532179800,
        "end_date": 1532197800,
        "practice_submission_allowed": true,
        "visible_start_date": 1532197800,
        "submit_start_date": 1532179800,
        "current": 1537432267
    },
    "problem_author_html_handle": "admin3",
    "problem_name": "Coin Denominations",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin3'>admin3</a>",
    "problem_tester_html_handle": "",
    "problem_author": "admin3",
    "contest_code": "IOITC182",
    "max_timelimit": "3",
    "problem_code": "COINDENO"
}