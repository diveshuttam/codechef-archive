{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<h3>Problem description.</h3>\n<p>Given a Directed graph. Each edge has 2 components <b>XValue</b> and <b>YValue</b>.\n<b>ZValue</b> for a cycle is defined as (<b>Sum of XValues of all edges in a cycle)/(Sum of YValues of all edges in a cycle</b>)\n\nPrint the Maximum Integer <b>A</b> such that <b>A</b> = <b>ceil(ZValue) - 1</b> amongst all the cycles. Refer <a href = 'https://en.wikipedia.org/wiki/Floor_and_ceiling_functions'>this</a> for ceil(x).<br>\n    \nIf The Graph has no Cycle Print 0.\n <br>\nNote:- \n<br>You may assume that there are no Multiple Edges and Self Loops.\u00a0</p>\n\n\n<h3>Input</h3>\n<p>Input starts with an integer <b>T</b>, denoting the number of test cases.\n\nEach case starts with two integers <b>N</b>, <b>M</b>. <b>N</b> and <b>M</b> represents the number of vertices, number of edges respectively. Then <b>M</b> lines follow. Each line contains four integers <b>xi, yi, Xi, Yi</b>. <b>(xi, yi)</b> represents directed edge from vertex <b>xi to yi</b>. <b>Xi and Yi</b> are the <b>Xvalues</b> and <b>Yvalues</b> of the edges respectively. </p>\n\n<h3>Output</h3>\n<p>\u00a0Print the maximum value of <b>A</b> amongst all the cycles in a new line.</p>\n\n<h3>Constraints</h3>\n<p>Should contain all the constraints on the input data that you may have. Format it like:</p>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>40</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>100</b></li>\n<li><b>1</b> \u2264 <b>M</b> \u2264 <b>1000</b></li>\n<li><b>1</b> \u2264 <b>Xi, Yi</b> \u2264 <b>5000</b></li>\n<li><b>0</b> \u2264 <b>xi,yi</b> \u2264 <b>N-1</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n4 4\n0 1 5 1\n1 2 5 1\n2 3 6 1\n3 0 7 1\n\n<b>Output:</b>\n5\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p><b>Self Explanatory</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "15-03-2018",
    "is_direct_submittable": false,
    "contest_name": "Codenigma",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, LISP sbcl, LISP clisp, SCM guile, ERL, TCL, kotlin, TEXT, SCM chicken, FS",
    "todo": false,
    "time": {
        "view_start_date": 1521214200,
        "end_date": 1521300600,
        "practice_submission_allowed": true,
        "visible_start_date": 1521300600,
        "submit_start_date": 1521214200,
        "current": 1537432802
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>sidhuking07</span>",
    "problem_name": "Z Value",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/sidhuking07'>sidhuking07</a>",
    "problem_tester_html_handle": "",
    "problem_author": "sidhuking07",
    "contest_code": "CODN2018",
    "max_timelimit": "4",
    "problem_code": "ZVAL"
}