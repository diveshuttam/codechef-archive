{
    "problem_code": "JACKPOT",
    "problem_author": "admin",
    "contest_name": "ACM-ICPC Asia-Kharagpur Site First Round Online Contest 2013",
    "todo": false,
    "problem_author_html_handle": "admin",
    "problem_name": "Jackpot",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>gamabunta</span>",
    "contest_code": "ACMKGP13",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/acmkgp13'>acmkgp13</a>, <a class='problem-tag-small ' href='/tags/problems/ad-hoc'>ad-hoc</a>, <a class='problem-tag-small ' href='/tags/problems/admin'>admin</a>, <a class='problem-tag-small ' href='/tags/problems/medium'>medium</a>, <a class='problem-tag-small ' href='/tags/problems/simple-math'>simple-math</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>A certain business farm has introduced a loyalty program.</p>\n<p>At the time of registration to the loyalty program, a customer is given 1 point. The points will get upgraded after the first new purchase every week. After such purchase, the customer can select between the following two policies to upgrade points:</p>\n<ul>\n<li>Get exactly 1 more point</li>\n<li>Double the points that he/she has</li>\n</ul>\n\n<p>For example, if the customer had 43 points before a purchase, he/she can upgrade it to 44 or 86, depending upon points upgrade policy of their choosing.</p>\n<p>At the time of registration, each customer is also given a <b>Jackpot</b> target. Special facilities will be provided to the customer if the accumulated points of the customer become equal to this Jackpot. However, accumulating points more or less than the Jackpot does not earn them anything.</p>\n<p>For example, for a customer with Jackpot target 437, special facilities will be provided if and only if his/her points becomes exactly equal to 437 after some purchases.</p>\n<p>Of course the simplest plan that may be adopted by the customer is to increment his points by 1 after each purchase. However, an intelligent customer would like to achieve the Jackpot score in the minimum number of purchases.</p>\n<p>Even still, for a single customer, the number of weeks in which he gets the Jackpot will be equal to the number of purchases, since only the first purchase in a week qualifies towards upgrade of points.</p>\n<p>The most intelligent customer of all would partner with a friend and try to merge their points in the end. Of course this is better because this means that fewer weeks will be necessary to achieve the Jackpot. Alice and Bob are going to use this strategy. They will decide a sub-target score for themselves (which may be different for each of them) and try to reach that sub-target in the fewest number of weeks (at the rate of one purchase per week). Once both of them reach that sub-target, they will merge their points to achieve Alice's Jackpot target! See the Explanation Section for clarification.</p>\n<p>Write a program that takes as input Alice's Jackpot score and outputs the minimum number of weeks Alice and Bob take to achieve the Jackpot score. Note that Alice and Bob will never merge their scores in between. They will only merge their scores once they reach the respective sub-targets they decide for themselves.</p>\n<h3>Input</h3>\n<p>The first line of input contains the number T, the number of test case. Each test case contains a single integer N, Alice's Jackpot target.</p>\n<h3>Output</h3>\n<p>For each test case, output a single line containing the number W, the minimum number of weeks necessary for Alice and Bob to achieve Alice's Jackpot target.</p>\n<h3>Constraints</h3>\n<pre>\n1 \u2264 T \u2264 1000\n2 \u2264 N \u2264 1000000000\n\n</pre><h3>Sample Input</h3>\n<pre>\n4\n2\n4\n10\n55\n\n</pre><h3>Sample Output</h3>\n<pre>\n0\n1\n3\n6\n\n</pre><h3>Explanation</h3>\n<p>In the first example, Alice and Bob have already reached the target. In the second example, they both choose the sub-target 2 and achieve it in 1 week by making one purchase each. Their merged score then becomes equal to 4. In the last example, Alice chooses to reach 8 and Bob chooses to reach 2. Alice can reach 8 in 3 weeks and Bob reaches 2 in 1 week. Thus, they achieve their target 10, in 3 weeks (bottlenecked on Alice). There are more ways to split the target to still achieve it in 3 weeks, but there is no way to split the target among them to achieve it in 2 weeks. Hence, the answer is 3.</p>\n<p>In the last test case, Alice and Bob can split the target as 36 and 19. 36 can be achieved Alice in 6 purchases (or weeks). 19 can be achieved by Bob in 6 purchases (or weeks). Hence, the answer is 6. Of course there are other ways, but there is no way that can achieve this in fewer than 6 weeks.</p>\n",
    "category_name": "main",
    "date_added": "28-10-2013",
    "status": "success",
    "languages_supported": "C, JAVA, GO",
    "max_timelimit": "2",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/JACKPOT",
    "problem_tester": "gamabunta",
    "time": {
        "view_start_date": 1383370200,
        "end_date": 1383378000,
        "practice_submission_allowed": true,
        "visible_start_date": 1383378000,
        "submit_start_date": 1383370200,
        "current": 1537438044
    },
    "user": {
        "username": ""
    }
}