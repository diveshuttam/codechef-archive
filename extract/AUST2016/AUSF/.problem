{
    "problem_code": "AUSF",
    "problem_author": "shakilaust",
    "contest_name": "Intra AUST Programming Contest Fall 2015",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>shakilaust</span>",
    "problem_name": "Social Network",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "AUST2016",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/aust2016'>aust2016</a>, <a class='problem-tag-small ' href='/tags/problems/dsu'>dsu</a>, <a class='problem-tag-small ' href='/tags/problems/shakilaust'>shakilaust</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p>Fahim is going to make a social network which is now under construction. There are two ways to make friends in social network.</p>\n<p>\u00a0Type 1: Any person goes to his / her friend list then choose a friend and search his / her friend list (this website is under construction so friend list is public). From there he can choose a person and give him/her a friend request or go to his / her friend list and repeat this. </p>\n<p> Type 2: Search a random user by typing his / her name and give him / her friend request.</p>\n<p> Now Fahim wants a track of friendships formed by <b> Type 1 </b> and <b> Type 2.</b> When two people become friends, check whether it is possible by Type 1 method. If yes, then report \u201cFound in friend list\u201d otherwise report \u201cFound by random\u201d.<br />\nAs he is lazy, he is asking your help to do this job.\n</p>\n\n<h3>Input</h3>\n<p>The first line contains <b> Query Q (Q &lt;= 100000). </b><br />\nNext Q line contains two names who become friends <b> A, B. A </b> sends <b> B </b> a friend request.</p>\n<p><b> 0 &lt; Length of each name &lt;= 10 </b><br />\n<b> 0 &lt; Sum of length of all names &lt;= 1000000 </b> </p>\n<h3>Output</h3>\n<p>Output for each query in a separate line, print \u201cFound in friend list\u201d if it is possible in <b> Type 1 </b> method otherwise print  \u201cFound by random\u201d..</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n3\nA B\nA C\nB C\n\n\n\n<b>Output:</b> \n\nFound by random\nFound by random\nFound in friend list\n</pre><p>\u00a0</p>\n",
    "category_name": "main",
    "date_added": "15-01-2016",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/AUSF",
    "problem_tester": null,
    "time": {
        "view_start_date": 1453467600,
        "end_date": 1453482000,
        "practice_submission_allowed": true,
        "visible_start_date": 1453482000,
        "submit_start_date": 1453467600,
        "current": 1537435637
    },
    "user": {
        "username": ""
    }
}