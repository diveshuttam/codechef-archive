{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>A company has N (Numbered 1 - N) offices and each office belongs to one of their M (numbered 1 - M) different departments. The offices follow a tree hierarchy where each office has a supervising office. We define the Kth supervising office as the Kth ancestor of the current office.<br><br>\n\nAn important activity in the company is the transfer of documents between two offices. These two offices always belong to the same department and the sending office sends the document to its x-supervising office where x is any positive integer. If the x-supervising office of the sending office does not belong to the same department, it sends the document to an office of its department that is atleast an x-supervising office i.e. an office of the same department that lies above the x-supervising office.<br><br>\n\nYour task is simple, given queries of the form : \"u v\", print the minimum distance that the document will travel when sent from the office with index u to an atleast v-supervising office of the same department.<br><br>\n\nFor the input, you will be given \"p v\" instead of \"u v\" where u = 1 + ( (p ^ previous_ans)%n +n) %n.<br><br>\n\nFor the first query of every test case assume previous_ans = 0.<br><br>\n\nUpdate: Previous answer is taken as -1 if the previous output was -1. <br> <br>\n\nNOTE: Office 1 is the head office and the hierarchy is defined with respect to the DFS order from this office.\n\n\n</p>\n\n\n<h3>Input</h3>\n<p>\n\n</p>\n\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</li>\n<li>The first line contains the numbers N and M and Q denoting the number of offices and the number of departments and the number of queries respectively.</li>\n<li>The next line contains N spaced integers where the i<sub>th</sub> integer denotes the type of department of the i<sub>th</sub> office.</li>\n<li>The next N - 1 line denotes the N - 1 relationships between offices of the form  \"x y\" which means x and y are connected and distance between them is 1 unit. </li>\n<li> The next Q lines contains information about the queries in the form \"p v\" as explained above\"</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p>For each query print the minimum distance between the node u and an office of the same department that is atleast a v-supervising office for u. If no such node exists, print -1.\u00a0</p>\n\n<h3>Constraints</h3>\n<p>Should contain all the constraints on the input data that you may have. Format it like:</p>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>10</b></li>\n<li>1 <= N, M <= 50 000</li>\n<li>1 <= Q <= 75 000</li>\n<li>1 <= X, Y <= N</li>\n<li>1 <= P, V <= 50 000</li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n7 2 2\n1 2 1 2 1 2 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n6 2\n7 1\n\n<b>Output:</b>\n2\n2\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p>\nFor the first query u becomes 7 and node 5 is the corresponding office where it will send its document to. Therefore, the distance between them is 2.<br><br>\nFor the second query u becomes 6 and node 4 is the corresponding office where it will send its document to. Therefore, the distance between them is 2.\n</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "14-10-2017",
    "is_direct_submittable": false,
    "contest_name": "Atmos CodeJam Qualifiers",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1508079600,
        "end_date": 1508090400,
        "practice_submission_allowed": true,
        "visible_start_date": 1508090400,
        "submit_start_date": 1508079600,
        "current": 1537433453
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>rock7lee</span>",
    "problem_name": "Office play",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/rock7lee'>rock7lee</a>",
    "problem_tester_html_handle": "",
    "problem_author": "rock7lee",
    "contest_code": "ACJQ2017",
    "max_timelimit": "3",
    "problem_code": "ATM0Q8"
}