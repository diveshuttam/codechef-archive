{
    "problem_code": "CHEFCHR",
    "problem_author": "shivam010",
    "contest_name": "February Challenge 2018",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>shivam010</span>",
    "problem_name": "Chef And His Characters",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>r_64</span>",
    "contest_code": "FEB18",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cakewalk'>cakewalk</a>, <a class='problem-tag-small ' href='/tags/problems/feb18'>feb18</a>, <a class='problem-tag-small ' href='/tags/problems/shivam010'>shivam010</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Read problems statements in <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/FEB18/mandarin/CHEFCHR.pdf\">Mandarin chinese</a>, <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/FEB18/russian/CHEFCHR.pdf\">Russian</a> and <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/FEB18/vietnamese/CHEFCHR.pdf\">Vietnamese</a> as well.</h3>\n\n<p>Chef was reading a book. He decided to highlight all the lovely sentences of the book. He calls a sentence a <i>lovely</i> sentence if, after removing all the non-alphabetical characters (like punctuation and spaces) from it and converting all uppercase letters to lowercase, it is possible to choose <b>four contiguous characters</b> from the sentence and reorder them to create the string \u201cchef\u201d.</p>\n\n<p>Chef has almost completed the highlighting work, only a few sentences are left to be checked and highlighted. Now, he wants your help in checking the remaining sentences, as he has to help his mother in the kitchen.</p>\n\n<p>Each sentence <b>s</b> has already been preprocessed \u2014 all non-alphabetical characters have been erased and all remaining uppercase characters converted to lowercase. You should determine whether <b>s</b> is a lovely sentence or not. If it is a lovely sentence, then Chef is also interested in the number of possible ways to select 4 contiguous characters that can be reordered to give his name (the string \"chef\").</p>\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</li>\n<li>The first and only line of each test case contains a single string <b>s</b>, denoting a preprocessed sentence.</li>\n</ul>\n\n<h3>Output</h3>\n<ul>\n<li>For each test case, print a single line.</li>\n<li>If the string <b>s</b> is not a lovely string, this line should contain a single string <tt>\u201cnormal\u201d</tt> (without quotes).</li>\n<li>Otherwise, it should contain the string <tt>\u201dlovely\u201d</tt> (without quotes) followed by one integer \u2014 the number of ways to select the four contiguous characters.</li>\n</ul>\n\n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>T</b> \u2264 200,000</li>\n<li>1 \u2264 <b>|s|</b> \u2264 500,000</li>\n<li>sum of <b>|s|</b> for all test cases \u2264 2,000,000</li>\n<li><b>s</b> contains only lowercase English letters</li>\n</ul>\n\n<h3>Subtasks</h3>\n<p>\n<b>Subtask #1 (20 points):</b> 1 \u2264 <b>|s|</b> \u2264 2000\n</p>\n\n<p>\n<b>Subtask #2 (80 points):</b> original constraints\n</p>\n\n<h3>Example</h3>\n<pre>\n<b>Input:</b>\n\n5\nifchefisgoodforchess\nfehcaskchefechohisvoice\nhecfisaniceperson\nletscallchefthefch\nchooseaprogrammer\n\n<b>Output:</b>\n\nlovely 2\nlovely 3\nlovely 1\nlovely 3\nnormal\n</pre>\n\n<h3>Explanation</h3>\n<p><b>Example case 1:</b> We can select \u201cfche\u201d (the substring starting at index 2) or \u201cchef\u201d (index 3).</p>\n<p><b>Example case 2:</b> We can select \u201cfehc\u201d (index 1), \u201cchef\u201d (index 8) or \u201cfech\u201d (index 11).</p>\n<p><b>Example case 3:</b> We can only select \u201checf\u201d (index 1).</p>\n<p><b>Example case 4:</b> We can select \u201cchef\u201d (index 9), \u201chefc\u201d (index 14), or \u201cefch\u201d (index 15).</p>\n<p><b>Example case 5:</b> No four contiguous characters can be reordered to form Chef's name.</p>\n",
    "category_name": "main",
    "date_added": "18-01-2018",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/CHEFCHR",
    "problem_tester": "r_64",
    "time": {
        "view_start_date": 1517563800,
        "end_date": 1518427800,
        "practice_submission_allowed": true,
        "visible_start_date": 1518427800,
        "submit_start_date": 1517563800,
        "current": 1537433016
    },
    "user": {
        "username": ""
    }
}