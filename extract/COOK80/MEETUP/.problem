{
    "problem_code": "MEETUP",
    "problem_author": "lg5293",
    "contest_name": "March Cook-Off 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>lg5293</span>",
    "problem_name": "Meeting location",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>errichto</span>",
    "contest_code": "COOK80",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cook80'>cook80</a>, <a class='problem-tag-small ' href='/tags/problems/divide-and-conq'>divide-and-conq</a>, <a class='problem-tag-small ' href='/tags/problems/hard'>hard</a>, <a class='problem-tag-small ' href='/tags/problems/interactive'>interactive</a>, <a class='problem-tag-small ' href='/tags/problems/lg5293'>lg5293</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/COOK80/mandarin/MEETUP.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/COOK80/russian/MEETUP.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/COOK80/vietnamese/MEETUP.pdf\">Vietnamese</a> as well.</h3>\n\n<p>\u00a0\nThis is an interactive problem.\nIt means that every time you output something, you must finish with a newline character and flush the output.\nFor example, in C++ use the fflush(stdout) function, in Java \u2014 call System.out.flush(), in Python \u2014 sys.stdout.flush(), and in Pascal \u2014 flush(output).\nOnly after flushing the output will you be able to read from the input again.\n</p>\n\n<p>\nAlice and Bob are taking a trip to Byteland.\nThe country can be modeled as an undirected graph with <b>n</b> cities and <b>m</b> bidirectional roads.\nThere are at most 1,000 cities, and between 0 and <b>n</b> * (<b>n</b>-1) / 2 roads.\nThe graph is not necessarily connected.\n</p>\n\n<p>\nAlice likes visiting cities that are directly connected.\nShe chose <b>k<sub>a</sub></b> nodes that form a clique (i.e. every pair of cities has a direct road between them).\nBob on the other hand likes to visit cities that are not directly connected.\nHe chose <b>k<sub>b</sub></b> nodes that form an independent set of the graph (i.e. no pair of cities has a direct road between them).\n</p>\n\n<p>\nAlice and Bob would like to know if their itineraries have any common cities.\nThis seemingly simple task is complicated by the fact that Alice and Bob have maps in different languages.\n</p>\n\n<p>\nAlice\u2019s map has the cities with names <b>a</b><sub>1</sub>, <b>a</b><sub>2</sub>, \u2026, <b>a</b><sub><b>n</b></sub>.\nBob\u2019s map has cities with names <b>b</b><sub>1</sub>, <b>b</b><sub>2</sub>, \u2026, <b>b</b><sub><b>n</b></sub>.\nThese names are all distinct.\n</p>\n\n<p>\nLuckily for you, the judge knows how to translate strings between the languages.\nFormally, there is a hidden function f that the judge keeps such that for every i there exists a unique j such that f(<b>a</b><sub>i</sub>) = <b>b</b><sub>j</sub>, and <b>a</b><sub>p</sub>, <b>a</b><sub>q</sub> have a direct edge if and only if f(<b>a</b><sub>p</sub>),f(<b>a</b><sub>q</sub>) have a direct edge.\nWe will denote f<sup>-1</sup>(x) to denote the inverse of the function f.\nIntuitively, f translates strings from language A to language B, and f<sup>-1</sup> translates them from language B to language A.\n</p>\n\n<p>\nTranslating words takes a lot of effort.\nYou would like to help Alice and Bob by translating as few as words as possible.\nYou can ask the judge what the value of f(<b>a</b><sub>i</sub>) is, or what the value of f<sup>-1</sup>(<b>b</b><sub>j</sub>) is.\nYou may only ask the judge at most 10 questions.\nAfter asking questions, you must be able to determine if Alice and Bob will visit any common cities.\nFormally, this means checking whether there exists a city <b>a</b><sub>i</sub> that Alice visits and a city <b>b</b><sub>j</sub> that Bob visits such that f(<b>a</b><sub>i</sub>) = <b>b</b><sub>j</sub>.\n</p>\n\n\n<h3>Input</h3>\n<p>\nThe first line will contain four integers, <b>n, m, k<sub>a</sub>, k<sub>b</sub></b>.\nNext will follow a description of a map in Alice's language, then a description of a map in Bob's language.\n</p>\n\n<p>\nA map can be described as follows:\nThe first line contains n strings.\nThe first <b>k<sub>a</sub></b> (resp <b>k<sub>b</sub></b>) strings denote the cities that Alice (resp Bob) will visit.\nThe next <b>m</b> lines describe an undirected edge between two cities.\n</p>\n\n<h3>Interaction</h3>\n<p>\nTo ask a question, print \u201cA s\u201d to denote you would like to know what f(s) is (s must be one of <b>a</b><sub>1</sub>, <b>a</b><sub>2</sub>, \u2026, <b>a</b><sub><b>n</b></sub>).\nPrint \u201cB s\u201d to denote you would like to know what f<sup>-1</sup>(s) is (s must be one of <b>b</b><sub>1</sub>, <b>b</b><sub>2</sub>, \u2026, <b>b</b><sub><b>n</b></sub>).\nDon't forget to flush the question after printing it.\nThe judge will respond to the question by printing a string denoting the answer to your question.\nYou may ask at most 10 questions.\n</p>\n\n<p>\nOnce you are finished asking questions, and are ready to answer the main question of whether or not Alice and Bob will visit any common cities, print \u201cC s\u201d, where s is either \u201cYes\u201d or \u201cNo\u201d (note, this is case sensitive).\n</p>\n\n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>n</b> \u2264 1000</li>\n<li>0 \u2264 <b>m</b> \u2264 <b>n</b> * (<b>n</b>-1) / 2</li>\n<li>1 \u2264 <b>k<sub>a</sub></b> \u2264 <b>n</b></li>\n<li>1 \u2264 <b>k<sub>b</sub></b> \u2264 <b>n</b></li>\n</ul>\n<p>\u00a0\nThe city names are all distinct and have between 1 and 10 characters, inclusive.\nAll city names consist of only lowercase letters.\nIt is guaranteed that the first <b>k<sub>a</sub></b> cities in Alice's map are a clique, and the first <b>k<sub>b</sub></b> cities in Bob's map are an independent set.\nIt is guaranteed that the maps described are isomorphic according to the hidden function f that the judge has.\n</p>\n\n<h3>Example</h3>\n<pre>\n<table border=\"1\">\n<tr>\n<td>your program</td>     <td>the system</td>\n</tr>\n\n<tr><td></td><td>4 3 1 1\nab bc cd de\nab bc\nbc cd\ncd de\nw y x z\nx w\ny x\ny z</td></tr>\n\n<tr><td>A cd</td><td></td></tr>\n\n<tr><td></td><td>x</td></tr>\n<tr><td>A bc</td><td></td></tr>\n\n<tr><td></td><td>y</td></tr>\n<tr><td>B x</td><td></td></tr>\n\n<tr><td></td><td>cd</td></tr>\n<tr><td>A ab</td><td></td></tr>\n\n<tr><td></td><td>z</td></tr>\n<tr><td>B w</td><td></td></tr>\n\n<tr><td></td><td>de</td></tr>\n<tr><td>C No</td><td></td></tr>\n</table>\n</pre>\n\n<h3>Explanation</h3>\n<p>Here, we have 4 cities and 3 roads. Alice's map has cities with labels \"ab\", \"bc\", \"cd\", \"de\". Bob's map has cities with labels \"w\", \"y\", \"x\", \"z\". Alice visits cities {\"ab\"}. Bob visits cities {\"w\"}. Here, we show an example of the interaction. The translation function in this case is \"ab\" = \"z\", \"bc\" = \"y\", \"cd\" = \"x\", \"de\" = \"w\". In this case, we can see that Alice and Bob don't visit any cities in common, so the final answer is No. </p>",
    "category_name": "main",
    "date_added": "13-03-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "3",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/MEETUP",
    "problem_tester": "errichto",
    "time": {
        "view_start_date": 1489939200,
        "end_date": 1489949100,
        "practice_submission_allowed": true,
        "visible_start_date": 1489949100,
        "submit_start_date": 1489939200,
        "current": 1537433986
    },
    "user": {
        "username": ""
    }
}