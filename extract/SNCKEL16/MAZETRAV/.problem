{
    "problem_code": "MAZETRAV",
    "problem_author": "kevinsogo",
    "contest_name": "SnackDown 2016 Online Elimination Round",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>kevinsogo</span>",
    "problem_name": "Right-hand Rule",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": null,
    "contest_code": "SNCKEL16",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/dynamic-programming'>dynamic-programming</a>, <a class='problem-tag-small ' href='/tags/problems/kevinsogo'>kevinsogo</a>, <a class='problem-tag-small ' href='/tags/problems/lca'>lca</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/snckel16'>snckel16</a>",
    "body": "<h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKEL16/mandarin/MAZETRAV.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKEL16/russian/MAZETRAV.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCKEL16/vietnamese/MAZETRAV.pdf\">Vietnamese</a> as well.</h3>\n<p>Chef made a hedge maze on his rectangular garden. It is rectangular in shape with dimensions <b>R</b> \u00d7 <b>C</b>, where <b>R</b> is the number of rows and <b>C</b> is the number of columns, both in meters, when viewed from the top. It is divided into a grid with <b>R * C</b> individual cells, each of size (<b>1</b> meter) \u00d7 (<b>1</b> meter), and each cell is identified by two integers <b>(i, j)</b> denoting the row and column number of the cell, respectively (<b>1</b> \u2264 <b>i</b> \u2264 <b>R</b> and <b>1</b> \u2264 <b>j</b> \u2264 <b>C</b>).</p>\n<p>You can usually go from any cell to any of its four adjacent cells. However, vertical hedges exist between some pairs of cells, preventing direct movement between them. Also, the maze has the property that there is a unique path between every two cells.</p>\n<p>Chef is currently at cell <b>(i<sub>1</sub>, j<sub>1</sub>)</b> and wants to go to cell <b>(i<sub>2</sub>, j<sub>2</sub>)</b>. Chef recently learned about a maze solving algorithm called the right-hand rule. In this algorithm, Chef first picks one of the four directions to go to, and then proceeds in that direction <b>while keeping his right hand in contact with the wall at all times.</b> This simple algorithm guarantees that Chef will reach any other cell of the maze!</p>\n<p>The following image illustrates this algorithm a few times:</p>\n<p><img src=\"https://www.codechef.com/download/upload/SNCKEL16/mazetrav-final.png\" height=\"160\" /></p>\n<p>Unfortunately, as you can see, this doesn't guarantee that Chef visits the minimum number of cells required! So your goal here is to answer <b>Q</b> queries of the following kind: For a given pair of starting and ending cells <b>(i<sub>1</sub>, j<sub>1</sub>)</b> and <b>(i<sub>2</sub>, j<sub>2</sub>)</b> and an initial direction <tt>U</tt> (up), <tt>D</tt> (down), <tt>L</tt> (left) or <tt>R</tt> (right), determine the number of cells Chef visits if he follows the right-hand rule.</p>\n<p>Notes:</p>\n<ul>\n<li>If there is no wall to the right initially, start the traversal by placing the right-hand on the nearest wall in front and to the right of you. The image illustrates it.</li>\n<li>The right hand only serves as a guide on where to go next. You still face in the direction you're walking.</li>\n</ul>\n<h3>Input</h3>\n<p>The first line of the input contains three space-separated integers <b>R</b>, <b>C</b> and <b>Q</b>.</p>\n<p>The next <b>2R+1</b> lines describe the maze. Each line consists of a string of <b>2C+1</b> characters. Here's how to interpret them:</p>\n<ul>\n<li>For ease of input, blank characters are written as a <tt>.</tt> (dot).</li>\n<li>The <b>2j</b><sup>th</sup> character in the <b>2i</b><sup>th</sup> row represents cell <b>(i, j)</b>, and is guaranteed to be blank.</li>\n<li>Between adjacent cells in the same row, the character <tt>|</tt> indicates that there is a vertical hedge between them.</li>\n<li>Between adjacent cells in the same column, the character <tt>-</tt> indicates that there is a vertical hedge between them.</li>\n<li>A blank character between adjacent cells means that there is no vertical hedge between them.</li>\n<li>The characters at the boundary represents the boundary hedges of the maze. It is guaranteed that there's no way out of the maze.</li>\n<li>The <tt>+</tt> character represents corners of the cells.</li>\n</ul>\n<p>The <b>Q</b> lines following the maze represents the queries. Each query contains four integers and a character, separated by single-spaces: <b>i<sub>1</sub></b>, <b>j<sub>1</sub></b>, <b>i<sub>2</sub></b>, <b>j<sub>2</sub></b>, <b>dir</b>, representing the starting and ending cells and the initial direction.</p>\n<h3>Output</h3>\n<p>For each query, output a single line containing an integer, the number of cells Chef visits if he follows the right-hand rule.</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>R</b>, <b>C</b> \u2264 <b>10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>Q</b> \u2264 <b>10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>R\u00d7C</b> \u2264 <b>5\u00d710<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>i<sub>1</sub></b>, <b>i<sub>2</sub></b> \u2264 <b>R</b></li>\n<li><b>1</b> \u2264 <b>j<sub>1</sub></b>, <b>j<sub>2</sub></b> \u2264 <b>C</b></li>\n<li><b>dir</b> is one of: <tt>U</tt>, <tt>D</tt>, <tt>L</tt> or <tt>R</tt></li>\n<li><b>(i<sub>1</sub>, j<sub>1</sub>)</b> \u2260 <b>(i<sub>2</sub>, j<sub>2</sub>)</b></li>\n<li>There is a unique path between any two cells.</li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n<tt>6 7 10\n+-+-+-+-+-+-+-+\n|.|.....|.....|\n+.+-+.+-+.+-+.+\n|...|.|.|...|.|\n+-+.+.+.+-+.+-+\n|.........|...|\n+.+.+.+.+-+.+.+\n|.|.|.|.|...|.|\n+-+.+-+.+.+-+.+\n|...|...|...|.|\n+.+.+.+-+-+-+.+\n|.|.|.........|\n+-+-+-+-+-+-+-+\n3 4 2 7 D\n3 2 3 4 R\n3 2 3 4 D\n3 2 3 4 L\n3 2 3 4 U\n1 4 2 4 R\n1 4 2 4 D\n1 4 2 4 L\n1 4 2 4 U\n2 3 2 4 R</tt>\n\n<b>Output:</b>\n<tt>19\n4\n9\n11\n14\n42\n42\n42\n42\n42\n</tt>\n</pre><h3>Explanation</h3>\n<p>The sample input represents the maze in the image above, and the answer to the first and third queries are also illustrated in the image.</p>\n",
    "category_name": "main",
    "date_added": "7-06-2016",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/MAZETRAV",
    "problem_tester": "kingofnumbers,antoniuk1,xcwgf666,kevinsogo",
    "time": {
        "view_start_date": 1466344800,
        "end_date": 1466362800,
        "practice_submission_allowed": true,
        "visible_start_date": 1777445151,
        "submit_start_date": 1466344800,
        "current": 1537434820
    },
    "user": {
        "username": ""
    }
}