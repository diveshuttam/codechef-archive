{
    "problem_code": "QGRID",
    "problem_author": "r_64",
    "contest_name": "September Challenge 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>r_64</span>",
    "problem_name": "Querying on a Grid",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "jingbo_adm",
    "contest_code": "SEPT17",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/divide-and-conq'>divide-and-conq</a>, <a class='problem-tag-small ' href='/tags/problems/hard'>hard</a>, <a class='problem-tag-small ' href='/tags/problems/r_64'>r_64</a>, <a class='problem-tag-small ' href='/tags/problems/sept17'>sept17</a>, <a class='problem-tag-small ' href='/tags/problems/shortest-path'>shortest-path</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Read problems statements in <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/SEPT17/mandarin/QGRID.pdf\">mandarin chinese</a>, <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/SEPT17/russian/QGRID.pdf\">russian</a> and <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/SEPT17/vietnamese/QGRID.pdf\">vietnamese</a> as well.</h3>\n\n<p>Chef is helping out at a volunteering center for teaching. A child comes to Chef with a problem that he is not able to solve and asks Chef for his help. The problem is the following:   </p>\n\n<p> Consider an <b>M \u00d7 N</b> grid graph. The vertices in the grid graph are identified by its row and column number, i.e., for a vertex there are two numbers <b>(i,j)</b> associated with it, where <b>1 \u2264 i \u2264 M</b> is its row, and <b>1 \u2264 j \u2264 N</b> is its column. There are two types of edges in a grid graph(note that all edges are bidirectional) :</p>\n<ul>\n\t<li>When <b>i &lt; M</b>, there is an edge of weight <b>down(i, j)</b> connecting <b>(i, j)</b> and <b>(i+1, j)</b>;</li>\n\t<li>When <b>j &lt; N</b>, there is an edge of weight <b>right(i, j)</b> connecting <b>(i, j)</b> and <b>(i, j+1)</b>.</li>\n</ul>\n<p>\n\tInitially, every vertex has a weight of zero.</p>\n<p>\n\tDefine the length of a path to be the sum of weights of all the edges in this path. The shortest path between <b>(i1, j1)</b> and <b>(i2, j2)</b> is the path with the minimum length. Of course, the weights associated with vertices doesn't influence shortest paths at all.</p>\n<p>\nThe task in the problem is to process the following 2 types of queries on this graph efficiently :</p>\n<ul>\n\t<li><b>i1</b> <b>j1</b> <b>i2</b> <b>j2</b> <b>c</b> : add <b>c</b> to the weights of all vertices in the shortest path between <b>(i1, j1)</b> and <b>(i2, j2)</b>.</li>\n\t<li><b>i</b> <b>j</b> : return the weight of vertex <b>(i, j)</b>.</li>\n</ul>\n\n<p>Chef is confused with the problem but he wants to help the child. Can you help Chef with this problem?</p>\n\n<h3>Input</h3>\n<p>\nThe first line contains three integers <b>M, N, Q</b>. <b>M</b> and <b>N</b> denotes the graph's size; <b>Q</b> denotes the number of queries.</p>\n<p>Next <b>M - 1</b> lines, each line contains <b>N</b> numbers. The <b>j</b>-th number in the <b>i</b>-th line in this part(i.e., the <b>(i + 1)</b>-th line in total) denotes <b>down(i, j)</b>.</p>\n<p>Next <b>M</b> lines, each line contains <b>N - 1</b> numbers. The <b>j</b>-th number in the <b>i</b>-th line in this part(i.e., the <b>(i + M)</b>-th line in total) denotes <b>right(i, j)</b>.</p>\n<p>Next <b>Q</b> lines, each line contains 3 or 6 numbers, denoting a query.</p>\n\n<h3>Output</h3>\n<p>For each query of type 2, output the weight of required vertex.</p>\n\n<h3>Constraints</h3>\n<ul>\n\t<li><b>1</b> \u2264 <b>M</b> \u2264 <b>3</b></li>\n\t<li><b>1</b> \u2264 <b>N</b> \u2264 <b>10<sup>5</sup></b></li>\n\t<li><b>1</b> \u2264 <b>Q</b> \u2264 <b>10<sup>5</sup></b></li>\n\t<li><b>1</b> \u2264 <b>down(i,j), right(i,j)</b> \u2264 <b>10<sup>12</sup></b></li>\n\t<li>In type 1 query :\n\t\t<ul>\n\t\t\t<li><b>1</b> \u2264 <b>i1, i2</b> \u2264 <b>M</b></li>\n\t\t\t<li><b>1</b> \u2264 <b>j1, j2</b> \u2264 <b>N</b></li>\n\t\t\t<li><b>1</b> \u2264 <b>c</b> \u2264 <b>10<sup>13</sup></b></li>\n\t\t\t<li>The shortest path between <b>(i1, j1)</b> and <b>(i2, j2)</b> is <b>unique</b>.</li>\n\t\t</ul>\n\t</li>\n\t<li>In type 2 query :\n\t\t<ul>\n\t\t\t<li><b>1</b> \u2264 <b>i</b> \u2264 <b>M</b></li>\n\t\t\t<li><b>1</b> \u2264 <b>j</b> \u2264 <b>N</b></li>\n\t\t</ul>\n\t</li>\n</ul>\n\n<h3>Subtasks</h3>\n<ul>\n\t<li><b>Subtask #1 (6 points)</b>: <b>N, Q \u2264 10<sup>3</sup></b></li>\n\t<li><b>Subtask #2: (11 points)</b>: <b>M = 1</b>.</li>\n\t<li><b>Subtask #3: (30 points)</b>: <b>M = 2</b>.</li>\n\t<li><b>Subtask #4: (24 points)</b>: \t\n\t\t<ul>\n\t\t\t<li><b>down(i,j)</b> and <b>right(i,j)</b> are uniformly randomly generated from <b>[1,3 \u00d7 10<sup>10</sup>]</b>.</li>\n\t\t\t<li>Queries are also randomly generated.</li>\n\t\t\t<li>There is only one test file for this subtask.</li>\n\t\t</ul>\n\t</li>\n\t<li><b>Subtask #5: (29 points):</b>: Original Constraints</li>\n</ul>\n\n<h3>Example</h3>\n<pre>\n<b>Input:</b>\n3 3 11\n1 1 5\n2 10 6\n1 4\n1 13\n6 5\n1 2 2 3 3 1\n1 2 2 1 3 2\n2 1 1\n2 1 2\n2 1 3\n2 2 1\n2 2 2\n2 2 3\n2 3 1\n2 3 2\n2 3 3\n\n<b>Output:</b>\n0\n2\n2\n1\n3\n0\n1\n1\n1\n\n</pre>\n<h3>\n\tExplanation</h3>\n<p>\n\t<b>Example case 1.</b> See picture below.</p>\n<p>\n\t<img alt=\"\" src=\"https://codechef_shared.s3.amazonaws.com/upfiles/QGRID_sample_explanation_mfpOHUo4Bq.png\" style=\"width: 150px; height: 150px;\"/></p>\n<p>\n\tThe shortest path between (2,2) and (3,3) is (2,2)->(2,1)->(3,1)->(3,2)->(3,3). We add 1 to these 5 vertices.</p>\n<p>\n\tThe shortest path between (2,2) and (1,3) is (2,2)->(1,2)->(1,3). We add 2 to these 3 vertices.</p>\n<p>\n\tNote that the shortest path between (1,1) and (2,2) is not unique. However, the queried paths are (2,2)-(3,3) and (2,2)-(1,3), and the shortest paths of these pairs of points are unique, so this data is valid.</p>\n",
    "category_name": "main",
    "date_added": "6-08-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "7",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/QGRID",
    "problem_tester": "jingbo_adm",
    "time": {
        "view_start_date": 1504258200,
        "end_date": 1505122200,
        "practice_submission_allowed": true,
        "visible_start_date": 1505122200,
        "submit_start_date": 1504258200,
        "current": 1537433574
    },
    "user": {
        "username": ""
    }
}