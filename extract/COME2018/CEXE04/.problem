{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>You are given an array $arr$ with $n$ integers. You are asked to execute a maximum of $q$ queries of the following kind: print the $GCD$ of the elements in the array located between indices $l$ and $r$ (one-indexed), both inclusive. However, you will not be given $l$ and $r$ for each query. Instead, you will be given 5 integers $l_0$, $r_0$, $k_0$, $k_1$ and $v_0$. For the first query, $l=l_0$, $r=r_0$. For subsequent queries, the indices $l$ and $r$ should be generated using the following code:\n```\n//l and r currently hold their respective values from the previous query\nif((ans^v0)%2==1)               //ans is the output of the previous query\n\tl0=l+(ans^(l+r)^l)%k0;   \nelse\n\tl0=l;\nr0=r+(ans^(r+l)^r)%k1;\nif(l0==l and r0==r){\n\tl0++;\n}\n```\n`if(l0`>`r0){`\n```\n\tswap(l0,r0);\n}\nl=l0; r=r0;\n```\n(The code is in C++; '^' denotes the XOR operator and '%' denotes the modulo operator)\n\nYou must keep generating and answering queries until either the maximum number of queries $q$ is reached or the indices go out of bounds (specifically if $r>n$). Solve the queries quickly!\n\n###Input:\n- The first line of the input contains two space separated integers $n$ and $q$ denoting the number of elements in $arr$ and the maximum number of queries respectively. \n- The second line of the input contains $n$ space-separated integers $arr_1, arr_2, ..., arr_n$ denoting the values of the elements of the array.\n- The third line contains 5 space-separated integers $l_0$, $r_0$, $k_0$, $k_1$ and $v_0$, where each of these integers are described in the problem statement above.\n\n###Output:\nFor each query, output in a single line an integer corresponding to the $GCD$ of the elements from index $l$ to index $r$.\nAs mentioned earlier, you must keep answering queries either till $q$ queries are reached or till one of the indices goes out of bounds.\n\n###Constraints \n- $1 \\leq n \\leq 10^6$\n- $1 \\leq q \\leq 10^6+10$\n- $1 \\leq arr_i \\leq 10^9$\n- $1 \\leq l_0, r_0, k_0, k_1 \\leq n$\n- $l_0 \\leq r_0$\n- $1 \\leq v_0 \\leq 10^8$\n\n###Sample Input:\n\t5 5\n\t2 4 8 16 32\n\t2 3 5 4 21\n\n###Sample Output:\n\t4\n\t32\n\n###Explanation:\nInitially, $l=2$ and $r=3$. Therefore, answer for the first query is $GCD(arr_2, arr_3) = GCD(4, 8) = 4$. \nAfter following the procedure to generate a new query, now $l=5$ and $r=5$. Therefore, answer for the second query is $arr_5 = 32$.\nFor the next query, $l=7$ and $r=8$. We have gone outside the bounds of the array, so we stop answering queries. ",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "6-04-2018",
    "is_direct_submittable": false,
    "contest_name": "comp.exe",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1523460600,
        "end_date": 1523467800,
        "practice_submission_allowed": true,
        "visible_start_date": 1523467800,
        "submit_start_date": 1523460600,
        "current": 1537432641
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>teja349</span>",
    "problem_name": "GCD Queries",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/teja349'>teja349</a>",
    "problem_tester_html_handle": "",
    "problem_author": "teja349",
    "contest_code": "COME2018",
    "max_timelimit": "1",
    "problem_code": "CEXE04"
}