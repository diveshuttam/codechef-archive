{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>To buy the tickets for the opening IPL match between CSK and MI, fans are waiting in multiple queues. The police officers present at the scene want to make all the queues into one single queue which would lead to the fans getting agitated. The police know that they can\u2019t save the situation alone so they ask Prof. Kamakoti for help. Prof Kamakoti goes about modelling the situation as follows\u2026\n\nLet $n$ be the number of queues. The queues are numbered from 1 to $n$. The $i^{th}$ queue contains $m_i$ fans. The police are allowed to cyclically rotate each queue as they wish (other permutations are not allowed to avoid too much confusion). Depending on the level of frustration, an \"agitation value\" and \"temper value\" is assigned to each fan. To form a single queue, the existing queues (after possibly cyclically rotating them). are joined one after the other, in order of their numbering. Note that a queue can be cyclically rotated only before joining it to any other queues. The net agitation level of the final queue is calculated as follows: for queues $q_i$ and $q_{i+1}$, let the agitation value of the last fan in the $i^{th}$ queue be $x_1$, the temper value of the last fan in the $i^{th}$ queue be $y_1$ and the agitation value of the first fan in the $i+1^{th}$ queue be $x_2$. Then, the contribution to the net agitation level of the final queue will be $y_1 \\times |x_1 - x_2|$, where $|x_1-x_2|$ denotes the absolute value of $x_1-x_2$. Therefore, the net agitation level of the final queue will be the sum of contributions from all pairs of queues $q_i$ and $q_{i+1}$ for $1 \\le i < n$. \n\nProf Kamakoti, being a computer scientist, doesn\u2019t believe that the police would rotate the queues optimally and hence decides to calculate the worst case net agitation level. If he gives this as a programming assignment, can you calculate it?  \n\n###Input:\n- The first line of input contains a single integer $n$ denoting the number of queues. \n- $3n$ lines follow, describing the $n$ queues.\n- For the description of the $i^{th}$ queue, the first line contains $m_i$, the number of fans in the $i^{th}$ queue.\n- The second line contains $m_i$ space-separated integers $ag_1, ag_2, ..., ag_{m_i}$, with $ag_j$ denoting the agitation value of the $j^{th}$ fan.\n- The third line contains $m_i$ space-separated integers $tm_1, tm_2, ..., tm_{m_i}$, with $tm_j$ denoting the temper value of the $j^{th}$ fan.\n\n###Output:\nOutput a single integer corresponding to the worst case net agitation level of the final queue. \n\nNote that the worst case net agitation level is the maximum net agitation level which is possible for any rotation of the smaller queues.\n\n###Constraints \n- $1 \\leq n \\leq 3 \\times 10^5$\n- Total number of fans over all the queues in a single test file won't exceed $3 \\times 10^5$\n- $m_i \\geq 5$\n- $0 \\leq ag_i, tm_i \\leq 10^6+10$\n\n###Sample Input:\n\t3\n\t3 \n\t1 2 3\n\t1 1 1\n\t2 \n\t3 2\n\t2 2\n\t2\n\t4 5\n\t3 3\n\n###Sample Output:\n\t8\n\n###EXPLANATION:\nLet the fans be represented by their agitation values. Hence the queues are:\nQueue 1 :- 1, 2, 3 (temper value is 1 for all fans)\nQueue 2 :- 3, 2 (temper value is 2 for all fans)\nQueue 3 :- 4, 5 (temper value is 3 for all fans)\n\nAll possible cyclic rotations are illustrated below:\n\t01) 123|32|45 = |3-3| * 1 + |2-4| * 2 = 4\n\t02) 312|32|45 = |2-3| * 1 + |2-4| * 2 = 5\n\t03) 231|32|45 = |1-3| * 1 + |2-4| * 2 = 6\n\t04) 123|23|45 = |3-2| * 1 + |3-4| * 2 = 3\n\t05) 312|23|45 = |2-2| * 1 + |3-4| * 2 = 2\n\t06) 231|23|45 = |1-2| * 1 + |3-4| * 2 = 3\n\t07) 123|32|54 = |3-3| * 1 + |2-5| * 2 = 6\n\t08) 312|32|54 = |2-3| * 1 + |2-5| * 2 = 7 \n\t09) 231|32|54 = |1-3| * 1 + |2-5| * 2 = 8\n\t10) 123|23|54 = |3-2| * 1 + |3-5| * 2 = 5\n\t11) 312|23|54 = |2-2| * 1 + |3-5| * 2 = 4\n\t12) 231|23|54 = |1-2| * 1 + |3-5| * 2 = 5\t\n\nThus, the worst-case net agitation level for the final queue is 8.",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "5-04-2018",
    "is_direct_submittable": false,
    "contest_name": "comp.exe",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1523460600,
        "end_date": 1523467800,
        "practice_submission_allowed": true,
        "visible_start_date": 1523467800,
        "submit_start_date": 1523460600,
        "current": 1537432640
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>teja349</span>",
    "problem_name": "Prof Kamakoti and IPL queues",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/teja349'>teja349</a>",
    "problem_tester_html_handle": "",
    "problem_author": "teja349",
    "contest_code": "COME2018",
    "max_timelimit": "1",
    "problem_code": "CEXE02"
}