{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p><font size=2></font></p>\n<p> You have to solve a game of Kaleidoscope.<br />\n<br /><br /> Kaleidoscope consists of 18 pieces, which can be seen <a href=\"https://drive.google.com/file/d/0B0v2UWAP9a7fTWRfUjk5MHJoczg/view?pli=1\"> here </a>. As you can see in the link, they are like dominoes, with each tile colored black or red. Each has been given a letter from 'A' - 'R' as in the image. The total number of tiles is 8*8 = 64.<br />\n<br /><br />\nYou have to arrange these pieces, possibly by rotating them by 90, 180 or 270 degrees, but not flipping them. You have to arrange them together so that they come into an 8X8 formation, to obtain certain configurations. For example, the pieces can be put together like this - <a href=\"https://drive.google.com/file/d/0B0v2UWAP9a7fUzQyZDFUZFpoblU/view?pli=1Bitcity\"> sample </a> . This image also corresponds to the sample input-output, so refer to that.<br />\n<br /><br /><br />\nThe description of the 18 pieces is the same for every game. Given a configuration, output a possible arrangement. (Refer to I/O specifications)<br />\n<br /><br /><br />\nSee the input-output specifications for more understanding.\n</p>\n<h3>Input</h3>\n<p>\nAn input file contains the target formulation specified as an 8X8 grid of 1's and 0's. A 0 corresponds to a red square, and a 1 corresponds to a black square. You are required to solve that board, that is find the placement of the tiles to get that formulation.\n</p>\n<h3>Output</h3>\n<p><b>Output your solution (any possible solution if many exist), as an 8X8 grid that contains in position[i][j] the character corresponding to the piece that fits in that position.</b> For example, in your solution, if the tile 'M' which corresponds to a square comes in the topleft corner, your output will be like this -<br />\n<br />MM...etc<br />\n<br />MM...etc<br />\n<br />....etc<br />\n<br />....etc<br />\n<br /><br />\nSee that the square can be put in a<br />\n<br />01<br />\n<br />10<br />\n<br />configuration, as well as a<br />\n<br />10<br />\n<br />01<br />\n<br />configuration.<br />\n<br /><br /><br />\n<b>Note that in the output, you don't need to specify the configuration/rotation of the piece. If one of the possible configurations of the piece you have put gives the correct answer, it will be accepted.</b></p>\n<h3>Scoring</h3>\n<p>There are 10 test files with 1 board each. Your score will be proportional to the number of boards you solve. </p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n10101010\n10010110\n01000101\n10101010\n01010101\n10100110\n01011011\n10010101\n\n<b>Output:</b>\nJJJJJJJJ\nMMHHHRII\nMMLHPCBI\nALLQPCBI\nAAAKKCBN\nEFKKGGNN\nEFFFGOON\nEEDDDDOO\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "10-03-2015",
    "is_direct_submittable": false,
    "contest_name": "IOPC 2015",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1426362959,
        "end_date": 1426422600,
        "practice_submission_allowed": true,
        "visible_start_date": 1426422600,
        "submit_start_date": 1426362959,
        "current": 1537436570
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>triveni</span>",
    "problem_name": "Kaleidoscope",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/triveni'>triveni</a>",
    "problem_tester_html_handle": "",
    "problem_author": "triveni",
    "contest_code": "IOPC2015",
    "max_timelimit": "3",
    "problem_code": "IOPC15E"
}