{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p><font size = 2></font></p>\n<p>Recently little Chef was challenged by little Devu. Devu asked little Chef to encrypt a given message efficiently which he will send to Churu. Can you help little Chef in doing so ? Problem can be stated formally as follows.</p>\n<p>\nDevu gave little Chef a <a href = \"http://en.wikipedia.org/wiki/Tree_%28graph_theory%29\"> tree</a> containing <b>N</b> nodes. Each node of the tree contains an lowercase English alphabet (a - z). He also gave a set <b>S</b> of <b>M</b> strings.\n</p>\n<p>\nUsing the set <b>S</b> and the given tree, Chef need to construct another set <b>S1</b> of size <b>M</b>. To construct the set <b>S1</b> he does the following </p>\n<ul>\n<li> For each element  from the set <b>S</b>, a string <b>e<sub>i</sub></b>, he finds the most similar string <b>a<sub>i</sub></b> which is present in the given tree. Then he inserts <b>a<sub>i</sub></b> (may be null string) into the new set <b>S1</b>. Note that sets <b>S</b> and <b>S1</b> may contain duplicate elements.</li>\n<li> Most similar string <b>a</b> of a string <b>e</b>  is defined as the longest length substring of string <b>e</b> which is present in the tree. If there are multiple such substrings, then the one whose starting index is smallest is taken. Example, <b> e = 'abc' </b> and suppose 'a', 'ab' and 'bc' are present in the tree, then we take 'ab' (not 'bc'). </li>\n<li> We say a string <b>a</b> is present in the tree if there exist two nodes <b>n1</b> and <b>n2</b> (not necessarily distinct) such that the the string represented by the path going from <b>n1</b> to <b>n2</b> is same as <b>a</b>.</li>\n<li> String represented by the path between nodes <b>n1</b> and <b>n2</b> is string obtained when we concatenate the characters available at the nodes in the path between<b> n1</b> and <b>n2</b>. </li>\n</ul>\n\n<p>\nOutcome of the encryption is also a string <b>str</b> such that all elements of set <b>S1</b> are present in <b>str</b> as a substring. If there are many such <b>str</b> then the one with smallest length is chosen. If there are still many such <b>str</b> then the one which is lexicographically smallest is chosen. You need to print the encrypted string <b>str</b>. If <b>str</b> is null string then print \"-1\" without quotes.\n</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.\n</li>\n<li>The first line of each test case contains two space separated integers <b>N</b> and <b> M </b> as described in the problem statement. N represents the size of the tree. M represents the size of the set <b>S</b>.\n</li>\n<li>\nNext line contains <b>N</b> space separated characters ('a' to 'z'). <b>i<sup>th</sup></b> character represents the character available at the <b>i<sup>th</sup></b> node.\n</li>\n<li>\nNext <b>N-1</b> lines each contains two space separated integers <b>u</b> and <b>v</b> denoting there is edge between node <b>u</b> and <b>v</b>.\n</li>\n<li>\nNext <b>M</b> lines each contains a string <b>e<sub>i</sub></b>. These <b>M </b>strings are the elements of the set <b>S</b>.\n</li>\n</ul>\n<h3>Output</h3>\n<p>In <b>T</b> lines, for each test case output the answer in a new line. Answer to a testcase is the final encrypted message as described in the problem statement.</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T, M</b> \u2264 <b>10</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>1000</b></li>\n<li><b>1</b> \u2264 <b>u, v (u != v)</b> \u2264 <b>N</b></li>\n<li>  Say maximum degree of  a node among all the nodes of the tree be <b>maxDeg</b>.</li>\n<li> <b>If</b> (maxDeg &lt;= 2) :\n<ul>\n<li>1 \u2264 Sum of length of strings of set <b>S \u2264 10010 </b></li>\n</ul>\n</li>\n<li> <b>Else</b> :\n<ul>\n<li>1 \u2264 Sum of length of strings of set <b>S \u2264 3010 </b></li>\n</ul>\n</li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n4 4\nb a b c\n1 2\n2 3\n2 4\nac\ndbab\naf\ng\n4 3\nb a b c\n1 2\n2 3\n2 4\npq\nrst\nuvwz\n\n\n<b>Output:</b>\nacbab\n-1\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "10-03-2015",
    "is_direct_submittable": false,
    "contest_name": "IOPC 2015",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1426336200,
        "end_date": 1426422600,
        "practice_submission_allowed": true,
        "visible_start_date": 1426422600,
        "submit_start_date": 1426336200,
        "current": 1537436576
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>triveni</span>",
    "problem_name": "Encrypted Message",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/triveni'>triveni</a>",
    "problem_tester_html_handle": "",
    "problem_author": "triveni",
    "contest_code": "IOPC2015",
    "max_timelimit": "2.5",
    "problem_code": "IOPC15M"
}