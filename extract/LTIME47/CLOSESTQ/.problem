{
    "problem_code": "CLOSESTQ",
    "problem_author": "gainullinildar",
    "contest_name": "April Lunchtime 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>gainullinildar</span>",
    "problem_name": "Closest points queries",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>lg5293</span>",
    "contest_code": "LTIME47",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/divide-and-conquer'>divide-and-conquer</a>, <a class='problem-tag-small ' href='/tags/problems/gainullinildar'>gainullinildar</a>, <a class='problem-tag-small ' href='/tags/problems/ltime47'>ltime47</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/sets'>sets</a>, <a class='problem-tag-small ' href='/tags/problems/sqrt'>sqrt</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME47/mandarin/CLOSESTQ.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME47/russian/CLOSESTQ.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME47/vietnamese/CLOSESTQ.pdf\">Vietnamese</a> as well.</h3>\n\n<p>Consider a set of points in 2D which is initially empty.\nYou need to process queries which insert and remove points from it.</p>\n\n<p>After each query, you should also print the square of the distance between two closest points in the set.\nIf there are fewer than 2 points in the set, print 0 instead.</p>\n \n<p> It is guaranteed that all the queries are valid \u2014 there will be no query of adding a point that is already present in the set or\nremoving a point which does not exist in the set.</p>\n\n\n<h3>Input</h3>\n \n<p>The first line of the input contains an integer <b>Q</b> denoting the number of queries. </p>\n\n<p>Each of the next <b>Q</b> lines contains one query, which will be one of the following two types:</p>\n\n<ul>\n<li>+ x y \u2014 add the point (x, y) to the set</li>\n<li>- x y \u2014 remove the point (x, y) from the set</li>\n</ul>\n \n<h3>Output</h3>\n \n<p>For each query, output a single line containing one integer \u2014 the square of the distance between two closest points in the set.</p>\n \n \n<h3>Constraints</h3>\n \n<ul>\n<li>1 \u2264 <b>Q</b> \u2264 75,000</li>\n<li>1 \u2264 <b>x, y</b> \u2264 500</li>\n</ul>\n \n \n \n<h3>Subtasks</h3>\n<ul>\n<li>Subtask #1 (10 points): 1 \u2264 <b>Q</b> \u2264 100</li>\n<li>Subtask #2 (30 points): 1 \u2264 <b>Q</b> \u2264 2500 </li>\n<li>Subtask #3 (60 points): Original constraints.</li>\n</ul>\n \n \n \n \n<h3>Example</h3>\n \n<pre><b>Input:</b>\n6\n+ 1 1\n+ 2 2\n+ 3 3\n- 2 2\n+ 400 400\n- 1 1\n\n\n<b>Output:</b>\n0\n2\n2\n8\n8\n315218\n</pre>\n \n \n<h3>Explanation</h3>\n \n<p><b>Query 1.</b> There is only 1 point, so the answer is 0 </p>\n<p><b>Query 2.</b> There are only 2 points, (1, 1) and (2, 2), so answer is (1 - 2)<sup>2</sup> + (1 - 2)<sup>2</sup>, which equals to 2 </p>\n<p><b>Query 3.</b> The points (1, 1) and (2, 2) are one of the closest pairs, and so the answer is still 2 </p>\n<p><b>Query 4.</b> There are only 2 points, (1, 1) and (3, 3), and so answer is (1 - 3)<sup>2</sup> + (1 - 3)<sup>2</sup> which equals to 8 </p>\n<p><b>Query 5.</b> Points (1, 1) and (3, 3) are still closest, and so answer is 8 </p> \n<p><b>Query 6.</b> There are only 2 points, (3, 3) and (400, 400), and so answer is (3 - 400)<sup>2</sup> + (3 - 400)<sup>2</sup> equals to \n315218 </p>\n",
    "category_name": "main",
    "date_added": "29-04-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "3",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/CLOSESTQ",
    "problem_tester": "lg5293",
    "time": {
        "view_start_date": 1493474400,
        "end_date": 1493485200,
        "practice_submission_allowed": true,
        "visible_start_date": 1493485200,
        "submit_start_date": 1493474400,
        "current": 1537433916
    },
    "user": {
        "username": ""
    }
}