{
    "problem_code": "SEGM01",
    "problem_author": "errichto",
    "contest_name": "April Lunchtime 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>errichto</span>",
    "problem_name": "Bear and Segment 01",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>lg5293</span>",
    "contest_code": "LTIME47",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cakewalk'>cakewalk</a>, <a class='problem-tag-small ' href='/tags/problems/errichto'>errichto</a>, <a class='problem-tag-small ' href='/tags/problems/linear-search'>linear-search</a>, <a class='problem-tag-small ' href='/tags/problems/ltime47'>ltime47</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME47/mandarin/SEGM01.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME47/russian/SEGM01.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME47/vietnamese/SEGM01.pdf\">Vietnamese</a> as well.</h3>\n\n<p>Bear Limak has a string <b>S</b>.\nEach character of <b>S</b> is a digit '0' or '1'.</p>\n\n<p>Help Limak and check if all the '1' digits form a single non-empty segment (consecutive subsequence) in the string. For each test case, print \"YES\" or \"NO\" accordingly.</p>\n\n\n<h3>Input</h3>\n\n<p>The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</p>\n\n<p>The only line of each test case contains one string <b>S</b>, consisting of digits '0' and '1' only.</p>\n\n\n<h3>Output</h3>\n\n<p>For each test case, output a single line containing the answer \u2014 \"YES\" if all the '1' digits form a single non-empty segment, and \"NO\" otherwise. Don't print the quotes.</p>\n\n\n<h3>Constraints</h3>\n\n<ul>\n<li>1 \u2264 <b>T</b> \u2264 10</li>\n<li>1 \u2264 |<b>S</b>| \u2264 10<sup>5</sup> (here, |<b>S</b>| denotes the length of <b>S</b>)</li>\n</ul>\n\n\n<h3>Subtasks</h3>\n<ul>\n<li>Subtask #1 (50 points): 1 \u2264 |<b>S</b>| \u2264 50</li>\n<li>Subtask #2 (50 points): Original constraints.</li>\n</ul>\n\n\n<h3>Example</h3>\n\n<pre><b>Input:</b>\n6\n001111110\n00110011\n000\n1111\n101010101\n101111111111\n\n<b>Output:</b>\nYES\nNO\nNO\nYES\nNO\nNO\n</pre>\n\n\n<h3>Explanation</h3>\n\n<p>The answer is \"YES\" for strings 001111110 and 1111.</p>\n\n<p>The answer is \"NO\" for 00110011 because the '1' digits form two disjoint segments (while they should all be consecutive, with no '0' digits between them).</p>\n\n<p>The answer is \"NO\" for 000 because the segment formed by the '1' digits must be non-empty (as written in the statement).</p>",
    "category_name": "main",
    "date_added": "29-04-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/SEGM01",
    "problem_tester": "lg5293",
    "time": {
        "view_start_date": 1493474400,
        "end_date": 1493485200,
        "practice_submission_allowed": true,
        "visible_start_date": 1493485200,
        "submit_start_date": 1493474400,
        "current": 1537433915
    },
    "user": {
        "username": ""
    }
}