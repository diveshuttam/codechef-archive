{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<h3>HOHO  </h3> \n\n<h3> Problem Description </h3> \n<p>\n\nHop\u00adOn\u00adHop\u00adOff services are a great way to explore a city in a flexible manner, at your own pace. <br >\nSightseeing Inc want to offer tourists the option to create their own routes based on their interests. Sightseeing Inc have a list of places of interests(POIs) for each city, tagged with one or more categories. <br> \nOver the years, they've also identified the best paths for sightseeing between the various POIs, so their buses only take these paths. They have hired you to design an algorithm which takes as input the tagged list of POIs, the list of direct paths (with fares) between various POIs and the categories of interest of the user. \n<br>The algorithm should then give the maximum number of places which can be covered by a route, along with the total fare. If more than one such route exists, the algorithm should pick the best route based on minimal total fare. Since the route will not contain any POI which does not match the user's interests. A ticket between any two POIs allows unlimited travel between those POIs. </p> \n<h3> Input</h3>\n\n<p>The first line of the input contains a single integer T denoting the number of test cases.<br>\nThe first line of each test case contains two integers P and R separated by a space where P denotes the number of POIs and R denotes the number of direct routes between these POIs.<br> \nThis is followed by P lines, each line containing the name of the place followed by it's categories, all separated by a space.<br>\nThis is followed by R lines denoting R paths, each containing two places and the fare between them, all separated by a space.<br>\nThe final line of each test case contains one or more categories of interest of the user separated by a space.<br>\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output a single line containing two integers N and D separated by a space where: <br>\nN is the maximum number of places which will be covered by a single route <br> \nC is the total fare<br>  </p> \n\n<h3> \nConstraints </h3> \n<p> \n    1 <= T <= 100 <br>\n    1 <= P <= 50 <br> \n    1 <= R <= 200 <br> \n    1 <= Total number of categories <= 20 <br> \n    Length of each line will not be more than 80 characters <br>\n<h3>\nExample </h3> \n<p> \n    1\n    <br>6 5 <br> \n    ChandniChowk Shopping Historical Food <br> \n    QutubMinar Historical <br> \n    RedFort Historical <br> \n    SarojniNagar Shopping <br>\n    HumayunTomb Historical <br> \n    IndiaGate Historical <br>\n    ChandniChowk QutubMinar 15 <br> \n    ChandniChowk RedFort 4 <br>\n    QutubMinar SarojniNagar 10 <br>\n    SarojniNagar HumayunTomb 10 <br>\n    HumayunTomb IndiaGate 10 <br> \n    Historical <br>\n    <h3>Output </h3>\n    <p>3 19 </p>\n    \n<h3>Explanation of Input </h3>\n<p>\n    Line 1: T = 1 <br>\n    Line 2: P = 6, R = 5 <br>\n    Lines 3 to \u00ad8: (6 lines) the POI's along with it categories for e.g. ChandniChowk is the name of the place followed by categories of this place i.e. Shopping Historical & Food <br>\n    Lines 9\u00ad to 13: (5 lines) the paths between POI\u2019s and the fare between them. For e.g. ChandniChowk QutubMinar 15 denotes ChandniChowk and Qutub Minar have a direct path with fare 15 <br>\n    Line 14: contains categories in which traveler is interested to visit, Historical <br>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "15-10-2016",
    "is_direct_submittable": false,
    "contest_name": "Techfest International Coding Challenge - Game of Codes",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1476594274,
        "end_date": 1476678600,
        "practice_submission_allowed": true,
        "visible_start_date": 1787717708,
        "submit_start_date": 1476594274,
        "current": 1537434491
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>sujay173</span>",
    "problem_name": "HOHO",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/sujay173'>sujay173</a>",
    "problem_tester_html_handle": "",
    "problem_author": "sujay173",
    "contest_code": "GMCO2016",
    "max_timelimit": "1",
    "problem_code": "GMCO16TF"
}