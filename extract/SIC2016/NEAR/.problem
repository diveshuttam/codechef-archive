{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>There are <b>n</b> cabs in a city numbered from <b>1 to n</b>. The city has a rule that only <b>one</b> cab can run in the city at a time. Cab picks up the customer and drops him to his destination. Then the cab gets ready to pick next customer. There are <b>m</b> customers in search of cab. First customer will get the taxi first. You have to find the nearest cab for each customer. If two cabs have same distance then the cab with lower number is preferred.<br><br>\n\nYour task is to find out minimum distant cab for each customer.<br><br>\n\n<b>Input:</b><br>\nThe first line of the input contains an integer <b>T</b> denoting the number of test cases.<br> The description of T test cases follows.\nThe first line of each test case contains two space-separated integers <b>N and M</b>, denoting the number of cabs and the number of customers.<br>\nThe next <b>N</b> lines contain two space-separated integers <b>x[i] and y[i]</b>, denoting the initial position of the i<sup>th</sup> cab.<br>\nNext line contains an integer <b>M</b> denoting number of customers.\nThe next <b>M</b> lines contain four space seperated integers <b>sx[i], sy[i], dx[i], dy[i],</b> denoting the current location and the destination of the i<sup>th</sup> customer.\n<br><br>\n<b>Output:</b><br>\nOutput the nearest cab number for each customer.<br><br>\n\n<b>Constraints:</b><br>\n1&lt;=t&lt;=10<br>\n1&lt;=n,m&lt;=1000<br>\n-10^9&lt;=x[i] , y[i] , sx[i] , sy[i] , dx[i] , dy[i]&lt;=10^9<br><br>\n\nExample:<br>\n<b>Input:</b><br>\n1<br>\n3 2<br>\n1 3<br>\n3 2<br>\n3 5<br>\n2 3 3 4<br>\n5 3 4 1<br>\n<br>\n<b>Output:</b><br>\n1<br>\n1<br><br>\n<b>Explanation:</b><br>\nThe distance of cab1 from customer1 = sqrt((1-2)^2 + (3-3)^2) = 1<br>\nThe distance of cab2 from customer1 = sqrt(2)<br>\nThe distance of cab3 from customer1 = sqrt(5)<br>\nSo output for customer1 is 1<br>\n<br>\nNow location of cab1 is (3,4)<br>\nThe distance of cab1 from customer2 = sqrt((3-5)^2 + (4-3)^2) = sqrt(5)<br>\nThe distance of cab2 from customer2 = sqrt(5)<br>\nThe distance of cab3 from customer2 = sqrt(8)<br>\nSo output for customer2 is 1<br>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "16-09-2016",
    "is_direct_submittable": false,
    "contest_name": "HACK NITJ",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "todo": false,
    "time": {
        "view_start_date": 1474104600,
        "end_date": 1474115400,
        "practice_submission_allowed": true,
        "visible_start_date": 1474115400,
        "submit_start_date": 1474104600,
        "current": 1537434609
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>rahul_sethi</span>",
    "problem_name": "Nearest cab",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/rahul_sethi'>rahul_sethi</a>",
    "problem_tester_html_handle": "",
    "problem_author": "rahul_sethi",
    "contest_code": "SIC2016",
    "max_timelimit": "1",
    "problem_code": "NEAR"
}