{
    "problem_code": "LYRC",
    "problem_author": "kaushik_iska",
    "contest_name": "August Challenge 2013",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>kaushik_iska</span>",
    "problem_name": "Music & Lyrics",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>white_king</span>",
    "contest_code": "AUG13",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/aho-corasick'>aho-corasick</a>, <a class='problem-tag-small ' href='/tags/problems/aug13'>aug13</a>, <a class='problem-tag-small ' href='/tags/problems/dynamic-programming'>dynamic-programming</a>, <a class='problem-tag-small ' href='/tags/problems/kaushik_iska'>kaushik_iska</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/string'>string</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Chef Sridhar listenes to music while cooking. He realized that the lyrics of many songs contain the same words. He thought of a task to do in his leisure; pick a set of words and find the frequency of the words in the lyrics of various songs.</p>\n\n<p>A word A from the lyrics is said to match a given word W if W is a substring of A.</p>\n\n<p><b>Note</b> Some words from the lyrics can match multiple given words. For e.g, <b>shawty</b>, matches both <b>shawty</b> as well as <b>hawt</b>. The word <b>shawty</b> in the lyrics must be counted in the frquency of <b>shawty</b> as well as <b>hawt</b>.</p>\n\n<p>You may assume that all the comparisons must be case sensitive. Also, there are no whitespaces within a word in the given list, or in the lyrics. Words in the lyrics are separated by <b>\"-\"</b> characters (of course without the quotes).</p>\n\n<h3>Input</h3>\n<p>First line contains an integer <b>W</b>, denoting the number of words Chef has decided to find the frequencies of. Then follow <b>W</b> lines containing a word (<b>P</b>) each. The next line contains <b>N</b>, the number of lyrics Chef decided to index. Followed by <b>N</b> lines containing a string (<b>S</b>) which chef has to index. You can assume that <b>S</b> doesn't contain any <b>whitespace</b> characters.</p>\n\n<h3>Output</h3>\n<p>The output contains <b>W</b> lines each denoting the frequency of the respective word in all of the lyrics together.</p>\n\n<h3>Constraints</h3>\n<p>\n<b>1 \u2264 W \u2264 500</b><br />\n<b>1 \u2264 |P| \u2264 5000</b>, where <b>|P|</b> denotes length of each word.<br />\n<b>1 \u2264 N \u2264 100</b><br />\n<b>1 \u2264 |S| \u2264 50000</b>, where <b>|S|</b> denotes the length of lyric of each song.<br />\nAll the characters will be either uppercase or lowercase english alphabets or numbers or <b>\"-\"</b>.\n</p>\n\n<h3>Examples</h3>\n<pre>\n<b>Sample Input 1</b>\n5\nhe\nshe\nsher\nhis\nhers\n2\nushers\nshe-said-he-said-she-said-he-said-his\n\n<b>Sample Output 1</b>\n5\n3\n1\n1\n1\n\n\n<b>Sample Input 2</b>\n3\nwho\nshawty\nhawt\n2\nGet-it-shawty-Get-it-shawty\nWhoa-W-W-Whoa-Shawtyyyyy\n\n<b>Sample Output 2</b>\n0\n2\n3\n\n</pre>",
    "category_name": "main",
    "date_added": "3-06-2012",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "max_timelimit": "3",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/LYRC",
    "problem_tester": "white_king",
    "time": {
        "view_start_date": 1375435800,
        "end_date": 1376299800,
        "practice_submission_allowed": true,
        "visible_start_date": 1376299800,
        "submit_start_date": 1375435800,
        "current": 1537438250
    },
    "user": {
        "username": ""
    }
}