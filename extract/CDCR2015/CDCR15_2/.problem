{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p>Problem description.</p>\n<p>Jimmy decides to watch his favorite TV show online. But NITT WiFi is slow and the video hangs if enough data is not<br />\nbuffered. He wants to watch the video without any such interruptions. If he waits for some T seconds, some part of<br />\nthe video will be download. After T seconds, he can start watching. He does'nt have to wait for the<br />\nwhole video to download as the video can download after the starts watching.</p>\n<p>Let the whole video be N seconds long. Jimmy has to wait T seconds before he can start watching.<br />\nPlease note that at any moment of time, the data downloaded must not be less than what is required to watch<br />\nthat second of the video.</p>\n<p>Jimmy is impatient and wants to wait as little as possible. Being his friend, you have to tell him how many<br />\nseconds he has to wait to watch the video without interruption.</p>\n<p>Please see sample test cases for more clarity.\u00a0</p>\n<h3>Input</h3>\n<p>Each file has only Q test cases.<br />\nFor each test case:<br />\nThe first line contains three space-separated integers x, y and z.<br />\nx - kB required to watch 1 second of the video<br />\ny - Download speed in kB/s<br />\nz - Duration of the video in seconds</p>\n<h3>Output</h3>\n<p>For each test case print an integer T, the time in seconds to wait.\n</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n60 16 1\n2 1 1\n\n<b>Output:</b>\n3\n1\n</pre><p>\u00a0</p>\n<h3>Explanation</h3>\n<p><b>Example case 1.</b> </p>\n<p>After 3 sec, 48kB data is downloaded. So, they start watching and by the end of 4th sec,<br />\n64kB is downloaded and they only need 60kB to watch.</p>\n<p><b>Example case 2.</b></p>\n<p> After 1 sec, 1kB is downloaded. So, they start watching and by the end of 2nd sec, 2kB is downloaded which is the size of the video. </p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "27-01-2015",
    "is_direct_submittable": false,
    "contest_name": "Code Currents 2015",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1422694800,
        "end_date": 1422703800,
        "practice_submission_allowed": true,
        "visible_start_date": 1422703800,
        "submit_start_date": 1422694800,
        "current": 1537436883
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>varunsekar94</span>",
    "problem_name": "Jimmy and NITT WiFi",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/varunsekar94'>varunsekar94</a>",
    "problem_tester_html_handle": "",
    "problem_author": "varunsekar94",
    "contest_code": "CDCR2015",
    "max_timelimit": "1",
    "problem_code": "CDCR15_2"
}