{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Problem description</h3>\n<p>Anyone who knows Geek Sundaram knows that he has a penchant for games of chance. So, it should come as no surprise that he designed one of his own called Wheel of Fortune (not the popular game show, though it could have inspired the name, no one really understands the workings of Geek\u2019s mind), which as its name suggests, is a game of chance.</p>\n<p>Although Wheel of Fortune is worth explaining, we are not going to as this problem concerns the physical wheel he uses for playing the Wheel of Fortune. We shall call it simply the \u2018Wheel\u2019 from now on. The Wheel is roulette-styled and contains <B>N</B> equal slices (having the same arc length, central angle and area). Each slice is marked with a character from an alphabet <B><i>S</i></B>.</p>\n<p>In the initial configuration of the Wheel, |<B><i>S</B></i>| is equal to <B>N</B> and each slice is marked with a unique character from <B><i>S</B></i>. Apart from the characters marked on them, the slices are indistinguishable from each other. So, one has to look at the character in the selected slice to infer the outcome of a spin. In this configuration, the number of equally likely outcomes that could be represented in the Wheel is |<B><i>S</B></i>|.</p>\n<p><center><img src=\"http://cs.annauniv.edu/img/Illustration.png\" height=200 width=200></center></p>\n<p>In the above simple depiction of a Wheel, <B>N</B> = |<B><i>S</i></B>| = 8 and <B><i>S</i></B> = {\u2018a\u2019, \u2018f\u2019, \u2018t\u2019, \u2018q\u2019, \u2018p\u2019, \u2018r\u2019, \u2018e\u2019, \u2018j\u2019} in the initial configuration. Each character represents one of the eight outcomes.</p>\n<p>Geek realises in order to accommodate more outcomes in the Wheel, the size of the alphabet S has to be increased. Geek being a geek, came up with a way to represent more outcomes in the Wheel without increasing the alphabet size. His solution is to club <B>L</B> contiguous slices together and read the characters clockwise to form a string and that string could represent an outcome. For example, in the given figure, for <B>L</B> = 3, strings that could be formed are \u201caft\u201d, \u201cftq\u201d, \u201ctqp\u201d, \u201cqpr\u201d, \u201cpre\u201d, \u201crej\u201d, \u201ceja\u201d and \u201cjaf\u201d. </p>\n<p>For a wheel with a given value of <B>L</B>, if two strings (of length <B>L</B>) read in such a way from different positions in the Wheel are the same, it is said to be <B>invalid</B>. Note that for any <B>L</B>, the number of resultant strings (outcomes) possible is <B>N</B>, the number of slices. Also, in the initial configuration <B>L</B> = 1.</p>\n<p>You are given <B><i>S</i></B> and <B>L</B>. Your task is to help Geek design a valid Wheel so that as much number of outcomes as possible can be represented by that Wheel.</p>\n<p>\u00a0</p>\n\n<h3>Input</h3>\n<p>Each test case consists of two lines.</p>\n<p>The first line contains a string of lowercase English letters without repetition. The letters in the string form the alphabet <B><i>S</B></i>. If a letter appears before another in the string, then the former has alphabetical precedence over the latter.</p>\n<p>The second line contains an integer denoting <B>L</B>.</p>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p>The string representation of a Wheel is obtained by writing the characters in all its slices once, starting from the slice which will result in the lexicographically smallest string. For a given <B><i>S</i></B> and <B>L</B>, there may be multiple Wheels which can represent the maximum possible number of outcomes. For each test case, among those multiple Wheels, print the string representation of the Wheel for which it is the lexicographically smallest.</p>\n<p>\u00a0</p>\n\n<h3>Constraints</h3>\n<ul>\n<li><B>1 < |<i>S</i>| < 10</B></li>\n<li><B>1 <= L <= 10 </B></li>\n<li>The output string will not be longer than <B>10^6</B> characters.</li>\n</ul>\n<p>\u00a0</p>\n\n<h3>Examples</h3>\n<pre><b>Input 1:</b>\naftqprej\n1\n<b>Output 1:</b>\naftqprej\n</pre>\n<br/>\n<pre><b>Input 2:</b>\nab\n3\n<b>Output 2:</b>\naaababbb\n</pre>\n<br/>\n<pre><b>Input 3:</b>\naftqprej\n2\n<b>Output 3:</b>\naafataqaparaeajfftfqfpfrfefjttqtptrtetjqqpqrqeqjpprpepjrrerjeejj\n</pre>\n<p>\u00a0</p>\n\n<h3>Explanation</h3>\n<p><b>Example case 1.</b> This is the initial configuration discussed in the problem.</p>\n<p><b>Example case 2.</b> Strings of length 3 which can be formed from the Wheel \"aaababbb\" are \"aaa\", \"aab\", \"aba\", \"bab\", \"abb\", \"bbb\", \"bba\" and \"baa\", each one distinct. In fact, all strings of length 3 on alphabet {'a', 'b'} are listed. Another wheel possible is \"aaabbbab\" but it is not the lexicographically smallest.</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "15-03-2017",
    "is_direct_submittable": false,
    "contest_name": "Abacus'17 - OLPC",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1489764600,
        "end_date": 1489775400,
        "practice_submission_allowed": true,
        "visible_start_date": 1489775400,
        "submit_start_date": 1489764600,
        "current": 1537434025
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>bharath96</span>",
    "problem_name": "Geek Sundaram and his Wheel of Fortune",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/bharath96'>bharath96</a>",
    "problem_tester_html_handle": "",
    "problem_author": "bharath96",
    "contest_code": "ABCS2017",
    "max_timelimit": "1",
    "problem_code": "ABCS06"
}