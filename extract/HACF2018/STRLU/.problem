{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p><h3>Problem description.</h3></p>\n<p>\u00a0Lets call a string which is composed of only 5 and 8 a Lucky String. For example, 58, 555, 55855 are all Lucky Strings of length 2, 3 and 5 respectively, while 33, 474 are not Lucky Strings. Now, consider a sorted list of all the Lucky Strings that can be formed where the sorting is done by the following rule:\n<br>\nA string a comes before string b if either length(a) < length(b) or, length(a)==length(b) and a comes lexicographically before b.<br>\nThe first few elements in the list are as follows:\nL = [ 5, 8, 55, 58, 85, 88, 555, 558, 585, 588, ....]\n<br>\nNow, given an index K, your objective is to print the K th element in the list L. Consider 1 based indexing.</p>\n<h3>Input</h3>\n<p>Input description.</p>\n<p>The first line starts with a single integer T, the number of test cases. T lines follow each containing a single integer K denoting an index of the list L.</p>\n<p>\u00a0</p>\n\n<h3>Output</h3>\n<p>Output description.</p>\n<p>Output T lines each containing the Lucky String at the K th index corresponding to each test case.\n</p>\n<p>\u00a0</p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>100000 </b></li>\n<li><b>1</b> \u2264 <b>K</b> \u2264 <b>10^18</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n3\n1\n5\n11\n\n<b>Output:</b>\n5\n85\n8555\n\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p>It is easy to see that 1st and 5th element in the list are as in list given in the problem statement. The 10th element in the list being 588, the next Lucky String is 855.</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "14-10-2017",
    "is_direct_submittable": false,
    "contest_name": "Hackon Feb",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, LISP sbcl, LISP clisp, SCM guile, ERL, TCL, kotlin, TEXT, SCM chicken, FS",
    "todo": false,
    "time": {
        "view_start_date": 1518805800,
        "end_date": 1518978540,
        "practice_submission_allowed": true,
        "visible_start_date": 1518978540,
        "submit_start_date": 1518805800,
        "current": 1537432970
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>akshaj</span>",
    "problem_name": "Lucky string",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/akshaj'>akshaj</a>",
    "problem_tester_html_handle": "",
    "problem_author": "akshaj",
    "contest_code": "HACF2018",
    "max_timelimit": "1",
    "problem_code": "STRLU"
}