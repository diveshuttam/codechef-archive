{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p><b>Problem description</b></p>\n<p>Once upon a time there was a boy <span style=\"color:#0000FF;\">Raj</span> who was deeply in love with <span style=\"color:#FF1493;\">Simran</span>. While <span style=\"color:#0000FF;\">Raj</span> and <span style=\"color:#FF1493;\">Simran</span> were in love, <span style=\"color:#FF1493;\">Simran's</span> father was strictly against them. <span style=\"color:#0000FF;\">Raj</span> lived in block <b>M</b> and <span style=\"color:#FF1493;\">Simran</span> lived in block <b>N</b>. Since <span style=\"color:#0000FF;\">Raj</span> was very rich he had bought a flat in all the blocks. To avoid problems <span style=\"color:#0000FF;\">Raj</span> and <span style=\"color:#FF1493;\">Simran</span> moved from block to block in a sequence.For <span style=\"color:#FF1493;\">Simran</span>, moving closer to <span style=\"color:#0000FF;\">Raj</span> is a forward step and going away from <span style=\"color:#0000FF;\">Raj</span> is a backward step.Now, for every <b>PRIME</b> block <span style=\"color:#0000FF;\">Raj</span> would be at, <span style=\"color:#FF1493;\">Simran</span> would move a block back from her current block. Now <span style=\"color:#FF1493;\">Simran's</span> father has hired you to detect in which block will they meet.\u00a0</p>\n<p> Say, for example, <span style=\"color:#0000FF;\">Raj</span> lived in block 1, and <span style=\"color:#FF1493;\">Simran</span> lived in block 8.\nThe sequence of operation will go as follows.\n\n<br><span style=\"color:#0000FF;\">Raj</span>--\t  <span style=\"color:#FF1493;\">Simran</span>\n<br>1--\t  8\n<br>2--\t  9\t(Since, <span style=\"color:#0000FF;\">Raj</span> entered a prime block)\n<br>3--\t 10\t(<span style=\"color:#0000FF;\">Raj</span> entered a prime block)\n<br>4--\t  9\n<br>5--\t 10\t(<span style=\"color:#0000FF;\">Raj</span> entered a prime block)\n<br>6--\t  9\n<br>7--\t 10\t(<span style=\"color:#0000FF;\">Raj</span> entered a prime block)\n<br>8--\t  9\n<br>9--\t   (<span style=\"color:#FF1493;\">Simran</span> moved, only after <span style=\"color:#0000FF;\">Raj</span> has moved. So, once <span style=\"color:#0000FF;\">Raj</span> reaches at 9th block, there is no need for <span style=\"color:#FF1493;\">Simran</span> to go to 8th block. They can happily meet at 9th block.)\n</p>\n<p>Find out at which block they will meet, given their present locations.</p>\n\n\n<h3>Input</h3>\n<p>First line will contain an integer, <b>T</b>, denoting no. of test cases..</p>\n<p>Each test case will contain 2 space separated integers <b>M</b> and <b>N</b>, where <span style=\"color:#0000FF;\">Raj</span> is presently at block <b>M</b>, and <span style=\"color:#FF1493;\">Simran</span> is presently at block <b>N</b>.</p>\n\n\n<h3>Output</h3>\n<p>For each test case output a single integer denoting the <b>Block number</b> where they can meet.</p>\n<p>\u00a0</p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>1000</b></li>\n<li><b>1</b> \u2264 <b>M</b> \u2264 <b>N</b> \u2264 <b>10^5</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n5\n1 8\n5 5\n14 29\n2 4\n17 18\n\n<b>Output:</b>\n9\n5\n25\n4\n18\n\n</pre>\n<p>\u00a0</p>\n<h3>Explanation</h3>\n<p><b>Example case 3.</b>\n<br><span style=\"color:#0000FF;\">Raj</span>--\t  <span style=\"color:#FF1493;\">Simran</span>\n<br>14--\t  29\n<br>15--\t  28\n<br>16--\t  27\n<br>17--\t  28\n<br>18--\t  27\n<br>19-- \t  28\n<br>20--\t  27\n<br>21--\t  26\n<br>22--\t  25\n<br>23--\t  26\n<br>24--\t  25\n<br>25--\n\n<br><br><b>Example case 4.</b>\n<br><span style=\"color:#0000FF;\">Raj</span>--     <span style=\"color:#FF1493;\">Simran</span>\n<br>2--\t  4\n<br>3--\t  5\n<br>4--\t  4\n\n\n </p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "3-11-2016",
    "is_direct_submittable": false,
    "contest_name": "IEM Coding Olympiad 2016",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1478442600,
        "end_date": 1478453400,
        "practice_submission_allowed": true,
        "visible_start_date": 1478453400,
        "submit_start_date": 1478442600,
        "current": 1537434391
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>dwij28</span>",
    "problem_name": "Dilwale Dulhaniya Le Jayenge",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/dwij28'>dwij28</a>",
    "problem_tester_html_handle": "",
    "problem_author": "dwij28",
    "contest_code": "IEMCO16",
    "max_timelimit": "1",
    "problem_code": "DDLJ"
}