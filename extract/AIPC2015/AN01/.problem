{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<h2>Problem description.</h2>\n<p>\nThis problem is simple and will introduce you to the Dynamic Programming.<br /><br />\nYou will be given an array and a key value.<br />\nYou will have to find out the occurrences of the key value depending upon the query using Brute Force and Top Down Dynamic Programming.\n</p>\n<h3>Brute-Force: </h3>\n<p>You will check the query, and calculate the occurrences.<br />\n<br /><br /></p>\n<h3>DP: </h3>\n<p>\nYou will check the query; check whether the memoized solution is already available.<br />\nIf the memoized solution is available, no need to calculate the number of occurrences again.<br />\nIf the memoized solution is not available, then calculate the number of  occurrences and memoize it for future use.\n</p>\n<h3>Pseudo Code for DP:</h3>\n<pre>\ncountOccurences(key,from):\n\nif (from = size of array) then \n\treturn 0\nendif\nif dp[from] is availabe then \n\treturn dp[from]\nendif\nif( array[from] == key) then\n\tdp[from] = 1+countOccurences(key,from+1)\nelse\n\tdp[from] = countOccurences(key,from+1)\nendif\t\nreturn dp[from]\n</pre><p><br /></p>\n<h3>Input:</h3>\n<p>\nThe first line of input is <b>the number of test cases (t).</b><br /><br />\nThe first line of each test case is <b>the number of array elements (n).</b><br /><br />\nThe next will contain n space separated integers.<br /><br />\nThe next line will have <b>the key element (k).</b><br /><br />\nThe next will have<b> number of queries (q).</b><br /><br />\nThe next q lines will contain an integer A such that 0&lt;=A &lt; n. <br /><br />\nYou have to find out the number of occurrences from a to end of the array using both brute force and DP. <br /><br />\nEverything will fit into the range of int.<br />\n</p>\n<h3>Output:</h3>\n<p>\nFor each test case, the output will have q lines with 3 space separated integers.<br /> The first will be the number of occurrences, other will be the loop count/function calls,<br /> using brute force and the last will be the number of loop count/function calls using DP.\n</p>\n<h3>Sample Input:</h3>\n<pre>\n1\n10\n1 2 3 1 2 3 1 2 3 1\n3\n5\n2\n4\n6\n8\n2\n</pre><h3>Sample output:</h3>\n<pre>\n3 8 9\n2 6 1\n1 4 1\n1 2 1\n3 8 1\n</pre><h3>Explanation:</h3>\n<p>\nFor the first query, we have to find the number of occurrences of 3 from index 2.<br /><br />\nUsing the brute force, the loop will check each element from index 2 to 9. Thus the loop count is 8.<br /><br />\nUsing DP, the method countOccurences(key,from) will be called like this : <br /></p>\n<pre>\ncountOccurences(3,2)->countOccurences(3,3)->countOccurences(3,4)->countOccurences(3,5)\n->countOccurences(3,6)->countOccurences(3,7)->countOccurences(3,8)\n->countOccurences(3,9)->countOccurences(3,10).\n</pre><p><br /><br />\nWhen the countOccurences(3,10) is called, it will return 0. Total 9 function calls.<br /></p>\n<p>For the second query, the brute force will do the same as above.<br /><br />\nBut the DP will check whether solution for countOccurences(3,4) is available or not.<br />\n As it was calculated while solving the first query, it won\u2019t solve it again and will directly give the answer. <br /><br />\nTotal 1 function calls.<br />\n\u00a0</p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "23-09-2015",
    "is_direct_submittable": false,
    "contest_name": "Code-Adda Practice Contest",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1445779800,
        "end_date": 1445797740,
        "practice_submission_allowed": true,
        "visible_start_date": 1445797740,
        "submit_start_date": 1445779800,
        "current": 1537435864
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>priyank_coder</span>",
    "problem_name": "learn DP",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/priyank_coder'>priyank_coder</a>",
    "problem_tester_html_handle": "",
    "problem_author": "priyank_coder",
    "contest_code": "AIPC2015",
    "max_timelimit": "0.1",
    "problem_code": "AN01"
}