{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p><b>This problem was part of the <a href=\"http://www.codechef.com/APRIL09/\">CodeChef April Challenge</a>.  All user submissions for this contest problem are publicly available <a href=\"http://www.codechef.com/APRIL09/status/A7/\">here</a>.</b></p>\n\n<p>Your grandfather is known in the family for his unconventional sense of humour. Since he made his fortune on the network of\npizza parlours<sup>a)</sup>, he has been giving expensive gifts to the members of the family every Christmas. Receiving the gift,\nhowever, always involves solving a more or less fancy mathematical puzzle.</p>\n\n<p>This year, your gift was locked in a safe, self-made by your grandfather. The safe was secured with a two digit code: in order to open it\nyou had to provide the correct integer number from the range [0,99]. A bit disgruntled that this year's puzzle would apparently be solved with the force (and not even too brute), you were just about to start examining the numbers, when you heard grandfather's voice - \"Beware, kid! After two unsuccessful attempts the content will be annihilated!\" \"Then how am I supposed to solve this, Grandpa?\" - you asked. \"Go and have a better look at the package\" - grandfather replied.</p>\n\n<p>Indeed, at the bottom of the package you found a city map on which were indicated all the pizza parlours belonging to your grandfather, as well as a long sheet of paper with a sequence of positive integers. After analysing the data for a while you realized that the number of integer values is equal to the number of pizza restaurants... Recognizing that you still have too little input, you went to ask grandfather for further guidance.</p>\n\n<p>\"Ah, all right, I'll solve the riddle for you\" - grandfather relented. \"For each pizza parlour you have to draw such an axis-aligned square that it is centered at the restaurant and half of the length of its side is equal to the corresponding value from the sheet. Then you have to count all the streets on the map which intersect with the square, and write down the <b>result of calculations</b>. The result for the last pizza parlour will be your magic number.\"</p>\n\n<p>You were a bit surprised that grandfather ordered you to draw squares and count streets for all the restaurants (and there were many), since the code would only depend on the last one. Nonetheless you willingly took on the job, drew the square for the last pizza parlour, counted the streets and entered the number. Unfortunately the safe didn't open.</p>\n\n<p>You rushed to grandfather and told him about the first failed attempt. \"Oh dear, did I forget to mention?\" - the old man was slightly taken aback. \"For each restaurant but the first one, you have to modify both its coordinates by bit-xor'ing them with the result of calculations for the directly preceding restaurant, before drawing the square!\". Will you be able to claim the gift now? You have only one attempt left!</p><p>\n\n<h3>Input</h3>\n</p><p>The first line of input contains two integers <i>n</i> and <i>m</i> (0 \u2264 <i>n</i> \u2264 5000, 1 \u2264 <i>m</i> \u2264 50000), the number of streets in the capital city and the number of pizza parlours, respectively. The following <i>n</i> lines contain four integers <i>x1</i>, <i>y1</i>, <i>x2</i> and <i>y2</i>, each (0 \u2264 <i>x1, y1, x2, y2</i> \u2264 1000&lt;). Each of these lines defines the location of one of the streets, with (<i>x1</i>,<i>y1</i>) representing one of the endpoints and (<i>x2</i>,<i>y2</i>) the other one. The streets can be assumed to be straight line segments. Eventually there are <i>m</i> lines with three integers <i>x</i>, <i>y</i> and <i>r</i> each (0 \u2264 <i>x, y</i> \u2264 1000, 1 \u2264 <i>r</i> \u2264 20). Each of these lines defines x and y coordinates of one of the pizza parlours and the corresponding number from the sheet attached to your gift, respectively.</p>\n\n<p>You may find it useful to know that:</p>\n<ul>\n<li>A street can have identical endpoints<sup>b)</sup>.</li>\n<li>Any two distinct streets have at most one common point.</li>\n<li>When counting intersecting streets, you should assume that the boundary of the square belongs to the square.</li>\n<li>The configuration of the streets guarantees that any square satisfying <i>0 \u2264 x, y \u2264 1000, 1 \u2264 r \u2264 20</i> will contain at most 99 intersecting streets.</li>\n<li>Your grandfather is 78 and claims that Fortran is the best language for solving his Christmas puzzles.</li>\n</ul>\n\n<h3>Output</h3>\n<p>The output should contain a single integer value - the code that opens the safe.</p>\n\n<h3>Example</h3>\n\n<pre>\n<b>Input:</b>\n5 2\n2 2 4 6\n2 2 7 4\n4 6 7 4\n7 4 10 3\n7 4 10 5\n10 4 2\n0 0 1\n\n<b>Output:</b>\n2\n</pre>\n\n<h3>Notes</h3>\n<p>a) This should not surprise anyone. As the IT sector is extremely well-developed in Byteland, pizza network owners are among the richest people there.</p>\n<p>b) For some inscrutable reasons such streets are called squares. Not to be mixed up with the squares you draw!</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "1-12-2008",
    "is_direct_submittable": false,
    "contest_name": "April 2009 (Contest II)",
    "languages_supported": "C, JAVA, PYTH, CS2, PAS fpc, PAS gpc, RUBY, PHP, HASK, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, TEXT",
    "todo": false,
    "time": {
        "view_start_date": 1238578200,
        "end_date": 1239787800,
        "practice_submission_allowed": true,
        "visible_start_date": 1239802200,
        "submit_start_date": 1238578200,
        "current": 1537439956
    },
    "problem_author_html_handle": "admin",
    "problem_name": "A Christmas Pizza Puzzle",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin'>admin</a>",
    "problem_tester_html_handle": "",
    "problem_author": "admin",
    "contest_code": "APRIL09",
    "max_timelimit": "0.354978 - 1.24",
    "problem_code": "A7"
}