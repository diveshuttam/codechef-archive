{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>The GTUG Team was once invited to attend a marriage Party by two families. When they reached there they realised that though they were guests, they knew nothing about their hosts from any of the two families there. So they started inquiring and learned the following: </Br></Br>\n\n\tFamily 1::\n\t\tAnn and Marty have children Bill, Cathy and Frank.\n\t\tBill and Alice have no children.\n\t\tCathy and Don have children Matt and Sally.\n\t\tFrank and Jill have a child Sarah.</Br>\n\tFamily 2::\n\t\tDebbie and Phil have children Jill and Betty.\n\t\tJill and Frank have a child Sarah.\n\t\tBetty and Paul have children Mary Jane and Bart.\n\tNote: Both Families are Connected together by the marriage of Jill and Frank.</Br>\n\nThe Team now needs an Efficient Programmer who can design a software for them which would help them know which relatives are in some given relation with a particular member.</Br>\n\n\n\n\n\n<h3>Input</h3>\nThe first line of the data set for this problem is an integer which represents the number of data sets that follow. The first word in the data set is the relationship (SIBLING/PARENT/GRANDCHILD/GRANDPARENT)and the second word is the name of the person whose relative(s) is/are to be known.\n\n\n<h3>Output</h3>\n<p>\n\nOutput the names of all who meet the relationship criterion.\nAll letters are upper cases.\nThe output is to be formatted exactly like that for the sample output given below.\n\nAssumption: All letters are upper case.\n\n\n<h3>Example</h3>\n\n<pre>\n<b>Input:</b>\n1\nSIBLING BART\n\n\n\n<b>Output:</b>\nMARY JANE\n\n\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "10-04-2012",
    "is_direct_submittable": false,
    "contest_name": "Android Hack Camp v.02",
    "languages_supported": "C, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, JAR, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1338215400,
        "end_date": 1338388200,
        "practice_submission_allowed": false,
        "visible_start_date": 1338388200,
        "submit_start_date": 1338215400,
        "current": 1537438795
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>solas_143</span>",
    "problem_name": "Family Tree",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/solas_143'>solas_143</a>",
    "problem_tester_html_handle": "",
    "problem_author": "solas_143",
    "contest_code": "ADR2012",
    "max_timelimit": "1",
    "problem_code": "A107"
}