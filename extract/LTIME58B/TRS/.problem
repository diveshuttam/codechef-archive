{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": "lg5293",
    "body": "<h3>Read problems statements in <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/LTIME58/mandarin/TRS.pdf\">Mandarin chinese</a>, <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/LTIME58/russian/TRS.pdf\">Russian</a> and <a target=\"_blank\" \nhref=\"http://www.codechef.com/download/translated/LTIME58/vietnamese/TRS.pdf\">Vietnamese</a> as well.</h3>\n\n<p> \nYou are given a tree <b>T</b> with <b>N</b> nodes numbered 1 through <b>N</b>. Each node of the tree has a value; let's denote the value of node <b>v</b> by <b>C<sub>v</sub></b>. You are also given <b>Q</b> queries to process. There are two types of queries:\n<ul>\n<li>1 <b>U</b> <b>V</b> <b>W</b> \u2014 add <b>W</b> to the value of each node on the path between nodes <b>U</b> and <b>V</b> (both inclusive)</li>\n<li>2 <b>U</b> <b>V</b> <b>X</b> \u2014 consider each node on the path between nodes <b>U</b> and <b>V</b> (both inclusive) whose value is \u2265 <b>X</b>; compute the minimum of these nodes' values</li>\n</ul>\n</p>\n\n<p>Process the queries in the given order and compute the answer to each query of the second type.</p>\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</li>\n<li>The first line of each test case contains two space-separated integers <b>N</b> and <b>Q</b>.</li>\n<li>The second line contains <b>N</b> space-separated integers <b>C<sub>1</sub>, C<sub>2</sub>, ..., C<sub>N</sub></b>.</li>\n<li><b>N-1</b> lines follow. Each of these lines contains two space-separated integers <b>U</b> and <b>V</b> denoting an edge connecting nodes <b>U</b> and <b>V</b>.</li>\n<li>The following <b>Q</b> lines describe queries. Each of them contains four space-separated integers <b>type</b>, <b>U</b>, <b>V</b> and either <b>W</b> (for <b>type</b> = 1) or <b>X</b> (for <b>type</b> = 2). Here, <b>type</b> denotes the type of the query.</li>\n</ul>\n\n<h3>Output</h3>\n<p>For each query of the second type, print a single line containing one integer \u2014 the minimum value \u2265 <b>X</b> of a node on the given path which is, or -1 if no such value exists.</p>\n\n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>T</b> \u2264 100,000</li>\n<li>1 \u2264 <b>N</b>, <b>Q</b> \u2264 100,000</li>\n<li>0 \u2264 <b>C<sub>i</sub></b> \u2264 10<sup>9</sup> for each valid <b>i</b></li>\n<li>1 \u2264 <b>type</b> \u2264 2</li>\n<li>1 \u2264 <b>X</b> \u2264 10<sup>14</sup></li>\n<li>1 \u2264 <b>W</b> \u2264 10<sup>9</sup></li>\n<li>1 \u2264 <b>U</b>, <b>V</b> \u2264 <b>N</b></li>\n<li>the graph described on the input is a tree</li>\n<li>1 \u2264 sum of <b>N</b> over all test cases \u2264 100,000</li>\n<li>1 \u2264 sum of <b>Q</b> over all test cases \u2264 100,000</li>\n</ul>\n\n<h3>Subtasks</h3>\n<p>\n<b>Subtask #1 (43 points):</b> there are no queries of the first type (<b>type</b> = 2 for each query)\n</p>\n\n<p>\n<b>Subtask #2 (57 points):</b> original constraints\n</p>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n\n1\n5 5\n10 15 20 15 10\n1 2\n1 3\n2 4\n2 5\n2 5 3 3\n1 2 5 10\n2 1 4 4\n1 5 2 17\n2 1 5 100\n\n<b>Output:</b>\n\n10\n10\n-1\n</pre>\n",
    "category_name": "unscored",
    "user": {
        "username": ""
    },
    "date_added": "27-03-2018",
    "is_direct_submittable": false,
    "contest_name": "March Lunchtime 2018 Division 2 (Unrated)",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1522591200,
        "end_date": 1522602000,
        "practice_submission_allowed": true,
        "visible_start_date": 1833593742,
        "submit_start_date": 1522591200,
        "current": 1537432726
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>mgch</span>",
    "problem_name": "Queries on Tree",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/decomposition'>decomposition</a>, <a class='problem-tag-small ' href='/tags/problems/hard'>hard</a>, <a class='problem-tag-small ' href='/tags/problems/ltime58'>ltime58</a>, <a class='problem-tag-small ' href='/tags/problems/mgch'>mgch</a>, <a class='problem-tag-small ' href='/tags/problems/squareroot'>squareroot</a>, <a class='problem-tag-small ' href='/tags/problems/supernode'>supernode</a>",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;</span><span>lg5293</span>",
    "problem_author": "mgch",
    "contest_code": "LTIME58B",
    "max_timelimit": "3.5",
    "problem_code": "TRS"
}