{
    "problem_code": "AMR16A",
    "problem_author": "admin3",
    "contest_name": "ACM-ICPC Asia-Amritapuri Onsite Mirror Contest 2016",
    "todo": false,
    "problem_author_html_handle": "admin3",
    "problem_name": "Tim and BSTs",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "AMR16MOS",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/admin3'>admin3</a>",
    "body": "<p>Demonetization has affected everyone but Tim. He is still busy with his usual habit of finding some interesting problems over binary trees. Today also he came up with such a problem.</p>\n<p>Tim is studying <b>binary search trees</b>, or <b>BST</b>s. In Tim's book, a binary tree with <b>N</b> nodes is formalized so that:</p>\n\n<ul>\n<li>Each node is identified by an integer between <b>1</b> and <b>N</b>, inclusive.</li>\n<li>Each node <b>i</b> has an integer label, called <b>label(i)</sub></b>.</li>\n<li>The identifiers of the left and right child of node <b>i</b> are written as <b>L<sub>i</sub></b> and <b>R<sub>i</sub></b>.</li>\n<li>A nonexistent left and right child is represented as <b>L<sub>i</sub> = 0</b> and <b>R<sub>i</sub> = 0</b>, respectively.</li>\n</ul>\n\n<p>Tim understands this very well. Unfortunately, he doesn't understand the formal definition of a <b>binary <em>search</em> tree</b> quite well. He thinks that a tree is a binary search tree if and only if for all nodes <b>i</b>:</p>\n\n<ul>\n<li>If <b>L<sub>i</sub> \u2260 0</b>, then <b>label(L<sub>i</sub>) &lt; label(i)</sub></b>.</li>\n<li>If <b>R<sub>i</sub> \u2260 0</b>, then <b>label(R<sub>i</sub>) > label(i)</sub></b>.</li>\n</ul>\n\n<p>Let's call a tree satisfying Tim's understanding a <b>pseudo-BST</b>. Clearly, all BSTs are pseudo-BSTs, but not all pseudo-BSTs are BSTs.</p>\n\n<p>To illustrate the difference further, suppose all labels are distinct and are between <b>1</b> and <b>N</b>, inclusive. Then there is a unique way to assign these labels to the <b>N</b> nodes such that the tree becomes a BST, but there are possibly many ways to assign them such that it becomes a pseudo-BST.</p>\n\n<p>Help Tim realize his mistake! Given a binary tree of <b>N</b> nodes, find the number of assignments of distinct labels between <b>1</b> and <b>N</b> such that the tree becomes a valid pseudo-BST!</p>\n\n<h3>Input</h3>\n<p>The first line of input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.</p>\n<p>The first line of each test case contains a single integer <b>N</b>.</p>\n<p>The next <b>N</b> lines describe the tree. Specifically, the <b>i<sup>th</sup></b> following line contains two integers separated by a space, <b>L<sub>i</sub></b> and <b>R<sub>i</sub></b>, which are the left and right children of node <b>i</b>, respectively..</p>\n\n\n<h3>Output</h3>\n<p>For each test case, output a single line containing the answer. Since the answer can be very large, only output it modulo <b>10<sup>9</sup> + 7</b>.</p>\n\n<h3>Constraints</h3>\n\n<ul>\n<li><b>1 \u2264 T \u2264 100</b></li>\n<li><b>1 \u2264 N \u2264 1000</b></li>\n<li><b>0 \u2264 L<sub>i</sub>, R<sub>i</sub> \u2264 N</b></li>\n<li>Node <b>1</b> is always the root.</li>\n<li>Each test case describes a valid binary tree.</li>\n</ul>\n\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n<tt>3\n4\n2 3\n0 0\n4 0\n0 0\n7\n2 3\n4 5\n6 7\n0 0\n0 0\n0 0\n0 0\n5\n3 5\n0 0\n0 2\n0 0\n4 0</tt>\n<b>Output:</b>\n<tt>3\n18\n11</tt>\n</pre>\n\n<h3>Explanation</h3>\n\n<p>In the first case, the tree looks like:</p>\n\n<img src=\"https://s3.amazonaws.com/codechef_shared/download/upload/pseudobst_tree.png\" height=\"160\">\n\n<p>The following assignments of labels yield a pseudo-BST:</p>\n\n<ul>\n<li><b>[label(1), label(2), label(3), label(4)] = [2, 1, 4, 3].</b></li>\n<li><b>[label(1), label(2), label(3), label(4)] = [3, 1, 4, 2].</b></li>\n<li><b>[label(1), label(2), label(3), label(4)] = [3, 2, 4, 1].</b></li>\n</ul>\n",
    "category_name": "main",
    "date_added": "20-12-2016",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "max_timelimit": "4",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/AMR16A",
    "problem_tester": null,
    "time": {
        "view_start_date": 1482477452,
        "end_date": 1482487200,
        "practice_submission_allowed": true,
        "visible_start_date": 1793475530,
        "submit_start_date": 1482477452,
        "current": 1537434291
    },
    "user": {
        "username": ""
    }
}