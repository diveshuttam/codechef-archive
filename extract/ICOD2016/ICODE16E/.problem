{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Peter recently started coding practice and learned an algorithm (say <b>A</b>) to arrange a permutation with N elements a1, a2,......aN  in ascending order. Peter also has great interest in learning graph algorithms. On Sunday morning , Peter creates his own graph with the help of above learned algorithm (<b>A</b>). The graph (say G) initially has 0 edge. The algorithm (A) sets the edges in the graph in following manner :-</p>\n<p><b>procedure A()</b></p>\n<p>create a graph G with N vertices and 0 edges</p>\n<p>repeat</p>\n<p>\u00a0\u00a0_swap = false</p>\n<p>\u00a0\u00a0\u00a0for i = 1 to N-1 inclusive do :</p>\n<p> \u00a0\u00a0\u00a0\u00a0\u00a0 if a[i] > a[i+1] then :</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0add an undirected edge in G between  a[i] and a[i+1]</p>\n<p> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0swap(a[i] , a[i+1])</p>\n<p> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_swap = true</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0end if</p>\n<p>\u00a0\u00a0\u00a0end for</p>\n<p>untill not swapped</p>\n<p>/* repeat the algorithm as long as _swap value is true*/</p>\n<p><b>end procedure</b></p>\n<p>An independent set is a set of vertices in a graph , no two of which are adjacent , i.e,there are no edges between vertices of an independent set. A maximum independent set is the set with maximum cardinality. For a given permutation, find the size of a maximum independent set of graph G, if the permutation is processed through above procedure A.\n</p>\n<h3>Input Format :</h3>\n<p>The first line contains an integer T, number of test cases. For each test case, first line contains an integer N and the next line contains N  integers a1,a2...aN.\n</p>\n<h3> Output Format:</h3>\n<p>For each test case, output a single line with the answer for the instance.\n</p>\n<h3>Constraints:</h3>\n<ul>\n<li>1&lt;=T&lt;=100</li>\n<li>2&lt;=N&lt;=10^5</li>\n<li>1&lt;=ai&lt;=10^7</li>\n</ul>\n<h3>Subtasks</h3>\n<p>\n<b>Subtask1 ( 5 points)</b></p>\n<ul>\n<li>1&lt;=T&lt;=2</li>\n<li>2&lt;=N&lt;=10</li>\n<li>1&lt;=ai&lt;=100</li>\n</ul>\n\n<p><b>Subtask2 ( 15 points)</b></p>\n<ul>\n<li>1&lt;=T&lt;=10</li>\n<li>2&lt;=N&lt;=100</li>\n<li>1&lt;=ai&lt;=1000</li>\n</ul>\n\n<p>\n<b>Subtask3 ( 80 points)</b></p>\n<p>Original Constraints</p>\n<pre> \n<b>Sample Input  -</b> \n2\n3\n4 1 3\n2\n1 1 \n<b>Sample Output -</b>\n2\n1\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "22-12-2015",
    "is_direct_submittable": false,
    "contest_name": "I-CODE 2016",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "todo": false,
    "time": {
        "view_start_date": 1455625800,
        "end_date": 1455885000,
        "practice_submission_allowed": false,
        "visible_start_date": 1455885000,
        "submit_start_date": 1455625800,
        "current": 1537435416
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>manu4056</span>",
    "problem_name": "Peter and Graph",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/manu4056'>manu4056</a>",
    "problem_tester_html_handle": "",
    "problem_author": "manu4056",
    "contest_code": "ICOD2016",
    "max_timelimit": "1",
    "problem_code": "ICODE16E"
}