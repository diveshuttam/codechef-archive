{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>The city of Drais once was a capital of bicycle races. The city contained several junctions. Some pairs of junctions are directly connected by a bidirectional road which does not pass through any intermediate junction. In Drias there was a unique simple path to get from any junction to any other. Note that in a simple path, junctions should not be repeated. Also, there is at most one bidirectional road between a pair of junctions. The races were being held annually. Two junctions are said to be <i>farthest apart</i> if the number of roads in the unique simple path between them is maximum possible. Each year the organizers chose a pair of distinct junctions as the start and the finish of the race such that they are a <i>farthest apart</i> pair of junctions. No unordered pair of junctions was chosen more than once. After <b>k</b> years the organizers ran out of pairs of <i>farthest apart</i> junctions, and decided to move the races to a different city.\n</p>\n\n<p>These competitions described above occurred a long time ago, it is now impossible to reconstruct the road network which existed at that time. But now you are given the responsibility of building a new city which would meet those properties. And you want to have the minimum number of junctions so as to reduce cost. So, your job is build a road network with the least number of junctions so that if the race were to be held on this road network, it would last for exactly <b>k</b> years. Note that from the earlier description it is clear that every year the race must occur between an unique unordered pair of junctions.\n</p>\n\n<h3>Input</h3>\n<ul>\n\t<li>The first line contains the number of test cases <b>T</b></li>\n\t<li>Each of the next <b>T</b> lines contains a single integer <b>k</b> for the respective test case</li>\n</ul>\n\n<h3>Output</h3>\n<ul>\n\t<li>Print answers for the test cases one by one. If there is no network with exactly <b>k</b> pairs of junctions with largest distance, print \u2009-1.</li>\n\n<li>Otherwise, on the first line print an integer <b>n</b>, which should be the smallest number of junctions in a network that satisfies this condition.</li>\n</li>On the next <b>n</b>\u2009-\u20091 lines print the description of the road network. Each of these lines should contain two integers, which should be the 1 -  based indices of junctions connected by the respective road.</li>\n<li>If there are several possible answers, print any of them.  \n\t</li>\n</ul>\n\n<h3>Constraints</h3>\n<ul>\n\t<li>1\u2009\u2264\u2009<b>T</b>\u2009\u2264\u2009500</li>\n\t<li>1\u2009\u2264\u2009<b>k</b> \u2264\u2009500</li>\n</ul>\n\n<h3>Example</h3>\n<pre>\n<b>Input:</b>\n3\n1\n3\n4\n\n<b>Output:</b>\n2\n1 2\n4\n1 2\n1 3\n1 4\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n</pre>\n\n<h3>Explanation</h3>\n<p><b>Testcase 1</b>: The longest path in the output graph is the path between 1 and 2, and there is no other path of that length. Having a tree with size 1 wouldn't work and hence this is the minimum we can get. Hence this is a valid output.\n\n<p><b>Testcase 2</b>: The longest paths in the output graph are the paths between 2 and 3, 3 and 4, and 2 and 4. Each of them are of length 2. This is the minimum number of junctions for which this works. Hence this is a valid output.</p>\n\n<p><b>Testcase 3</b>: The longest paths in the output graph are the paths between 3 and 5, 3 and 6, 4 and 5, and 4 and 6. Each of them are of length 3. This is the minimum number of junctions for which this works. Hence this is a valid output.</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "21-12-2017",
    "is_direct_submittable": false,
    "contest_name": "ACM-ICPC Asia-Amritapuri Onsite Replay Contest 2017",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "todo": false,
    "time": {
        "view_start_date": 1517596200,
        "end_date": 1517693400,
        "practice_submission_allowed": true,
        "visible_start_date": 1517693400,
        "submit_start_date": 1517596200,
        "current": 1537433064
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>balajiganapath</span>",
    "problem_name": "Longest Races",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/balajiganapath'>balajiganapath</a>",
    "problem_tester_html_handle": "",
    "problem_author": "balajiganapath",
    "contest_code": "AMR17ROL",
    "max_timelimit": "2",
    "problem_code": "AMRACES"
}