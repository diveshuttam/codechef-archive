{
    "problem_code": "QM6P5A",
    "problem_author": "chandubaba",
    "contest_name": "Keteki Quick Match 6.5",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>chandubaba</span>",
    "problem_name": "Smiling Queen(keteki)",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "KQM6518",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/bruteforce'>bruteforce</a>, <a class='problem-tag-small ' href='/tags/problems/chandubaba'>chandubaba</a>, <a class='problem-tag-small ' href='/tags/problems/keteki'>keteki</a>, <a class='problem-tag-small ' href='/tags/problems/maths'>maths</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>A man is trying to impress his wife by speaking few sentences to her. Whenever his wife smiles after the sentence, it means that she is impressed else if she doesn't smile then it means that she is not impressed. <br/><br/>\n\nGiven a few sentences and the word \"yes\", if she smiles, or \"no\", if she doesn't, print how many words makes her smile. (quotes for clarity).<br/><br/>\n\nExample: \"you are pretty\" doesn't make her smile. And \"you are very pretty\", makes her smile means the word \"very\" makes her smile.<br/><br/>\n\nNote: If she smiles at a sentence, then it would guarantee that there would be at least one word in that sentence that is not there in sentences that doesn't make her smile.<br/><br/>\n\n<h2>Input:</h2>\nInput starts with an integer <b>T</b>, the number of test cases.<br/> \n<br/>\nEach test case would have an integer <b>S</b> on a newline representing the number of sentences in that case. There would be <b>S</b> sentences after that, each on a newline, and between each sentence would be a word \"yes\" or \"no\" on a newline. Sentences would be words containing letters 'a' to 'z', inclusive, separated by single spaces. (Quotes for clarity).\n<br/><br/>\n<h2>Output:</h2>\nPrint the number of words that makes her smile for each case on a newline.<br/><br/>\n\n<h2>Constraints:</h2>\n1<=T<=10<br/>\n1<=S<=5<br/>\n1<=characters in sentence<=100<br/>\n<br/>\n<h2>Example </h2>\n\n<h3>Input:</h3>\n2<br/>\n2<br/>\nyou are pretty<br/>\nyes<br/>\nyou are<br/>\nno<br/>\n3<br/>\nhow are you<br/>\nno<br/>\nhow you<br/>\nno<br/>\nyou are good<br/>\nyes<br/>\n<br/>\n<h3>Output:</h3>\n1<br/>\n1<br/>\n<br/>\n<b>Explanation for example 1</b>: She smiles at the word \"pretty\"",
    "category_name": "main",
    "date_added": "5-02-2018",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/QM6P5A",
    "problem_tester": null,
    "time": {
        "view_start_date": 1518323400,
        "end_date": 1518325200,
        "practice_submission_allowed": true,
        "visible_start_date": 1518325200,
        "submit_start_date": 1518323400,
        "current": 1537433029
    },
    "user": {
        "username": ""
    }
}