{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Problem description</h3>\n<p>Sandip and Servesh are best friends. One day Sandip challenges Servesh to decrypt\na large binary number(\"<b>number containing 0's and 1's only</b>\") given in the form of a string. \nBeacause Sandip knows Servesh well, he remembers that Servesh is good with Binary Numbers. \nSo, he wants to make the question more interesting for him and therefore he converted the \nbinary number into it's equivalent quaternary number(\"<b>Quaternary is the base-4 numeral system. \nIt uses the digits 0, 1, 2 and 3 to represent any real number</b>\") and gave it to Servesh \nin form of string.\nSandip gave small hint to Servesh to decrypt the given string, which is as follows:\nSuppose decimal conversion of given string is <b>R</b>. Now <b>R</b> is divided by <b>power of 2 i.e (2^i, i=1,2,...k) till 2^i<=R</b>. Let the remainders after divisions are <b>r1,r2....,rk</b> respectively.So, the decrypted string will be the frequency of these remainders in respective order of occurrence. See example for more clarification.\n\n<br><br><b>Note: Output Empty String, if it is not possible to generate decrypted string.</b></p>\n\n\n<h3>Input</h3>\n<p>The first line of input consists of <b>T</b> denoting the total number of testcases.\n<br>Each testcase consists of two lines.\n<br>First line consists of an integer <b>N</b> denoting the length of the Quaternary number.\n<br>Second line consists of Quaternary number.</p>\n\n<h3>Output</h3>\n<p>For each test case, print the output as described.</p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>100</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>100000</b></li></ul>\n<br>\n<h3>Example</h3>\n<pre><b>Input:</b>\n\n3\n2\n23\n2\n32\n3\n211\n\n<b>Output:</b>\n\n12\n111\n23\n\n</pre>\n<h3>Explanation</h3>\n<p>Quaternary number is <b>23</b>.Now Decimal Representation of 23 will be 11(2*4<sup>1</sup>+3*4<sup>0</sup>).11 is divided by 2,4,8(powers of 2) till (powers of 2)<=11 and remainders will be 1,3,3 respectively.So, final decrypted string will be 12(Frequency of 1 is 1 and Frequency of 3 is 2 in this case).</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "19-04-2017",
    "is_direct_submittable": false,
    "contest_name": "IEM Coding Olympiad (IEMCO) 2017",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1493562600,
        "end_date": 1493573400,
        "practice_submission_allowed": true,
        "visible_start_date": 1493573400,
        "submit_start_date": 1493562600,
        "current": 1537433910
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>dwij28</span>",
    "problem_name": "Friend Decryption",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/dwij28'>dwij28</a>",
    "problem_tester_html_handle": "",
    "problem_author": "dwij28",
    "contest_code": "IEMCO17",
    "max_timelimit": "1",
    "problem_code": "FCRYPT"
}