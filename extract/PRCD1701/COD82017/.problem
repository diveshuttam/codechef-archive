{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p align=\"justify\">\nThe theme of ojass\u201917 is age of droid , so there were a robot  battle tournament . in this battle the skill level of two robots are such as if , In particular, robot i will beat robot j if and only if robot i has a higher skill level than robot j. And if robot i beats robot j and robot j beats robot k, then robot i will beat robot k. Here two robots can never have same skill level. Now,  sidharth is out trying some alternative job as he is a core member of ojass\u201917 . he needs to know about programming competition results as quickly as possible.\n</p>\n<p align=\"justify\">\nGiven the results of the  battles in the order in which they were played, determine the minimum number of first  battles that needed to take place before sidharth could order all of the robots by skill level.\n</p>\n<h3>Input</h3>\n<p align=\"justify\">\nThe first line of the input consists of two integers, the number of robots <b>n</b> (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000) and the number of battles <b>m</b> (1\u2264m\u2264min(100,000,(n(n-1))/2)).\n</p>\n<p>\nThe next <b>m </b>lines describe the results of the battles in the order they took place. Each consists of two integers <b>Ui</b> and <b>Vi</b>(1\u2009\u2264\u2009<b>Ui</b>,\u2009<b>Vi</b>\u2009\u2264\u2009<b>n</b>, <b>Ui</b>\u2009\u2260\u2009<b>Vi</b>), indicating that robot <b>Ui</b> beat robot <b>Vi</b> in the <b>i-th</b> rap battle. No two battles involve the same pair of robots.\n<br>It is guaranteed that at least one ordering of the robots satisfies all <b>m</b> relations.\n</p>\n<h3>Output</h3>\n<p>\nPrint the minimum k such that the ordering of the robots by skill level is uniquely defined by the first k rap battles. If there exists more than one ordering that satisfies all m relations, output -1.\n</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>2</b> \u2264 <b>n</b> \u2264 <b>100000</b></li>\n<li><b>1</b> \u2264 <b>m</b> \u2264 <b>min(100000,(n(n-1))/2))</b></li>\n<li><b>1</b> \u2264 <b>Ui,Vi</b> \u2264 <b>n,Ui\u2009\u2260\u2009Vi</b></li>\n</ul>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n4 5\n2 1\n1 3\n2 3\n4 2\n4 3\n<b>Output:</b>\n4\n</pre>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "14-03-2017",
    "is_direct_submittable": false,
    "contest_name": "Codiyapa",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "todo": false,
    "time": {
        "view_start_date": 1489829400,
        "end_date": 1489915800,
        "practice_submission_allowed": true,
        "visible_start_date": 1489915800,
        "submit_start_date": 1489829400,
        "current": 1537434004
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #666666;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>1&#9733;</span><span>rohit74</span>",
    "problem_name": "Robot Battle",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/rohit74'>rohit74</a>",
    "problem_tester_html_handle": "",
    "problem_author": "rohit74",
    "contest_code": "PRCD1701",
    "max_timelimit": "1",
    "problem_code": "COD82017"
}