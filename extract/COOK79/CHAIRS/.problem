{
    "problem_code": "CHAIRS",
    "problem_author": "kingofnumbers",
    "contest_name": "February Cook-Off 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>kingofnumbers</span>",
    "problem_name": "Chairs",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>errichto</span>",
    "contest_code": "COOK79",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/cook79'>cook79</a>, <a class='problem-tag-small ' href='/tags/problems/kingofnumbers'>kingofnumbers</a>, <a class='problem-tag-small ' href='/tags/problems/simple'>simple</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/COOK79/mandarin/CHAIRS.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/COOK79/russian/CHAIRS.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/COOK79/vietnamese/CHAIRS.pdf\">Vietnamese</a> as well.</h3>\n\n<p>\nThere are <b>N</b> chairs placed in circular order. Some of the chairs are empty while others have a child sitting in it. You are required to change the places of the children so that all the children sit next to each other (i.e. they form a connected segment). You can do that by doing the following operation a number of times:</p>\n\n<p>\nChoose a child and tell him to walk around the circle in clockwise order or anti-clockwise order until he finds the first empty chair, and tell him to sit there.</p>\n\n<p>\nWhat is the minimum number of operations required to make all children sit next to each other?\n</p>\n\n\n<h3>Input</h3>\n<p>\nThe first line contains <b>T</b>, the number of test-cases.</p>\n<p>\nThe first line of each test-case contains <b>N</b>, the number of chairs.</p>\n\n<p>The second line of each test-case contains a binary string of length <b>N</b>. If the <b>i</b>-th character is 1 then the <b>i</b>-th chair has a child initially. Otherwise (i.e. the <b>i</b>-th character is 0) it's empty.\n</p>\n\n<h3>Output</h3>\n<p>For each test case, output a single line containing a single integer donating minimum number of operations needed.</p>\n\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>5,000</b></li>\n<li><b>1</b> \u2264 sum of <b>N</b> in all test-cases \u2264 <b>10<sup>6</sup></b></li>\n<li>at least one chair will be occupied</li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n8\n10001010\n\n<b>Output:</b>\n2\n</pre>\n\n<h3>Explanation</h3>\n<p>The initial configuration is:\n<pre>       \n                 <b>1</b>\n              0    0\n           1          0\n              0    0\n                  1\n</pre></p>\n<p>We can tell the child who is <b>boldened</b> to move counter-clockwise, and the new configuration will be:\n<pre>       \n                 0\n              <b>1</b>    0\n           1          0\n              0    0\n                  1\n</pre></p>\n<p>because he has moved to the first empty chair on his way.</p>\n\n<p>Now, we again tell him to move counter-clockwise, and now the new configuration will be:\n<pre>       \n                 0\n              0    0\n           1          0\n              <b>1</b>    0\n                  1\n</pre></p>\n<p>because he moved counter-clockwise, found an occupied chair, and hence kept moving. The next chair was vacant, and he sat down there.</p>\n\n<p>Note that, in this example, we moved the same child twice, but this need not be the case. We can move different children in different moves.\n</p>\n<p>\nYou can check that this is the best we can do, and 2 is the minimum.\n</p>",
    "category_name": "main",
    "date_added": "14-02-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/CHAIRS",
    "problem_tester": "errichto",
    "time": {
        "view_start_date": 1487520000,
        "end_date": 1487529000,
        "practice_submission_allowed": true,
        "visible_start_date": 1487529000,
        "submit_start_date": 1487520000,
        "current": 1537434132
    },
    "user": {
        "username": ""
    }
}