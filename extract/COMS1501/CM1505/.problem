{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p dir=\"ltr\">\n<h2> They See Me Rollin</h2>\n</p>\n<p><br/><br />\nThis input refers to <a href=\"https://lh6.googleusercontent.com/ZCtN4g88OpHCAZUnOxKtL6czKu53zIp6FIPioLwH86A8UhL3eA-FjSZP-TCXdL2s0krejpWfOPDnsvfuYuxjBWn3GMWg9wlrdkAATLYZz84QZZvSjajcIGGu0GaPuD28YiflnBRM?w=362\">this</a> board</br/></p>\n<p><img src=\"https://lh6.googleusercontent.com/ZCtN4g88OpHCAZUnOxKtL6czKu53zIp6FIPioLwH86A8UhL3eA-FjSZP-TCXdL2s0krejpWfOPDnsvfuYuxjBWn3GMWg9wlrdkAATLYZz84QZZvSjajcIGGu0GaPuD28YiflnBRM?w=362\" /></p>\n<p><b>Output:</b><br />\n<br/></br/></p>\n<p dir=\"ltr\">\n    There are a series of zig-zag platforms, each platform of different length, making an angle of either 45 or 135 degrees with the horizontal. Let's say<br />\n    there are n such platforms (like those in the figure). A ball is dropped on the top most platform. The ball rolls down the platform and falls on the lower<br />\n    platform. The ball may or may not land on a platform, depending on the difference of length of the lower platform with the upper one. Finally the ball will<br />\n    fall on the last platform and then into the box. Note that the ball may not fall into the box when the last platform's length is short, in that case it<br />\n    will be a \"fall-through\".\n</p>\n<p><br/></br/></p>\n<p dir=\"ltr\">\n    For this program, you will have to specify the number of platforms n , the length of each platform and you have to determine which platforms the ball will<br />\n    fall on. The last line of output will be a string specifying whether the ball will fall into the box or not. Print \"SUCCESS\" if the ball falls into the<br />\n    box, else print \"FAIL\".\n</p>\n<p><br/></br/></p>\n<p dir=\"ltr\">\n<h3>Input</h3>\n</p>\n<p><br/></br/></p>\n<p dir=\"ltr\">\n    The first line consists of an integer specifying number of test cases T. For each test case, first line will specify the number of platforms N. Then,The<br />\n    next line contains N integers l1,\u2009...,\u2009ln separated by spaces each specify an integer corresponding to the platform length as Pli = li\u221a2. (i.e if l = 2<br />\n    then platform length will be 2\u221a2).\n</p>\n<p><br/></br/></p>\n<p dir=\"ltr\">\n<h3>  Output</h3>\n</p>\n<p><br/></br/></p>\n<p dir=\"ltr\">\n    Each line of output will specify the platform number on which the ball lands on. The last line of output will be a string, either \"SUCCESS\" or \"FAIL\",<br />\n    depending upon the status of ball in the box.\n</p>\n<p><h3>Sample Input</h3>\n</p><p>7<br/><br />\n7 2 8 10 24 16 44</br/></p>\n<p>\n<h3>Sample Output</h3>\n</p><p>1 3 5 7<br/><br />\nSUCCESS</br/></p>\n<div>\n    <br/>\n</br/></div>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "29-10-2015",
    "is_direct_submittable": false,
    "contest_name": "CodeMasters 1.0",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1446391800,
        "end_date": 1446402600,
        "practice_submission_allowed": true,
        "visible_start_date": 1446402600,
        "submit_start_date": 1446391800,
        "current": 1537435847
    },
    "problem_author_html_handle": "rajnish22222",
    "problem_name": "They See Me Rollin",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/rajnish22222'>rajnish22222</a>",
    "problem_tester_html_handle": "",
    "problem_author": "rajnish22222",
    "contest_code": "COMS1501",
    "max_timelimit": "1",
    "problem_code": "CM1505"
}