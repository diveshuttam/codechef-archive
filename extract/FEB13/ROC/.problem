{
    "problem_code": "ROC",
    "problem_author": "vinayak garg",
    "contest_name": "February 2013 Challenge",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>vinayak garg</span>",
    "problem_name": "Room Corner",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>laycurse</span>",
    "contest_code": "FEB13",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/ad-hoc'>ad-hoc</a>, <a class='problem-tag-small ' href='/tags/problems/easy'>easy</a>, <a class='problem-tag-small ' href='/tags/problems/feb13'>feb13</a>, <a class='problem-tag-small ' href='/tags/problems/vinayak garg'>vinayak garg</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>Rooms in Bytelandian houses are rather strange, they may or may not be exactly rectangular. But the walls of the room are aligned either vertically or horizontally to the town's XY axis. Additionally, each wall is integral in length. Thus the rooms are denoted by using the letters '-', '|', '+' and ' '. Let us denote a place occupied by one letter as <i>cell</i>. Here '-' specifies one unit of horizontal wall, '|' specifies one unit of vertical wall, and '+' means the wall turns in the center of the cell. For example, one of the valid rooms is the following:</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">   +-----+\n   |     +-------+\n+--+             |\n|          +-----+\n+-------+  |\n        |  |\n        +--+</span></code></pre><p>Also if you draw a horizontal segment whose the end points are in the room, then the whole of the segment is inside of the room. And there are other constraints for the rooms, please see Notes, Some samples of valid rooms for input, and Some samples of invalid rooms for input.</p>\n<p>How weird, but it gives a chance to lot of children to play a game together. The game starts with all children standing on corners of the room. More precisely, children stand on the nearest empty cell which is inside of the room. Each child stands in one corner, and all corners must be occupied. We only consider corners which make a 90 degree angle inside the room. Those that make 270 degree angle inside room are not considered as a corner. In the below figure, 1, 3, 4 are valid corners but 2 is not. Thus all the cells denoted by * will have one child.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">   1-----4\n   |*   *+-------+\n3--2            *|\n|*         +-----+\n+-------+  |\n        |**|\n        +--+</span></code></pre><p>Note that it is possible that the two corner has space for only one child, as shown below.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">+---\n|*\n+---</span></code></pre><p>In the game, a child can swap positions with a child standing at an adjacent corner. Thus, in the below figure, child 'A' can swap place with either 'B' or 'D', and child 'D' can swap place with either 'A' or 'E'. Inside a room many swaps can be taking place simultaneously, but each swap is between 2 children only. Also while swapping positions, children should keep one hand touching the wall, which means they can move only along the walls.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">   +-----+\n   |A   B+-------+\n+--+            C|\n|D         +-----+\n+-------+  |\n        |EF|\n        +--+</span></code></pre><p>Considering each child takes one second to walk to an adjacent empty cell, some pair of friends want to know the minimum time in which they can cross each other. Crossing happens when 2 children, both moving towards the corner of the other child (for swapping), meet briefly in the middle of swap. And a child can start to swap with other child only when both children stand at corners. For example, when child 'C' swaps with 'F', the swapping will be the following, and they cross with time = 4.5.<br />\n<img src=\"/download/extimages/d2cbb5b49aa69bb8a7beb63c0e53a934.png\" alt=\"\" /></p>\n<h3>Input</h3>\n<p>First line consists of an integer <b>N</b>. Then <b>N</b> lines follow to represent the room. Children are described as capital alphabets (A-Z), to specify the child standing next to a corner. There may be several children labelled with same alphabet. In row-major order, the first child with some alphabet <b>\u03b1</b> is referred to as <b>\u03b11</b>, the second as <b>\u03b12</b>, and the 123rd as <b>\u03b1123</b> and so on.</p>\n<p>After <b>N</b> lines, there is a line which contains <b>T</b>, the number of queries. Then <b>T</b> lines follow each containing a pair of space separated labels (character and number) to denote the pair of friends.</p>\n<h3>Output</h3>\n<p>For each of <b>T</b> given pair of friends, you have to output the minimum time in which the given pair of friends can cross each other, assuming that the pair of friends play intelligently and each pair starts from the original positions. Output <b>T</b> real numbers (2 places after decimal), one on each line.</p>\n<h3>Constraints</h3>\n<p>5 \u2264 <b>N</b> \u2264 2500<br/>3 \u2264 length of each of <b>N</b> lines (to describe a room) \u2264 2500<br/>1 \u2264 <b>T</b> \u2264 10000</br/></br/></p>\n<h3>Example</h3>\n<pre>\n<b>Input:</b>\n<code><span style=\"font-family:'Courier New','Courier',monospace\">7\n   +-----+\n   |A   B|\n+--+     |\n|C       |\n|        |\n|A      E|\n+--------+</span></code>\n2\nA1 E1\nC1 A2\n\n<b>Output:</b>\n6.00\n1.00\n</pre><h3>Notes</h3>\n<ul>\n<li>All the labels given in input are valid, that is, each label denotes one child in the room.\n</li><li>All children are inside of the room.\n</li><li>Children labelled by the same letter do not appear on the same horizontal line.\n</li><li>The room must satisfy the condition: If you draw a horizontal segment whose the end points are in the room, then the whole of the segment is inside of the room.\n</li><li>All empty cells, which are inside the room, are <a href=\"http://en.wikipedia.org/wiki/4-connected_neighborhood\">4-connected</a>, where an empty cell means a cell denoted by a space ' ' or a capital alphabet (A-Z).\n</li><li>For each of wall cells '-', '|' and '+', there is at least one empty cell, which is inside of the room, lying next (horizontally, vertically or diagonally) to each other.\n</li><li>For each of corner cells, there is a cell having a child in the next (diagonally) to the corner cell.\n</li><li>For each of cells having children, there is a corner cell in the next (diagonally) to the cell having a child.\n</li><li>There is at least one line of <b>N</b> lines (to describe a room), whose first character is not a space ' '.\n</li><li>The last character of each of <b>N</b> lines (to describe a room) does not be a space ' '.\n</li></ul>\n<h3>Some samples of valid rooms for input</h3>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">   +-----+\n   |A   B+-------+\n+--+            B|\n|A         +-----+\n+-------+  |\n        |AB|\n        +--+</span></code></pre><p>The room described in the above figure is valid.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">+-------------+\n|A           B|\n| +-----------+\n| |\n| |\n| +-----------+\n|C           D|\n+-------------+</span></code></pre><p>In the above figure, child 'B' can swap place with child 'D' directly.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">+-+\n|A++\n| B++\n|  C++\n|D  E|\n+----+</span></code></pre><p>The room described in the above figure is also valid.</p>\n<h3>Some samples of invalid rooms for input</h3>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">   +-----+\n   |A   B+-------+\n+--+             |\n|D         +-----+\n+-------+  |\n        |EF|\n        +--+</span></code></pre><p>\nIn the above figure, there are corners without children.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">   +-----+  +----+\n   |A   B+--+C  D|\n   |E           F|\n   +-------------+</span></code></pre><p>In the above figure, the room must satisfy the condition: If you draw a horizontal segment whose the end points are in the room, then the whole of the segment is inside of the room. And all lines start with spaces ' ', which also violates the constraints. Furthermore it also violates the constraint 5 \u2264 <b>N</b>.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">+----+\n|A  B|\n+-++-+\nE ||\n+-++-+\n|C  C|\n+----+</span></code></pre><p>In the above figure, all empty cells, which are inside the room, must be 4-connected. See the below figure, here, the empty cells (inside of the room) are denoted by *, and they are not 4-connected. And children labelled by the same letter must not appear on the same horizontal line. And child 'E' is outside of the room.</p>\n<pre><code><span style=\"font-family:'Courier New','Courier',monospace\">+----+\n|****|\n+-++-+\n  ||\n+-++-+\n|****|\n+----+</span></code></pre><pre><code><span style=\"font-family:'Courier New','Courier',monospace\">\n+----+\n|A  B|\n|    ++\n|C  D++\n+----+</span></code></pre><p>In the above figure, the right 2 cells with '+' must have adjacent empty cells.</p>\n",
    "category_name": "main",
    "date_added": "7-09-2012",
    "status": "success",
    "languages_supported": "C, JAVA, PYTH, PYTH 3.6, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/ROC",
    "problem_tester": "laycurse",
    "time": {
        "view_start_date": 1359828442,
        "end_date": 1360575000,
        "practice_submission_allowed": true,
        "visible_start_date": 1360575000,
        "submit_start_date": 1359828442,
        "current": 1537438532
    },
    "user": {
        "username": ""
    }
}