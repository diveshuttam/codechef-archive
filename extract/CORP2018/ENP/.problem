{
    "problem_code": "ENP",
    "problem_author": "jatin_cpp",
    "contest_name": "CodeRun - Prelims",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>jatin_cpp</span>",
    "problem_name": "Encrypted palindrome",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>ishu_05</span>",
    "contest_code": "CORP2018",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/corp2018'>corp2018</a>, <a class='problem-tag-small ' href='/tags/problems/easy'>easy</a>, <a class='problem-tag-small ' href='/tags/problems/jatin_cpp'>jatin_cpp</a>, <a class='problem-tag-small ' href='/tags/problems/strings'>strings</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span>Shubham loves palindromes. And he loves them so much so that he is willing to transform the strings he has to turn them to palindromes.\n\nFormally, given a string s, he takes subset of the characters of s and arranges them to form a palindrome. He wants to do it in such a way that length of palindrome is as big as it can get.\n\nTo save the strings from transformations, the government has decided to encrypt all the strings before he gets access to them to confuse him.\n\nEncryption pseudocode is as follows:   \n\n\tstring encrypt(string s, int x,int d)   \n\t\tstring encs=\"\";   \n\t\tfor i = 0 to length(s)   \n\t\t\tencs += charof( (val(s[i]) + x + i*d)%26 );   \n\t\t\t//val gives 0 for 'a', 1 for 'b' and so on   \n\t\t\t//charof gives 'a' for 0, 'b' for 1 and so on   \n\treturn\n\n\nBeing shubham's friend, you do not want to disappoint him.\nHelp him to find out the length of biggest palindrome he can make after decrypting the given string.\n\n###Input:\n\nFirst line contains the parameters x and d   \nSecond line contains the encrypted string s\n\n###Output:\nOutput the length of biggest palindrome Shubham can make after decrypting the given string.\n\n###Constraints \n- 0<=x,d<=25\n- 1<=length(s)<=10^6\n\n\n###Sample Input:\n\t1 1   \nhash\n\n###Sample Output:\n\t1\n\t\n###EXPLANATION:\n\"hash\" decrypts to \"gypd\".   \nFor \"gypd\", possible palindromes are \"g\", \"y\", \"p\" and \"d\".   \nMax length is 1.\n",
    "category_name": "main",
    "date_added": "21-04-2018",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/ENP",
    "problem_tester": "ishu_05",
    "time": {
        "view_start_date": 1524317400,
        "end_date": 1524324600,
        "practice_submission_allowed": true,
        "visible_start_date": 1524324600,
        "submit_start_date": 1524317400,
        "current": 1537432554
    },
    "user": {
        "username": ""
    }
}