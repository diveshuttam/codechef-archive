{
    "problem_code": "CHN15C",
    "problem_author": "arjunarul",
    "contest_name": "ACM-ICPC Asia-Chennai Site, First Round - Online Contest 2015",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;</span><span>arjunarul</span>",
    "problem_name": "Jimma and Chingam",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "ACMCHN15",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/acmchn15'>acmchn15</a>, <a class='problem-tag-small ' href='/tags/problems/arjunarul'>arjunarul</a>, <a class='problem-tag-small ' href='/tags/problems/dynamic-programming'>dynamic-programming</a>, <a class='problem-tag-small ' href='/tags/problems/easy-medium'>easy-medium</a>, <a class='problem-tag-small ' href='/tags/problems/inversions'>inversions</a>",
    "body": "<p>Jimma the cat had placed <b>N</b> bowls of cat food in a line. The amount of food in each bowl is an integer and is given to you as the array <b>A[1], A[2], ... , A[N]</b>, where <b>A[1]</b> is the amount of food in the leftmost bowl, and <b>A[N]</b> is the amount in the rightmost bowl. \n</p>\n\n<p>\nBut Chingam the kitten doesn't like unsorted sequences. In general, for an arbitrary sequence <b>B[1], B[2], ... , B[N]</b>, Chingam's <b>unhappiness</b> is defined as the number of inversions in that sequence. That is, <b>unhappiness</b> = number of pairs <b>(i,j)</b>, such that <b>i &lt; j</b> and <b>B[i] > B[j]</b>.\n</p>\n\n<p>\nNow, Chingam wants to take the bowls from the old line and create a new line with them, possibly re-ordered, so that his <b>unhappiness</b> is minimized. ie. let's say that after re-ordering, the bowls form the sequence <b>P[1], P[2], ... , P[N]</b>. That is, <b>P[1]</b> is the amount of food in the leftmost bowl of the new line and <b>P[N]</b> is the amount of food in the rightmost bowl of the new line. Then he wants to minimize his <b>unhappiness</b> with respect to this array P. <br/>\nNote that <b>P[1], P[2], ... , P[N]</b> will be a permutation of <b>A[1], A[2], ... , A[N]</b>.\n</p>\n\n<p>\nBut he follows a peculiar method to build the new line (which is initially empty) from the old line of bowls. He takes one bowl at a time from the old line and places it in the new line. Due to the limitations of his paws, Chingam can only pick a bowl which is the current leftmost or rightmost in the old line for each step. And he can place it only at the current right or left end of the new line. \n</p>\n\n<p>By doing this, Chingam gets a new sequence <b>P[1], P[2], ... , P[N]</b>. He wants to minimize his <b>unhappiness</b> with respect to this new sequence.\n</p>\n\n<p>\nFind out the minimum <b>unhappiness</b> that Chingam has to bear.\n</p>\n\n<h3>Input Format:</h3>\n<p>The first line contains one integer, <b>T</b>, the number of test cases.</p>\n<p>For each test case:</p>\n<p>The first line contains a single integer, <b>N</b>.</p>\n<p>The next line contains <b>N</b> integers: <b>A[1], A[2], ... , A[N]</b>.</p>\n\n<h3>Output Format:</h3>\n<p>Output one integer in a new line for each testcase: the minimum <b>unhappiness</b> achievable.</p>\n\n<h3>Constraints:</h3>\n<ul>\n<li><b>1 \u2264 T \u2264 10</b></li>\n<li><b>1 \u2264 N \u2264 100</b></li>\n<li><b>0 \u2264 A[i] \u2264 1000</b>, for all <b>i</b> in <b>1</b> to <b>N</b>.</li>\n</ul>\n\n<h3>Example:</h3>\n<pre>\n<b>Input:</b>\n1\n6\n5 3 4 3 2 7\n\n<b>Output:</b>\n1\n</pre>\n\n<h3>Explanation:</h3>\n<p>We show a sequence of moves which gives <b>unhappiness</b> = 1:</p>\n\n<pre>\nOld Line = 5 3 4 3 2 7\nNew Line = Empty\n\nOld Line = 3 4 3 2 7\nNew Line = 5\n\nOld Line = 3 4 3 2\nNew Line = 5 7\n\nOld Line = 4 3 2\nNew Line = 3 5 7\n\nOld Line = 3 2\nNew Line = 4 3 5 7\n\nOld Line = 2\nNew Line = 3 4 3 5 7\n\nOld Line = Empty\nNew Line = 2 3 4 3 5 7\n</pre>\n\n<p>Now, in this new line, <b>i = 3</b> and <b>j = 4</b> is the only pair which satisfies <b>i &lt; j</b> and <b>P[i] > P[j]</b>. Therefore, the <b>unhappiness</b> of this sequence is 1. You can verify that this is the minimum possible.\n</p>",
    "category_name": "main",
    "date_added": "26-10-2015",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/CHN15C",
    "problem_tester": null,
    "time": {
        "view_start_date": 1446035400,
        "end_date": 1446046800,
        "practice_submission_allowed": true,
        "visible_start_date": 1757036052,
        "submit_start_date": 1446035400,
        "current": 1537435857
    },
    "user": {
        "username": ""
    }
}