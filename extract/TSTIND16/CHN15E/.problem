{
    "problem_code": "CHN15E",
    "problem_author": "shangjingbo",
    "contest_name": "ACM-ICPC India Regionals, Practice Round 2016",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>shangjingbo</span>",
    "problem_name": "Tree Augmentation ",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "TSTIND16",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/acmchn15'>acmchn15</a>, <a class='problem-tag-small ' href='/tags/problems/graph'>graph</a>, <a class='problem-tag-small ' href='/tags/problems/graph-sqrt'>graph-sqrt</a>, <a class='problem-tag-small ' href='/tags/problems/hard'>hard</a>, <a class='problem-tag-small ' href='/tags/problems/shangjingbo'>shangjingbo</a>, <a class='problem-tag-small ' href='/tags/problems/tree'>tree</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\nA tree is one of the most beautiful data structures. Given a tree of <b>N</b> nodes (numbered <b>1</b> to <b>N</b>), we can augment it by connecting any pair of nodes which sharing one or more neighbour/s. In other words, the augmentation operation joins any nodes of tree within distance two with an edge. The resulting graph is called the augmented graph for the given tree. Due to having additional edges, the total number of edges in the augmented graph is <b>M</b>, instead of <b>N-1</b>.\n</p>\n\n<p>\nFortunately, <b>M</b> is not very large, and therefore, it is possible to reconstruct the tree given its augmented graph! In this problem, you are going to read the augmented graph and you have to find the original tree for that. Note that there might be different trees leading to the same augmented graph. <b>You may output any one of them.</b>\n</p>\n\n<h3>Input</h3>\n<p>The first line contains an integer <b>T</b> denoting the total number of test cases.</p>\n<p>In each test case, the first line contains two integers <b>N</b> and <b>M</b> denoting the number of nodes and edges in the augmented graph, respectively.</p>\n<p>This is followed by <b>M</b> lines containing two space-separated integers <b>a</b> and <b>b</b> denoting that there is an edge between vertex <b>a</b> and <b>b</b>.</p>\n\n<b>Note that it is always guaranteed that the input graph is always the augmented graph of some tree.</b>\n\n<h3>Output</h3>\n<p>For each test case, output <b>N-1</b> lines, each of which contains two space-separated integers indicating one edge in the original tree.</p>\n\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>10</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>10<sup>4</sup></b></li>\n<li><b>0</b> \u2264 <b>M</b> \u2264 <b>10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>a</b>, <b>b</b> \u2264 <b>N</b></li>\n<li>Augmented graph does not contain loop or multiple edges.</li>\n</ul>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n4 5\n1 2\n1 3\n3 4\n2 3\n1 4\n5 7\n1 2\n2 3\n3 4\n4 5\n1 3\n2 4\n3 5\n\n<b>Output:</b>\n1 2\n1 3\n3 4\n1 2\n2 3\n3 4\n4 5\n</pre>\n",
    "category_name": "main",
    "date_added": "25-10-2015",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/CHN15E",
    "problem_tester": null,
    "time": {
        "view_start_date": 1477056600,
        "end_date": 1477067400,
        "practice_submission_allowed": true,
        "visible_start_date": 1477067400,
        "submit_start_date": 1477056600,
        "current": 1537434452
    },
    "user": {
        "username": ""
    }
}