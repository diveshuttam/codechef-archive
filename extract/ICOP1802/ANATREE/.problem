{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3>Problem statement</h3>\n<p>\n\nTidu is very pr0, but he has one weakness: Trees (maybe because trees are big and he's a smoll boi)\n\n</br>\n</br>\n\nFormally, a tree is defined as a collection of N connected nodes with N-1 edges where there is only one path from a node u, to another node v.\n\n</br>\n</br>\n\nOne day a friend of Tidu's, Ayvanat, had an ugly tree of N nodes. The tree was ugly because the sum of values of nodes in the tree was not equal to his favourite number: a given K. Each node in the tree had a value associated with it A[i], where A[i] is either 0 or 1. \n\n</br>\n</br>\n\nAyvanat wants to make the tree beautiful by removing any number of nodes (and their edges) from the tree, such that the tree still remains connected. However, he immediately realises there might be too many ways to make a tree beautiful. Ayvanat asks Tidu for help since he's very pr0, but doesn't know of his weakness. Tidu turns to you for help.\n\n</br>\n</br>\n\nYour task is to count the number of ways to make the tree beautiful. Since the answer may very large, you should print it modulo 10^9 + 7.\n</p>\n\n\n<h3>Input</h3>\n<p>Input description.</p>\n\n<p>The first line contains one integer T - the number of test cases. Then T test cases follow.\n<p>The first line of each test case contains 2 integers N and K.</p>\n<p>The second line contains N integers a[1], a[2], ..., a[N].</p>\n<p>Then the next N - 1 line each contain pair of integers u and v (1 \u2264 u, v \u2264 N) denoting that there is an edge between u and v. It is guaranteed that these edges form a tree.</p>\n\n<h3>Output</h3>\n<p> For each test case, output a single line containing the answer, the number of ways to create a beautiful tree, modulo 10^9+7.</p>\n\n\n<h3>Constraints</h3>\n\n<p>Let SN be the sum of N over all test cases</p>\n\n<p>1 \u2264 SN \u2264 50000</p>\n\n<p>1 \u2264 K \u2264 100</p>\n\n<h3>Subtasks</h3>\n\n<p><b>Subtask 1: </b>SN <= 25</p>\n\n<p><b>Subtask 2: </b>SN <= 1000</p>\n\n<p><b>Subtask 3: </b>Original constraints</p>\n\n\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n3\n3 1\n1 0 1 \n1 2\n1 3\n5 2\n0 1 0 1 1\n1 2\n1 3\n1 4\n2 5\n3 0\n1 1 0\n1 2\n2 3\n\n<b>Output:</b>\n3\n5\n1\n</pre>\n<p>\u00a0</p>",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "26-10-2017",
    "is_direct_submittable": false,
    "contest_name": "ICO and ICPC 2018 Preparatory Series - Contest 2",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, CLOJ, COB, FS",
    "todo": false,
    "time": {
        "view_start_date": 1509111000,
        "end_date": 1509129000,
        "practice_submission_allowed": true,
        "visible_start_date": 1509129000,
        "submit_start_date": 1509111000,
        "current": 1537433406
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>sinbycos</span>",
    "problem_name": "Ayvanat and Ugly Tree",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/sinbycos'>sinbycos</a>",
    "problem_tester_html_handle": "",
    "problem_author": "sinbycos",
    "contest_code": "ICOP1802",
    "max_timelimit": "1",
    "problem_code": "ANATREE"
}