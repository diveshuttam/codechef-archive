{
    "problem_code": "SUBINVER",
    "problem_author": "gainullinildar",
    "contest_name": "May Lunchtime 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>gainullinildar</span>",
    "problem_name": "SubInversing",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>melfice</span>",
    "contest_code": "LTIME48",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/gainullinildar'>gainullinildar</a>, <a class='problem-tag-small ' href='/tags/problems/hashes'>hashes</a>, <a class='problem-tag-small ' href='/tags/problems/ltime48'>ltime48</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/persistence'>persistence</a>, <a class='problem-tag-small ' href='/tags/problems/segment-tree'>segment-tree</a>",
    "body": "<h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME48/mandarin/SUBINVER.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME48/russian/SUBINVER.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME48/vietnamese/SUBINVER.pdf\">Vietnamese</a> as well.</h3>\n\n<p>You initially start with a binary string S<sub>0</sub> which is of length <b>N</b> and has all 0s. You are then given <b>U</b> updates, which keep transforming the string. The i-th update transforms the string S<sub>i-1</sub> into S<sub>i</sub>, and hence after all the <b>U</b> updates you will be left with S<sub>U</sub>.</p> \n\n<p>A single update is of the form (<b>L<sub>i</sub></b>, <b>R<sub>i</sub></b>), which means that all the 1s in the range [<b>L<sub>i</sub></b>, <b>R<sub>i</sub></b>] (both end points included) should be changed into 0s, and all the 0s in that range should be changed to 1s.</p>\n\n<p>You need to find out which among the <b>U</b>+1 binary strings: S<sub>0</sub>, S<sub>1</sub>, .., S<sub>U</sub>, is lexicographically the largest, and print that string.</p>\n\n\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains two integers, <b>N</b>, and <b>U</b>, denoting the length of the string and number of updates respectively. </li>\n<li>The i-th of the next <b>U</b> lines contains two integers, <b>L<sub>i</sub></b> and <b>R<sub>i</sub></b>, which denotes that the i-th update is to swap all the values in the string which fall between the indices <b>L<sub>i</sub></b> and <b>R<sub>i</sub></b> (both inclusive). </li>\n \n<h3>Output</h3>\n<p>Output a single line containing one binary string - the lexicographically largest string among the <b>U</b>+1 strings.</p>\n \n<h3>Constraints</h3>\n<ul>\n<li>1 \u2264 <b>N, U</b> \u2264 100,000</li>\n<li>1 \u2264 <b> L<sub>i</sub> </b> \u2264 <b> R<sub>i</sub> </b> \u2264 <b>N</b></li>\n</ul>\n \n \n \n<h3>Subtasks</h3>\n<ul>\n<li>Subtask #1 (20 points): 1 \u2264 <b>N</b> \u2264 2000</li>\n<li>Subtask #2 (80 points): Original constraints.</li>\n</ul>\n \n \n \n \n<h3>Example</h3>\n \n<pre><b>Input:</b>\n10 10\n9 10\n6 10\n9 10\n1 8\n3 5\n3 3\n3 4\n3 9\n4 8\n7 7\n\n<b>Output:</b>\n1111100011\n</pre>\n \n<h3>Explanation</h3>\n<p>Let us see what happens in each operation:</p>\n<pre>\n<li>S<sub>0</sub> = 0000000000</li>\n<li>After the update, [9, 10], it becomes S<sub>1</sub> = 0000000011</li>\n<li>After the update, [6, 10], it becomes S<sub>2</sub> = 0000011100</li>\n<li>After the update, [9, 10], it becomes S<sub>3</sub> = 0000011111</li>\n<li>After the update, [1, 8], it becomes  S<sub>4</sub>  = 1111100011</li>\n<li>After the update, [3, 5], it becomes  S<sub>5</sub>  = 1100000011</li>\n<li>After the update, [3, 3], it becomes  S<sub>6</sub>  = 1110000011</li>\n<li>After the update, [3, 4], it becomes  S<sub>7</sub>  = 1101000011</li>\n<li>After the update, [3, 9], it becomes  S<sub>8</sub>  = 1110111101</li>\n<li>After the update, [4, 8], it becomes  S<sub>9</sub>  = 1111000001</li>\n<li>After the update, [7, 7], it becomes S<sub>10</sub> = 1111001001</li>\n</pre>\n\n<p>The lexicographically largest among these is 1111100011 and so, that is the answer.</p>",
    "category_name": "main",
    "date_added": "26-05-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "3",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/SUBINVER",
    "problem_tester": "melfice",
    "time": {
        "view_start_date": 1495893600,
        "end_date": 1495899840,
        "practice_submission_allowed": true,
        "visible_start_date": 1806896689,
        "submit_start_date": 1495893600,
        "current": 1537433861
    },
    "user": {
        "username": ""
    }
}