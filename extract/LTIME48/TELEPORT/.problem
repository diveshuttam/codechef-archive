{
    "problem_code": "TELEPORT",
    "problem_author": "gainullinildar",
    "contest_name": "May Lunchtime 2017",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>gainullinildar</span>",
    "problem_name": "Teleports",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>melfice</span>",
    "contest_code": "LTIME48",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/gainullinildar'>gainullinildar</a>, <a class='problem-tag-small ' href='/tags/problems/ltime48'>ltime48</a>, <a class='problem-tag-small ' href='/tags/problems/medium-hard'>medium-hard</a>, <a class='problem-tag-small ' href='/tags/problems/segment-tree'>segment-tree</a>, <a class='problem-tag-small ' href='/tags/problems/sqrt-decomp'>sqrt-decomp</a>",
    "body": "<h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME48/mandarin/TELEPORT.pdf\">Mandarin Chinese</a>, <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME48/russian/TELEPORT.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/LTIME48/vietnamese/TELEPORT.pdf\">Vietnamese</a> as well.</h3>\n\n<p>Teleports are magical devices. If there is a teleport located at point (x, y) and has radius <b>R</b>, then it can transport a person from any point (a, b) such that |x-a|+|y-b| \u2264 <b>R</b> to any point (c, d) such that |x-c|+|y-d| \u2264 <b>R</b>.</p>\n\n<p>Initially there are no teleports. You need to process operations of two types:</p>\n<ul>\n<li>Add a new teleport at the location (<b>x</b>, <b>y</b>)</li>\n<li>Report whether it is possible to reach teleport <b>j</b> from teleport <b>i</b>, where by teleport <b>i</b>, we mean the teleport added during the i-th operation</li>\n</ul>\n<p></p>\n<p>Note that you can transport from a teleport to a location which does not contain a teleport as well.</p>\n \n<h3>Input</h3>\n <ul>\n<li>The first line of the input contains two integers, <b>Q</b>, and <b>R</b>, denoting the total number of operations and the radius of each teleport.</li>\n\n<li>The i-th of the next <b>Q</b> lines contains one operation, which will be one of the following two types:</p>\n\n<ul>\n<li>+ <b>x y</b> \u2014 add a new teleport at location (<b>x</b>, <b>y</b>). This teleport will be called teleport i.</li>\n<li>? <b>i j</b> \u2014 Report whether it is possible to reach teleport <b>j</b> from teleport <b>i</b></li>\n</ul>\n</li>\n</ul>\n \n<h3>Output</h3>\n \n<p>For each operation, output a single line containing \"DA\" (without quotes) if we can reach teleport <b>j</b> from teleport <b>i</b> or \"NET\" (without quotes) otherwise.</p>\n \n \n<h3>Constraints</h3>\n \n<ul>\n<li>1 \u2264 <b>Q</b>, <b>R</b>, <b>x</b>, <b>y</b> \u2264 100,000</li>\n<li> It is guaranteed that all operations are valid. In particular, if there is an operation of the form ? i j, then it is guaranteed that the i-th and j-th operations were insert operations.</li>\n</ul>\n \n \n<h3>Subtasks</h3>\n<ul>\n<li>Subtask #1 (30 points): 1 \u2264 <b>Q</b> \u2264 2000</li>\n<li>Subtask #2 (70 points): Original constraints.</li>\n</ul>\n \n<h3>Example</h3>\n<pre><b>Input:</b>\n5 1\n+ 2 2\n+ 3 3\n? 1 2\n+ 100 3\n? 2 4\n\n<b>Output:</b>\nDA \nNET\n</pre>\n \n \n<h3>Explanation</h3>\n \n<p>The first two operations make us add teleports at the locations (2, 2) and (3, 3).</p>\n<p> Then, we need to find if the 2nd teleport can be reached from the 1st teleport. From teleport at (2, 2) we can reach the point (2, 3) (because |2-2|+|2-3| <=1), and then from the point (2, 3) we can go to (3, 3) by using the teleport at (3, 3) (because |2-3|+|3-3| <= 1). Hence, the answer is DA.</p>\n<p> Then we add teleport 4 at (100, 3).</p>\n<p> In the last operation, we are asked whether we can reach the teleport at (100, 3) from the teleport at (3, 3). We cannot, and hence the answer is NET.</p>",
    "category_name": "main",
    "date_added": "26-05-2017",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "5",
    "problem_status": "unattempted",
    "editorial_url": "https://discuss.codechef.com/problems/TELEPORT",
    "problem_tester": "melfice",
    "time": {
        "view_start_date": 1495893600,
        "end_date": 1495899840,
        "practice_submission_allowed": true,
        "visible_start_date": 1806896688,
        "submit_start_date": 1495893600,
        "current": 1537433860
    },
    "user": {
        "username": ""
    }
}