{
    "status": "success",
    "problem_status": "unattempted",
    "problem_tester": null,
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><p>\u00a0</p>\n<p>A Kingdom consists of a square array of cities that has paths connecting some of the pairs of adjacent cities. Some squares are formed of certain size from these paths. Vader can only destroy cities which are part of some squares. Help Vader in annexing the kingdom by finding out total number of squares in the Kingdom.Assume that the city in the top-left corner is indexed as ( 1,1 ).</p>\n<p>\u00a0</p>\n<h3>Input</h3>\n<p>Input starts with number of testcases T.<br />\nEach test case has integers n and m , where n represents the size of the square array of the Kingdom and m represents number of interconnecting paths.<br />\nEach of the next m lines are one of the type :</p>\n<p>H i j : indicates a horizontal path from city ( i , j ) to the city ( i , j+1 ).<br />\nOR<br />\nV i j : indicates a vertical path from city ( i , j ) to the city ( i+1 , j )\n</p>\n<p>\u00a0</p>\n<h3>Output</h3>\n<p>Output total number of squares in each test case in newline.\n</p>\n<p>\u00a0</p>\n<h3>Constraints</h3>\n<p>1&lt;=T&lt;=5</p>\n<p>2&lt;=n&lt;=9\n</p>\n<p>\u00a0</p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n3\n10 \nH 1 1\nH 1 2\nH 2 1\nH 3 1\nH 3 2\nV 1 1\nV 1 2\nV 1 3\nV 2 1\nV 2 3\n\n\n<b>Output:</b>\n2\n</pre><p>\u00a0</p>\n<h3>Explanation</h3>\n<p><b>It is evident from the image shown below.<br />\n</b> </p>\n<p><img src='http://s27.postimg.org/k8389p6yr/Screenshot.png' border='0' alt=\"Screenshot\" /></p>\n",
    "category_name": "main",
    "user": {
        "username": ""
    },
    "date_added": "17-12-2015",
    "is_direct_submittable": false,
    "contest_name": "Shaastra Online Programming Contest",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "todo": false,
    "time": {
        "view_start_date": 1450539000,
        "end_date": 1450552500,
        "practice_submission_allowed": true,
        "visible_start_date": 1450552500,
        "submit_start_date": 1450539000,
        "current": 1537435738
    },
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #3366CC;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>3&#9733;</span><span>partha278</span>",
    "problem_name": "Vader and his Annexure",
    "source_sizelimit": "50000",
    "tags": "<a class='problem-tag-small ' href='/tags/problems/partha278'>partha278</a>",
    "problem_tester_html_handle": "",
    "problem_author": "partha278",
    "contest_code": "SOPC2015",
    "max_timelimit": "0.01",
    "problem_code": "SOPC1506"
}