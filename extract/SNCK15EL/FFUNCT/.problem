{
    "problem_code": "FFUNCT",
    "problem_author": "xcwgf666",
    "contest_name": "CodeChef Snackdown 2015 : Online Elimination Round",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;</span><span>xcwgf666</span>",
    "problem_name": "Fun and Functions",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "SNCK15EL",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/snck15el'>snck15el</a>, <a class='problem-tag-small ' href='/tags/problems/xcwgf666'>xcwgf666</a>",
    "body": "<span class=\"solution-visible-txt\">All submissions for this problem are available.</span><h3> Read problems statements in <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCK15EL/mandarin/FFUNCT.pdf\">Mandarin Chinese </a> , <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCK15EL/russian/FFUNCT.pdf\">Russian</a> and <a target=\"_blank\" href=\"http://www.codechef.com/download/translated/SNCK15EL/vietnamese/FFUNCT.pdf\">Vietnamese</a></h3>\n\n\n<p>You are given <b>N</b> boolean functions. Formally, each boolean function is a mapping from <b>{0, 1}<sup>K</sub></b> to <b>{0, 1}</b>, where <b>K</b> is a number of variables of the function. Different functions in this problem can have different parameters of <b>K</b>.</p> \n\n<p>We describe a boolean function <b>F(x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>K</sub>)</b> by a string of <b>2<sup>K</sup></b> characters. Let's enumerate these characters from <b>0</b> to <b>2<sup>K</sup>-1</b>. Let's take the <b>i</b>-th character of this string. This character will correspond to the value of the boolean function <b>F</b> on the set of parameters, corresponding to the last <b>K</b> bits of <b>i</b> in binary representation. For better understanding, let us have boolean function of <b>K = 3</b> variables, described by a string <b>S = 10101010</b>. The value of <b>F(0, 0, 0)</b> is one, because in binary representation \"000\" is zero, and <b>S[0] = 1</b>. The value of F(0, 1, 1) is zero, because \"011\" in binary representation is three, and <b>S[3] = 0</b>.</p>\n\n<p>Consider a set of boolean functions <b>{F<sub>1</sub>, F<sub>2</sub>, ..., F<sub>M</sub>}</b>. We can combine the functions of this set, thus, obtaining the new functions. One function can be used as much times as possible in a single combination. For example, if we have set of two functions: <b>{F<sub>1</sub>(x<sub>1</sub>, x<sub>2</sub>), F<sub>2</sub>(y<sub>1</sub>, y<sub>2</sub>, y<sub>3</sub>)}</b>, we can obtain the following functions:\n<ul>\n<li><b>G<sub>1</sub>(z<sub>1</sub>, z<sub>2</sub>, z<sub>3</sub>, z<sub>4</sub>) = F<sub>1</sub>(F<sub>2</sub>(z<sub>1</sub>, z<sub>2</sub>, z<sub>3</sub>), F<sub>2</sub>( z<sub>2</sub>, z<sub>3</sub>, z<sub>4</sub>))</b></li>\n\n<li><b>G<sub>2</sub>(z<sub>1</sub>, z<sub>2</sub>, z<sub>3</sub>, z<sub>4</sub>, z<sub>5</sub>) = F<sub>1</sub>(F<sub>2</sub>(z<sub>1</sub>, z<sub>2</sub>, z<sub>3</sub>), F<sub>2</sub>( z<sub>2</sub>, z<sub>3</sub>, z<sub>4</sub>))</b></li>\n\n<li><b>G<sub>3</sub>(z<sub>1</sub>, z<sub>2</sub>, z<sub>3</sub>, z<sub>4</sub>) = F<sub>1</sub>(F<sub>2</sub>(z<sub>1</sub>, z<sub>2</sub>, z<sub>3</sub>), F<sub>1</sub>( z<sub>2</sub>, z<sub>4</sub>))</b></li>\n\n<li><b>G<sub>4</sub>(z<sub>1</sub>) = F<sub>1</sub>(F<sub>2</sub>(z<sub>1</sub>, z<sub>1</sub>, z<sub>1</sub>), F<sub>1</sub>( z<sub>1</sub>, z<sub>1</sub>))</b></li>\n\n<li><b>G<sub>5</sub>(z<sub>1</sub>, z<sub>2</sub>, z<sub>3</sub>, z<sub>4</sub>) = F<sub>1</sub>(F<sub>1</sub>( F<sub>1</sub>(z<sub>1</sub>, z<sub>2</sub>), F<sub>1</sub>(z<sub>1</sub>, z<sub>2</sub>)), F<sub>1</sub>( F<sub>1</sub>(z<sub>3</sub>, z<sub>4</sub>), F<sub>1</sub>(z<sub>3</sub>, z<sub>4</sub>)))</b></li>\n\n<li>These are just examples. In fact, you can obtain an infinite number of boolean functions by combination of boolean functions from any non-empty set of boolean functions.</li>\n\n</ul>\n</p>\n\n<p>We will call a set of boolean functions appropriate in case any boolean function of any number of variables can be obtained by combining boolean functions from this set.</p>\n\n<p>There is an array of boolean functions. You are to maintain two types of queries:\n\n<ul>\n\n<li><b>u p S</b> - the <b>p</b>-th boolean function becomes equal to the one that is described by a string <b>S</b>. You can assume that <b>S</b> will always denote a boolean function, i.e. its' length will always be equal to a power of two.</li>\n\n<li><b> q L R</b> - write out the boolean functions from the <b>L</b>-th to the <b>R-th</b> inclusively. Calculate the number of subsets of the obtained multiset of functions that are appropriate. This number can be huge, so please evaluate it modulo <b>10<sup>9</sup>+7</b>.</li>\n\n</ul>\n\n</p>\n\n<h3>Input</h3>\n<p>The first line of input contains a single integer <b>N</b>, denoting the number of functions.</p>\n\n<p>Each of the following <b>N</b> will contain <b>2<sup>K<sub>i</sub></sup></b> characters, each of them will be either zero or one and will denote the value of the boolean function on the corresponding set of variables. Here, <b>K<sub>i</sub></b> is the number of variables in the <b>i</b>-th boolean function.</p>\n\n<p>The next line contains a single integer <b>Q</b>, denoting the number of queries.</p>\n\n<p>The following <b>Q</b> lines describe the queries in the format described above.</p>\n\n<h3>Output</h3>\n<p>For each q-type query output a line, containing an answer to the problem (i.e. the required number of subsets), modulo <b>10<sup>9</sup>+7</b>.</p>\n\n<h3>Constraints</h3>\n<p>\n<ul>\n<li><b>1 \u2264 N, Q \u2264 10<sup>5</sup></b></li>\n<li><b>1 \u2264 L \u2264 R \u2264 N</b></li>\n<li><b>1 \u2264 p \u2264 N</b></li>\n<li><b>2 \u2264 |S| \u2264 16. |S|</b> will always be a power of two.</li>\n<li><b>1 \u2264 K<sub>i</sub> \u2264 4</b></li>\n</ul>\n</p>\n\n<h3>Example</h3>\n<pre><b>Input:</b>\n3\n0001\n0111\n10\n3\nq 1 3\nu 3 10101010\nq 2 3\n\n<b>Output:</b>\n3\n1\n</pre>\n<p>\u00a0</p>\n\n<h3>Explanation</h3>\n<p>The first function of an initial array corresponds to conjunction (AND operation), the second one corresponds to disjunction (OR operation) and the third one corresponds to negation (NOT operation).</p>\n\n<p>In the second query we replace the third function in the array (negation) to the function that does not have a common name.</p>",
    "category_name": "main",
    "date_added": "7-03-2015",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, SCALA, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, PERL6, TEXT, SCM chicken, CLOJ, FS",
    "max_timelimit": "1",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/FFUNCT",
    "problem_tester": null,
    "time": {
        "view_start_date": 1434124800,
        "end_date": 1434135600,
        "practice_submission_allowed": true,
        "visible_start_date": 1434141000,
        "submit_start_date": 1434124800,
        "current": 1537436269
    },
    "user": {
        "username": ""
    }
}