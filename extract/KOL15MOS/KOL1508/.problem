{
    "problem_code": "KOL1508",
    "problem_author": "piyushkumar",
    "contest_name": "ACM-ICPC Asia-Kolkata Onsite Mirror Contest 2015",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;</span><span>piyushkumar</span>",
    "problem_name": "Antichains",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "KOL15MOS",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/acm15kol'>acm15kol</a>, <a class='problem-tag-small ' href='/tags/problems/combinatorics'>combinatorics</a>, <a class='problem-tag-small ' href='/tags/problems/piyushkumar'>piyushkumar</a>, <a class='problem-tag-small ' href='/tags/problems/sperners'>sperners</a>, <a class='problem-tag-small ' href='/tags/problems/theorem'>theorem</a>",
    "body": "<p>Given an integer <b>N</b>, let <b>F<sub>N</sub></b> be the set of factors of <b>N</b>. e.g., <b>F<sub>6</sub></b> = {1,2,3,6}.</p>\n<p>The radical of an integer <b>N</b>, denoted by <b>rad(N)</b>, is defined as the product of the distinct prime factors of <b>N</b>. e.g., <b>rad(12)</b> = 2 * 3 = 6.</p>\n<p>Define an <b>antichain</b> of a set <b>S</b> of integers to be a subset of <b>S</b> such that for any two elements x and y in the antichain, rad(x) and rad(y) do not divide each other. e.g., antichains in <b>F<sub>6</sub></b> are {}, {1}, {2}, {3}, {6} and {2,3}.</p>\n<p>Given <b>N</b>, find the size of the largest antichain of <b>F<sub>N</sub></b>, and the number of antichains of F<sub>N</sub> of that size. Since the answers can be large, print both of them modulo <b>(10<sup>9</sup>+7)</b>.</p>\n<p>e.g., if <b>N</b> = 6, the largest antichain is of size 2, and there is only 1 antichain of that size.</p>\n<p>Since <b>N</b> can be large, the input is the prime factorization of <b>N</b>. The input has two arrays of size <b>M</b>: <b>base</b> and <b>power</b>, and <b>N = base<sub>1</sub><sup>power<sub>1</sub></sup> * base<sub>2</sub><sup>power<sub>2</sub></sup> * &hellip; * base<sub>M</sub><sup>power<sub>M</sub></sup></b>.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line contains <b>T</b>, the number of test cases. Description of the <b>T</b> test cases follows.\n</li><li>Each test case starts with a single integer <b>M</b>.\n</li><li>The next <b>M</b> lines each contain 2 integers separated by a space. The <b>i</b><sup>th</sup> line contains <b>base<sub>i</sub></b> and <b>power_i.</b>\n</li></ul>\n<h3>Output</h3>\n<ul>\n<li>For each test case, output one line containing two space-separated integers, respectively the size of the largest antichain modulo (10<sup>9</sup>+7) and the number of antichains of that size, again modulo (10<sup>9</sup>+7).\n</li></ul>\n<h3>Constraints</h3>\n<ul>\n<li> 1 \u2264 T \u2264 10\n</li><li> 1 \u2264 M \u2264 10<sup>5</sup>\n</li><li> 2 \u2264 base<sub>i</sub> \u2264 10<sup>9</sup>\n</li><li> 1 \u2264 power_i \u2264 10<sup>9</sup>\n</li><li> base<sub>i</sub> is a prime number for all 1 \u2264 i \u2264 M\n</li><li> For any 1 \u2264 i \u2260 j \u2264 M, base<sub>i</sub> \u2260  base<sub>j</sub>\n</li></ul>\n<p><br/><br />\n<b>NOTE: Input files can be large. Please use fast input methods (e.g. scanf in C/C++, BufferedReader in Java)</b></br/></p>\n<h3>Example</h3>\n<pre><b>Input:</b>\n2\n2\n2 1\n3 1\n2\n2 2\n3 1\n\n<b>Output:</b>\n2 1\n2 2\n</pre><h3>Explanation</h3>\n<p><b>Example case 1. </b>The largest antichain size is 2, and there is only one of it {2,3}</p>\n<p><b>Example case 2. </b>The largest antichain size is 2, and there are two of those: {2,3} and {4,3}</p>\n",
    "category_name": "main",
    "date_added": "10-12-2015",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA",
    "max_timelimit": "1.5",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/KOL1508",
    "problem_tester": null,
    "time": {
        "view_start_date": 1451107800,
        "end_date": 1451125800,
        "practice_submission_allowed": true,
        "visible_start_date": 1762148607,
        "submit_start_date": 1451107800,
        "current": 1537435701
    },
    "user": {
        "username": ""
    }
}