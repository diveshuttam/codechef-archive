{
    "problem_code": "KOL1503",
    "problem_author": "devuy11",
    "contest_name": "ACM-ICPC Asia-Kolkata Onsite Mirror Contest 2015",
    "todo": false,
    "problem_author_html_handle": "<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;</span><span>devuy11</span>",
    "problem_name": "The Parenthesis Tree",
    "source_sizelimit": "50000",
    "problem_tester_html_handle": "",
    "contest_code": "KOL15MOS",
    "is_direct_submittable": false,
    "tags": "<a class='problem-tag-small ' href='/tags/problems/acm15kol'>acm15kol</a>, <a class='problem-tag-small ' href='/tags/problems/ancestors'>ancestors</a>, <a class='problem-tag-small ' href='/tags/problems/balanced'>balanced</a>, <a class='problem-tag-small ' href='/tags/problems/common'>common</a>, <a class='problem-tag-small ' href='/tags/problems/devuy11'>devuy11</a>, <a class='problem-tag-small ' href='/tags/problems/lowest'>lowest</a>, <a class='problem-tag-small ' href='/tags/problems/parentheses'>parentheses</a>",
    "body": "<p>\nSamosa Bhai and Jalebi Bai are taking cooking classes from CodeChef. CodeChef, as the name suggests, is also a coding enthusiast. So he decides to get his pupils interested in coding.</p>\n<p>\nFor this, he takes them both to a strange tree made up of <b>N</b> nodes. Each of these nodes is of one of the following two types \u2014 nodes containing open parenthesis <b>\u2018(\u2019</b> and nodes containing closed parenthesis <b>\u2018)\u2019</b>. CodeChef asks the students <b>Q</b> queries, where in each query they have to find out if the path between two given nodes is a balanced parentheses string or not. If they solve all the queries, they will get to eat the special Christmas cake made by CodeChef.\n</p>\n<p>\nSamosa Bhai and Jalebi Bai are lazy kids, but they also want to eat the cake. So they ask you for help.\n</p>\n<p><b>Note:</b> A balanced parentheses string means that each opening parenthesis has a corresponding closing parenthesis and the pairs of parentheses are properly nested.</p>\n<h3>Input</h3>\n<p>The first line contains <b>T</b>, the number of test cases to follow.</p>\n<p>Each test case begins with <b>N</b> and <b>Q</b>, the number of nodes in the tree and the number of queries to follow.</p>\n<p><b>N-1</b> lines follow. Each line contains 2 space-separated integers, <b>x</b> and <b>y</b>, which denotes that there is an edge between them.</p>\n<p>The next line contains <b>N</b> space-separated parentheses. The <b>ith</b> parenthesis denotes the value on the <b>ith</b> node.</p>\n<p>The <b>Q</b> queries follow. Each query contains two space-separated integers <b>u</b> and <b>v</b>.</p>\n<h3>Output</h3>\n<p>For each query, output \"<b>Yes</b>\" [without quotes] if the path from <b>u</b> to <b>v</b> is a balanced parentheses string and \"<b>No</b>\" [without quotes] if the path from <b>u</b> to <b>v</b> is not a balanced parentheses string.</p>\n<h3>Constraints</h3>\n<ul>\n<li><b>1</b> \u2264 <b>T</b> \u2264 <b>1000</b></li>\n<li><b>1</b> \u2264 <b>N</b> \u2264 <b>10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>Q</b> \u2264 <b>3*10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>Sum of N over all cases</b> \u2264 <b>10<sup>5</sup></b></li>\n<li><b>1</b> \u2264 <b>Sum of Q over all cases</b> \u2264 <b>3*10<sup>5</sup></b></li>\n</ul>\n<h3>Example</h3>\n<pre><b>Input:</b>\n1\n6 4\n1 2\n2 5\n1 3\n3 6\n3 4\n) ( ) ) ( (\n5 3\n3 5\n2 4\n6 2\n\n<b>Output:</b>\nYes\nNo\nNo\nNo\n\n</pre><h3>Explanation</h3>\n<p><b>Example case 1.</b> </p>\n<ul>\n<li><b>Query 1:</b> The path contains (()).</li>\n<li><b>Query 2:</b> The path contains ))((.</li>\n<li><b>Query 3:</b> The path contains ())).</li>\n<li><b>Query 4:</b> The path contains ())(.</li>\n</ul>\n\n<p><br /><br />\n<b>NOTE:</b> Input files can be large. Please use fast input methods (E.g. scanf in C / C++, BufferedReader in Java)</p>\n",
    "category_name": "main",
    "date_added": "8-12-2015",
    "status": "success",
    "languages_supported": "C, CPP14, JAVA",
    "max_timelimit": "2",
    "problem_status": "unattempted",
    "editorial_url": "http://discuss.codechef.com/problems/KOL1503",
    "problem_tester": null,
    "time": {
        "view_start_date": 1451107800,
        "end_date": 1451125800,
        "practice_submission_allowed": true,
        "visible_start_date": 1762148606,
        "submit_start_date": 1451107800,
        "current": 1537435696
    },
    "user": {
        "username": ""
    }
}